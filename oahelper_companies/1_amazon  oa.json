[
    {
        "id": 2,
        "title": "Inventory Alignment Optimization",
        "problem_statement": "<div class=\\\\\\\"problem-container\\\\\\\">\\\n    <h2 class=\\\\\\\"problem-title\\\\\\\">Code Question 2</h2>\\\n    \\\n    <div class=\\\\\\\"problem-description\\\\\\\">\\\n        <p>In the world of Amazon\\\\\\'s vast inventory management, you face a challenge of optimizing two inventories, <em>inv1</em> and <em>inv2</em>, each containing <em>n</em> elements.</p>\\\n        \\\n        <p>Your goal is to maximize the similarity between these inventories. The similarity is measured by the number of indices <em>i</em> (0 ≤ i < n) where <em>inv1[i]</em> equals <em>inv2[i]</em>.</p>\\\n        \\\n        <p>Amazon provides a unique tool, the \\\\\\\"Inventory Optimizer\\\\\\\". This tool allows you to perform the following operation:</p>\\\n        <ul>\\\n            <li>Select two distinct indices <em>i</em> and <em>j</em> (where 0 ≤ i, j < n and i ≠ j), provided that the i<sup>th</sup> element of <em>inv1</em> is positive.</li>\\\n            <li>Apply the operation: add 1 to <em>inv1[j]</em> and subtract 1 from <em>inv1[i]</em>.</li>\\\n        </ul>\\\n        \\\n        <p>Using the Inventory Optimizer, you can perform this operation any number of times (including zero) to maximize the similarity between inv1 and inv2.</p>\\\n    </div>\\\n\\\n    <div class=\\\\\\\"function-description\\\\\\\">\\\n        <h3>Function Description</h3>\\\n        <p>Complete the function getMaxEqualIndices in the editor below.</p>\\\n        <p>getMaxEqualIndices has the following parameters:</p>\\\n        <ul>\\\n            <li><code>int inv1[n]</code>: an array of integers</li>\\\n            <li><code>int inv2[n]</code>: an array of integers</li>\\\n        </ul>\\\n        \\\n        <h4>Returns</h4>\\\n        <p><code>int</code>: maximum similarity of the two inventories inv1, inv2 after the operations.</p>\\\n    </div>\\\n\\\n    <div class=\\\\\\\"constraints\\\\\\\">\\\n        <h3>Constraints</h3>\\\n        <ul>\\\n            <li>1 ≤ n ≤ 10<sup>5</sup></li>\\\n            <li>1 ≤ inv1[i], inv2[i] ≤ 10<sup>4</sup></li>\\\n        </ul>\\\n    </div>\\\n\\\n    <div class=\\\\\\\"examples\\\\\\\">\\\n        <h3>Examples</h3>\\\n        \\\n        <div class=\\\\\\\"example\\\\\\\">\\\n            <h4>Example 1:</h4>\\\n            <pre class=\\\\\\\"example-details\\\\\\\">\\\nn = 3\\\ninv1 = [2, 4, 1]\\\ninv2 = [1, 2, 3]</pre>\\\n            \\\n            <div class=\\\\\\\"explanation\\\\\\\">\\\n                <ul>\\\n                    <li>Apply the operation on indices i = 2 and j = 0, which makes inv1 = [1, 4, 2].</li>\\\n                    <li>Next, apply the operation on indices i = 2 and j = 1, which updates inv1 = [1, 3, 3].</li>\\\n                </ul>\\\n                <p>Now, there are two indices, i = 0 and i = 2, for which inv1[i] = inv2[i]. Since it\\\\\\'s impossible to make the elements at all indices of the two arrays equal, the answer is 2.</p>\\\n            </div>\\\n        </div>\\\n\\\n        <div class=\\\\\\\"example\\\\\\\">\\\n            <h4>Sample Case 0:</h4>\\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\\n2\\\ninv1 = [2, 2]\\\ninv2 = [3, 1]</pre>\\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\\n2</pre>\\\n            <div class=\\\\\\\"explanation\\\\\\\">\\\n                <p>Apply the operation on indices i = 0, j = 1, which results in inv1 = [3, 1]. Now, for indices i = 0 and i = 1, we have inv1[i] = inv2[i]. Thus, the answer is 2.</p>\\\n            </div>\\\n        </div>\\\n    </div>\\\n</div>",
        "google_doc_link": "https://github.com/cphelper/OAbycphelper/tree/d197fb964a754554270edeec6809bf159d85fb49/Amazon%20Intern/Inventory%20Alignment%20Optimization",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 3,
        "title": "Minimum Network Lag Optimization",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Code Question 1</h2>\n\n<div class=\"problem-description\">\n        <p>An AWS client has brought servers and databases from data centers in different parts of the world for their application. For simplicity, let's assume all the servers and data centers are located on a 1-dimensional line.</p>\n\n<p>You have been given the task of optimizing the network connection. Each data center must be connected to a server. The positions of n data centers and n servers are given in the form of arrays. Any particular data center, center[i], can deliver to any particular server destination, destination[j]. The lag is defined distance between a data center at location x and a server destination at location y is |x - y|, i.e., the absolute difference between x and y. Determine the minimum lag to establish the entire network.</p>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getMinDistance</code> in the editor below.</p>\n\n<p>getMinDistance has the following parameter(s):</p>\n        <ul>\n            <li><code>int center[n]</code>: the positions of data centers</li>\n            <li><code>int destination[n]</code>: the positions of server destinations</li>\n        </ul>\n\n<h4>Returns</h4>\n        <ul>\n            <li><code>long int</code>: the minimum lag</li>\n        </ul>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 10<sup>5</sup></li>\n            <li>1 ≤ center[i], destination[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format For Custom Testing</h3>\n        <p>The first line contains an integer, n, the number of elements in the array center.</p>\n        <p>Each line i of the n subsequent lines (where 0 ≤ i < n) contains an integer, center[i].</p>\n        <p>The next line contains an integer, n, the number of elements in the array destination.</p>\n        <p>Each line i of the n subsequent lines (where 0 ≤ i < n) contains an integer, destination[i].</p>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">Input:\n5\n3\n1\n6\n8\n9\n5\n2\n3\n1\n7\n9</pre>\n            <pre class=\"output\">Output:\n5</pre>\n            <div class=\"explanation\">\n                <p>You may create the connections as:</p>\n                <p>center = [1, 3, 6, 8, 9]</p>\n                <p>destination = [1, 2, 3, 7, 9]</p>\n                <p>Minimum total distance = abs(1 - 1) + abs(2 - 3) + abs(3 - 6) + abs(7 - 8) + abs(9 - 9) = 0 + 1 + 3 + 1 + 0 = 5</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Case 1</h4>\n            <pre class=\"input\">Input:\n2\n4\n6\n2\n5\n5</pre>\n            <pre class=\"output\">Output:\n2</pre>\n            <div class=\"explanation\">\n                <p>You may create the connections as:</p>\n                <p>center = [4, 6]</p>\n                <p>destination = [5, 5]</p>\n                <p>Minimum total distance = abs(5 - 4) + abs(5 - 6) = 1 + 1 = 2</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OAbycphelper/tree/main/amazon/Minimum%20Lag",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 4,
        "title": "Find the Greatest Outlier",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Code Question 2</h2>\n\n<div class=\"problem-description\">\n        <p>AWS provides many services for better execution. A producer will service to detect an outlier in an array of integers under development.</p>\n        <p>Given an array of n integers, there are (n-2) normal numbers and also one of the n-2 numbers is their sum. If a number is neither in the original numbers nor is their sum, it is an outlier. Discover the potential outliers and return the greatest of them.</p>\n        <p>Note: It is guaranteed that the answer exists.</p>\n    </div>\n\n<div class=\"example-initial\">\n        <h3>Example</h3>\n        <p>n = 6</p>\n        <p>arr = [4, 1, 3, 16, 2, 10]</p>\n        <p>There are two potential outliers:</p>\n        <ul>\n            <li>Remove 16: arr = [4, 1, 3, 2, 10]. The sum of [4, 1, 3] is 10, so 16 is a potential outlier. (It is not an original number or their sum.)</li>\n            <li>Remove 4: arr = [1, 3, 16, 2, 10]. The sum of [1, 3, 2, 10] is 16, so 4 is a potential outlier.</li>\n        </ul>\n        <p>The outlier is the greater of the two potential outliers, so 16 is the outlier.</p>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function getOutlierValue in the editor below.</p>\n        <p>getOutlierValue has the following parameter(s):</p>\n        <ul>\n            <li>int arr[n]: value of (n-2) numbers, their sum, and outlier value</li>\n        </ul>\n    </div>\n\n<div class=\"returns\">\n        <h3>Returns</h3>\n        <p>int: the outlier value</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>3 ≤ n ≤ 10<sup>5</sup></li>\n            <li>1 ≤ arr[i] ≤ 10<sup>6</sup></li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format For Custom Testing</h3>\n        <p>The first line contains an integer, n, the number of elements in arr.</p>\n        <p>Each line i of the n subsequent lines (where 0 ≤ i < n) contains an integer, arr[i].</p>\n    </div>\n\n<div class=\"examples\">\n        <div class=\"example\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">Input:\n6\n4\n1\n2\n1\n10\n3</pre>\n            <pre class=\"output\">Output:\n1</pre>\n            <div class=\"explanation\">\n                <p>The original is [1, 2, 3, 4] with a sum of 10.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Case 1</h4>\n            <pre class=\"input\">Input:\n4\n2\n3\n4\n2</pre>\n            <pre class=\"output\">Output:\n2</pre>\n            <div class=\"explanation\">\n                <p>The original is [2, 2] with a sum of 4.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OAbycphelper/tree/main/Amazon%20Intern/Find%20the%20Greatest%20Outlier",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 6,
        "title": "Balanced Bracket Splits",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Fill Missing Brackets</h2>\n\n<div class=\"problem-description\">\n        <p>Kindle Direct Publishing, Amazon's e-book self-publishing platform, is working on a new feature to help authors use special text characters in different ways. They have asked for your help in beta testing a new part of the feature involving round and square brackets.</p>\n\n<p>Given a string that consists of characters <code>(</code>, <code>)</code>, <code>[</code>, <code>]</code> and <code>?</code>, determine how many ways it can be split into two non-empty substrings such that the characters in each substring can be rearranged into a balanced string.</p>\n\n<p>A sequence of round and square brackets can be rearranged into a balanced sequence if and only if the number of opened and closed brackets is equal for both types of brackets. The question marks can take the place of any needed character, and the substrings together must contain the entire string.</p>\n\n<div class=\"note\">\n            <strong>Note:</strong> A substring is a contiguous group of characters in a string.\n        </div>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first and only line contains the string s.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>s contains <code>(</code>, <code>)</code>, <code>[</code>, <code>]</code> and <code>?</code> only</li>\n            <li>4 ≤ length of s ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Example 1:</h4>\n            <pre class=\"input\">Input: s = \"[(])??\"</pre>\n\n<p>The string s can be split into two balanced substrings as follows:</p>\n            <ol>\n                <li>\n                    s1 = \"[(]\" and s2 = \")??\"\n                    <ul>\n                        <li>Replace the ? in s1 with [ to have balanced string [][]</li>\n                        <li>Replace the question marks in s2 with ] and rearrange to make [] or ][</li>\n                    </ul>\n                </li>\n            </ol>\n        </div>\n\n<div class=\"example\">\n            <h4>Example 2:</h4>\n            <pre class=\"input\">Input: s = \"(((?\"</pre>\n            <pre class=\"output\">Output: 0</pre>\n            <div class=\"explanation\">\n                <p>There are 3 splits into two non-empty substrings:</p>\n                <ol>\n                    <li>( and (((?</li>\n                    <li>(( and ((?</li>\n                    <li>((( and ?</li>\n                </ol>\n                <p>None has two balanced substrings.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OAbycphelper/tree/main/Amazon%20Intern/Fill%20Missing%20Brackets",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 7,
        "title": "Minimum Delivery Grid Path",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Code Question 2: Amazon Fresh Delivery Route</h2>\n\n<div class=\"problem-description\">\n        <p>Amazon Fresh is a grocery delivery service that offers consumers the option of purchasing their groceries online and having them delivered on schedule. The Amazon Fresh team is planning a route for a delivery truck to deliver customer orders in the city of Techlandia. The planner will create a delivery area for each order to effectively plan the route. The area is abstracted as a grid. Not all locations are accessible by road. The truck only needs to make a single delivery.</p>\n\n<p>Write an algorithm to determine the minimum distance required for the truck to deliver the order.</p>\n\n<div class=\"assumptions\">\n            <h3>Assumptions:</h3>\n            <ul>\n                <li>Some places in the delivery area cannot be accessed by the driver, as there are no roads in those locations.</li>\n                <li>The delivery area can be represented as a two-dimensional grid of integers, where each integer represents one cell.</li>\n                <li>The truck must start from the top-left corner of the area, which is always accessible and can move one cell up, down, left, or right at a time.</li>\n                <li>The truck must navigate around the areas without roads and cannot leave the area.</li>\n                <li>The accessible areas are represented as 1, areas without roads are represented by 0 and the order destination is represented by 9.</li>\n            </ul>\n        </div>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input</h3>\n        <p>The input to the function/method consists of one argument:</p>\n        <ul>\n            <li><code>area</code>, representing the two-dimensional grid of integers.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output</h3>\n        <p>Return an integer representing the total distance traversed to deliver the order else return -1.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ rows, columns ≤ 10³</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\narea = \n[1, 0, 0],\n[1, 0, 0],\n[1, 9, 1]</pre>\n            <pre class=\"output\">Output:\n3</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>Starting from the top-left corner, the truck traversed the cells (0,0) → (1,0) → (2,0) → (2,1). The truck traversed the total distance of 3 to deliver the order.</p>\n                <p>So, the output is 3.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\"function-signature\">\n        <h3>Function Signature</h3>\n        <pre class=\"code\">int minimumDistance(vector&lt;vector&lt;int&gt;&gt; area) {\n    // Implementation here\n}</pre>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OAbycphelper/tree/main/Amazon%20Intern/Minimum%20Delivery%20Grid%20Path",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 27,
        "title": "Amazon Real Estate Analytics - Building Height Variance Problem",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1>Amazon Real Estate Analytics - Building Height Variance Problem</h1>\n\n<div class=\\\"problem-description\\\">\n        <p>Within the Amazon Real Estate Analytics Toolset, an investor is evaluating a series of buildings of varying heights. The investor aims to find a group of buildings that adhere to two key conditions:</p>\n\n<h3>1. The selected buildings must form a valid group:</h3>\n        <ul>\n            <li>A group is considered valid if it is a contiguous subsegment of the original array with a size of at least 2</li>\n            <li>The heights of the first and last buildings in this subsegment must be the same</li>\n        </ul>\n\n<h3>2. The group variance should be as minimal as possible</h3>\n        <p>The variance of a group is defined as: the difference between the size of the group and the occurrences of the first element height in the group.</p>\n        <p>For example, the variance of group [4, 2, 5, 4] is 4 - 2 = 2 (size 4 minus two occurrences of 4).</p>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>findMinimumVariance</code> with the following parameter:</p>\n        <ul>\n            <li><code>int height[n]</code>: the height of each building</li>\n        </ul>\n\n<h4>Returns</h4>\n        <ul>\n            <li><code>int</code>: the variance of a valid group of buildings with minimum variance</li>\n        </ul>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ n ≤ 2 × 10<sup>5</sup></li>\n            <li>1 ≤ height[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\\\"example\\\">\n            <h4>Sample Case 0</h4>\n            <pre class=\\\"input\\\">Input:\n4\n2\n2\n2\n2</pre>\n            <pre class=\\\"output\\\">Output:\n0</pre>\n            <div class=\\\"explanation\\\">\n                <p>All groups of buildings have a variance of 0. For example, group [2, 2, 2] of the first three elements has a variance of 3 - 3 = 0.</p>\n            </div>\n        </div>\n\n<div class=\\\"example\\\">\n            <h4>Sample Case 1</h4>\n            <pre class=\\\"input\\\">Input:\n5\n1\n2\n3\n4\n1</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n            <div class=\\\"explanation\\\">\n                <p>There is only one valid group which is [1, 2, 3, 4, 1] with a variance of 5 - 2 = 3.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\\\"notes\\\">\n        <h3>Additional Notes</h3>\n        <ul>\n            <li>A subsegment must be contiguous (consecutive elements)</li>\n            <li>The first and last elements of any valid group must be identical</li>\n            <li>The minimum size of a group is 2</li>\n            <li>The variance calculation is: (group size) - (count of first element in group)</li>\n            <li>Need to handle all possible contiguous subsegments</li>\n            <li>Need to verify both conditions (valid group + minimum variance)</li>\n            <li>The solution should be optimized for large inputs given the constraints</li>\n        </ul>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1tCPw4Cqh01EQ1bTsKJAs2n8_W3yulk-FCIiOV_QvtyA/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 28,
        "title": "AWS Array Outlier Detection",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1>AWS Outlier Detection Service</h1>\n\n<div class=\\\"problem-description\\\">\n        <p>AWS provides many services for outlier detection. A prototype small service to detect an outlier in an array of integers is under development.</p>\n\n<p>Given an array of n integers, there are (n - 2) normal numbers and the sum of the (n - 2) numbers originally in this array. If a number is neither in the original numbers nor is it their sum, it is an outlier. Discover the potential outliers and return the greatest of them.</p>\n\n<p><strong>Note:</strong> It is guaranteed that the answer exists.</p>\n    </div>\n\n<div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>An array arr[n] containing integers representing the value of (n-2) numbers, their sum, and outlier value.</p>\n    </div>\n\n<div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return an integer representing the outlier value.</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>3 ≤ n ≤ 10<sup>5</sup></li>\n            <li>1 ≤ arr[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Examples</h3>\n\n<div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">Input:\nn = 6\narr = [4, 1, 3, 16, 2, 10]</pre>\n            <pre class=\\\"output\\\">Output:\n16</pre>\n            <div class=\\\"explanation\\\">\n                <p>There are two potential outliers:</p>\n                <ul>\n                    <li>Remove 16 - arr\\' = [4, 1, 3, 2, 10]. The sum of [4, 1, 3, 2] is 10, so 16 is a potential outlier.</li>\n                    <li>Remove 4 - arr\\' = [1, 3, 16, 2, 10]. The sum of [1, 3, 2, 10] is 16, so 4 is a potential outlier.</li>\n                </ul>\n                <p>The outlier is the greater of the two potential outliers, so 16 is the outlier.</p>\n            </div>\n        </div>\n\n<div class=\\\"example\\\">\n            <h4>Example 2:</h4>\n            <pre class=\\\"input\\\">Input:\nn = 4\narr = [2, 2, 4, 2]</pre>\n            <pre class=\\\"output\\\">Output:\n2</pre>\n            <div class=\\\"explanation\\\">\n                <p>The original list is [2, 2] with a sum of 4.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getOutlierValue</code> with the following parameter:</p>\n        <ul>\n            <li><code>int arr[n]</code>: array containing the values</li>\n        </ul>\n        <p><strong>Returns:</strong></p>\n        <ul>\n            <li><code>int</code>: the outlier value</li>\n        </ul>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1NL6DGsT9zmpSAx84h1AxKzs7BE364fwI7W44FFi2Cts/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 33,
        "title": "Amazon Financial Optimization Tool",
        "problem_statement": "<div class=\"problem-container\">\n    <h1 class=\"problem-title\">Amazon Financial Optimization Tool</h1>\n\n<div class=\"problem-description\">\n        <p>In an Amazon financial optimization tool, a user manages a sequence of coins with various denominations. The process involves systematically exchanging coins to reduce their overall count, following a set of rules:</p>\n\n<ul>\n            <li>Count the number of coins with each denomination, and write the denominations on a paper.</li>\n            <li>Remove all denominations from the paper that have less than two coins.</li>\n            <li>If there is at least one value written on the paper, find the smallest denomination in the paper let it be x.</li>\n            <li>Find the two leftmost coins with denomination x, and let their positions be i and j.</li>\n            <li>Pick up the two coins and remove them for one coin with a denomination of y = 2 * x and put that coin at position j (the position of the second coin picked).</li>\n        </ul>\n\n<p>The user wants to know the final value of all the denominations in the line.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer n, the size of the array coins.</p>\n        <p>Each of the next n lines contains an integer coins[i].</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Return long[]: the final coins' orders and values.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2 * 10<sup>5</sup></li>\n            <li>1 ≤ coins[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">3\n1\n3\n1</pre>\n            <pre class=\"output\">3\n2</pre>\n            <div class=\"explanation\">\n                <p>The first and third coins will be picked up exchanged for a coin with a value of 2 and put at the end of the line.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Case 1</h4>\n            <pre class=\"input\">3\n4\n3\n2</pre>\n            <pre class=\"output\">4\n3\n2</pre>\n            <div class=\"explanation\">\n                <p>No denomination has more than one coin so the order and values of the coins will not change.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\"detailed-example\">\n        <h3>Detailed Example</h3>\n        <p>For n = 7 and coins = [3, 4, 1, 2, 2, 1, 1]</p>\n\n<table class=\"process-table\">\n            <tr>\n                <th>Denominations Frequencies</th>\n                <th>Picked Denomination</th>\n                <th>New Values</th>\n            </tr>\n            <tr>\n                <td>\n                    1: [3, 6, 7]<br>\n                    2: [4, 5]<br>\n                    3: [1]<br>\n                    4: [2]\n                </td>\n                <td>The denomination picked is 1<br>coins[3] and coins[6]</td>\n                <td>[3, 4, 2, 2, 2, 1]</td>\n            </tr>\n            <tr>\n                <td>\n                    1: [6]<br>\n                    2: [3, 4, 5]<br>\n                    3: [1]<br>\n                    4: [2]\n                </td>\n                <td>The denomination picked is 2<br>coins[3], coins[4]</td>\n                <td>[3, 4, 4, 2, 1]</td>\n            </tr>\n            <tr>\n                <td>\n                    1: [5]<br>\n                    2: [4]<br>\n                    3: [1]<br>\n                    4: [2, 3]\n                </td>\n                <td>The denomination picked is 4<br>coins[2], coins[3]</td>\n                <td>[3, 8, 2, 1]</td>\n            </tr>\n        </table>\n        <p>Note that after the third operation, all denominations have at most 1 coin so the process is terminated and the final values are, [3, 8, 2, 1].</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1q0z_R08qc0O-lWYRF6L2kQ7B8jy500As3_hwoXMUzzs/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 34,
        "title": "EffiBin Kit Optimization",
        "problem_statement": "<div class=\"problem-container\">\n    <h2>EffiBin Kit Optimization</h2>\n\n<div class=\"problem-description\">\n        <p>With Amazon's new innovative EffiBin Kit users can effortlessly optimize the arrangement of their storage bins. This kit is designed to minimize the overall effort needed for efficient organization. The process starts with an array of bins, and the objective is to reduce the total effort required. The effort is the sum of efforts needed for each bin.</p>\n\n<p>Formally, given an array <code>effort</code> of size <code>n</code>, utilizing the EffiBin Kit, users can perform operations on the array. In each operation, the user chooses two positions <code>i</code> and <code>j</code>, such that the effort of the bin at position <code>i</code> (<code>effort[i]</code>) is divisible by the effort of the bin at position <code>j</code> (<code>effort[j]</code>). When this condition is satisfied, the effort of bin <code>i</code> can be updated to equal the effort of bin <code>j</code>. This operation can be repeated as many times as possible, on different bins or positions.</p>\n\n<p>An integer <code>x</code> is divisible by another integer <code>y</code> if <code>x</code> can be divided by <code>y</code> exactly, with nothing left over. For example, 6 is divisible by 3, while 7 is not.</p>\n\n<p>Find the minimum total effort after applying some (possibly zero) number of operations.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer <code>n</code>, the size of the array <code>effort</code>.</p>\n        <p>Each of the next <code>n</code> lines contains an integer <code>effort[i]</code>.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Return a single integer representing the minimum possible total effort.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2 * 10⁵</li>\n            <li>1 ≤ effort[i] ≤ 2 * 10⁵</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Sample Input 0</h4>\n            <pre class=\"input\">4\n4\n1\n3\n7</pre>\n            <h4>Sample Output 0</h4>\n            <pre class=\"output\">4</pre>\n            <div class=\"explanation\">\n                <h4>Explanation</h4>\n                <p>We will perform these operations to get the minimum effort:</p>\n                <table class=\"operations-table\">\n                    <thead>\n                        <tr>\n                            <th>Indexes Chosen</th>\n                            <th>New Efforts</th>\n                            <th>Total Effort</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>i = 0, j = 1</td>\n                            <td>[1, 1, 3, 7]</td>\n                            <td>12</td>\n                        </tr>\n                        <tr>\n                            <td>i = 2, j = 1</td>\n                            <td>[1, 1, 1, 7]</td>\n                            <td>10</td>\n                        </tr>\n                        <tr>\n                            <td>i = 3, j = 0</td>\n                            <td>[1, 1, 1, 1]</td>\n                            <td>4</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Input 1</h4>\n            <pre class=\"input\">3\n4\n5\n6</pre>\n            <h4>Sample Output 1</h4>\n            <pre class=\"output\">15</pre>\n            <div class=\"explanation\">\n                <p>No operations can be performed on the array so the effort can't be reduced, hence the answer is 4 + 5 + 6 = 15</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1q0z_R08qc0O-lWYRF6L2kQ7B8jy500As3_hwoXMUzzs/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 65,
        "title": " Amazon Subsequence Prices",
        "problem_statement": "<div class=\"problem-container\">\n    <section class=\"problem-description\">\n        <h1> Amazon Subsequence Prices</h1>\n        <p>There are n products being sold on the Amazon Online shopping app. The price of the products will be given by an array of integers where price[i] gives the price of the i-th item. To make the event attractive for any customer to get a gift card, Amazon decided to give special coupons to the buyers.</p>\n        <p>However, the products must be bought in a contiguous subsegment of products and two items of the same price must be in the segment. Find the minimum amount of money it would take to guarantee a gift card.</p>\n    </section>\n\n<section class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer, n, the number of products. The next line contains n integers, price[1..n], where price[i] is the price of the i-th product.</p>\n    </section>\n\n<section class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print the minimum cost of the contiguous subsegment where at least two items have the same price.</p>\n    </section>\n\n<section class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 5 * 10<sup>5</sup></li>\n            <li>0 ≤ price[i] ≤ 10<sup>5</sup></li>\n        </ul>\n    </section>\n\n<section class=\"examples\">\n        <h3>Examples</h3>\n        <div class=\"example\">\n            <h4>Example 1</h4>\n            <pre class=\"input\">Input:\n6\n2 3 2 1 2 1</pre>\n            <pre class=\"output\">Output:\n4</pre>\n            <p class=\"explanation\">The subsegments where not all prices are distinct include [2,3,2] with cost 7, [2,1,2,1] with cost 6, and [2,2] with minimum cost 4. Thus, the answer is 4.</p>\n        </div>\n    </section>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1vzClVK6TEUubx05hxggwAko_3UNmZpoO79FVZDYboVY/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 66,
        "title": "Sales Pattern Analysis",
        "problem_statement": "<div class=\"problem-container\">\n    <h2>Code Question 2</h2>\n\n<div class=\"problem-description\">\n        <p>Data Analysts at Amazon are analyzing sales patterns. Based on their analysis, the team concluded that whenever a limited-period offer is rolled out, there is a spike in sales on the first and last days of the offer. They classify a period of 3 or more days as an offer period if the minimum value of the sales on the first and last days of the period outweigh the maximum value of sales on all other days in that period.</p>\n\n<p>In mathematical terms, a period of days[i,j](1 ≤ i ≤ n-2 and i+1 ≤ j ≤ n) is classified as an offer period if:</p>\n\n<ul>\n            <li>The period [i,j] is an offer period if:\n                <ul>\n                    <li>1≤ i ≤ n-2</li>\n                    <li>i+1 ≤ j ≤ n</li>\n                    <li>min(sales[i], sales[j]) > max(sales[i+1], sales[i+2], ..., sales[j-1])</li>\n                </ul>\n            </li>\n        </ul>\n\n<p>Given an array of distinct integers, sales, with sales statistics over a period of n consecutive days, report the number of offer periods identified.</p>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function getTotalOfferPeriods in the editor below.</p>\n        <p>getTotalOfferPeriods has the following parameter:</p>\n        <ul>\n            <li>int sales[n]: the sales statistics for Amazon on n consecutive days.</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p>long int: the number of offer periods in the n consecutive days</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>3 ≤ n ≤ 2 × 10<sup>5</sup></li>\n            <li>1 ≤ sales[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example</h3>\n        <div class=\"example-1\">\n            <p>Suppose n = 4, sales = [3, 2, 8, 6]</p>\n            <p>Assume 1-based indexing.</p>\n\n<table class=\"example-table\">\n                <thead>\n                    <tr>\n                        <th>Period</th>\n                        <th>Min(sales[i], sales[j])</th>\n                        <th>Max(sales[i+1],...,sales[j-1])</th>\n                        <th>Offer Period</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>[1, 3]</td>\n                        <td>min(3, 8) = 3</td>\n                        <td>max(2) = 2</td>\n                        <td>Since 3 > 2, so YES</td>\n                    </tr>\n                    <tr>\n                        <td>[1, 4]</td>\n                        <td>min(3, 6) = 3</td>\n                        <td>max(2, 8) = 8</td>\n                        <td>Since 3 < 8, so NO</td>\n                    </tr>\n                    <tr>\n                        <td>[2, 4]</td>\n                        <td>min(2, 6) = 2</td>\n                        <td>max(8) = 8</td>\n                        <td>Since 2 < 8, so NO</td>\n                    </tr>\n                </tbody>\n            </table>\n\n<p>The number of offer periods is 1.</p>\n        </div>\n    </div>\n\n<div class=\"sample-cases\">\n        <h3>Sample Case 0</h3>\n        <pre class=\"input\">Input:\nsales[] size n = 5\nsales = [5, 2, 1, 3, 6]</pre>\n        <pre class=\"output\">Output:\n3</pre>\n\n<h3>Sample Case 1</h3>\n        <pre class=\"input\">Input:\nsales[] size n = 6\nsales = [10, 6, 8, 5, 11, 9]</pre>\n        <pre class=\"output\">Output:\n3</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1t5fuJkb6Ko__IidyyyFNgJkBYTGNHXc-pLperHk2j-4/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 80,
        "title": "Mean Rank Subarray Count",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <h1>Code Question 1</h1>\n    </div>\n\n<div class=\"problem-description\">\n        <p>Amazon Academy recently organized a scholarship test on its platform.</p>\n\n<p>There are n students with roll numbers 1, 2, ..., n who appeared for the test, where the rank secured by the i<sup>th</sup> student is denoted by rank[i]. Thus, the array rank is a permutation of length n. Groups can only be formed with students having consecutive roll numbers, in other words, a subarray of the original array. For each value x (1 ≤ x ≤ n), find the number of groups that can be formed such that they have a mean rank equal to x.</p>\n\n<p>More formally, given a permutation of length n, find the number of subarrays of the given array having a mean value equal to x, for each x in the range [1, n].</p>\n    </div>\n\n<div class=\"notes\">\n        <h3>Notes</h3>\n        <ul>\n            <li>The mean value of an array of k elements is defined as the sum of elements divided by k.</li>\n            <li>A permutation of length n is a sequence where each number from 1 to n appears exactly once.</li>\n            <li>A subarray of an array is a contiguous section of the array.</li>\n        </ul>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function getMeanRankCount with the following parameter:</p>\n        <ul>\n            <li><code>int rank[n]</code>: the ranks of the students</li>\n        </ul>\n\n<h4>Returns</h4>\n        <ul>\n            <li><code>int[n]</code>: the i<sup>th</sup> integer (where 1 ≤ i ≤ n) denotes the number of groups with a mean rank of i</li>\n        </ul>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 10<sup>3</sup></li>\n            <li>1 ≤ rank[i] ≤ n</li>\n            <li>The array rank contains all distinct elements, and thus, is a permutation of {1..n}</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n        <div class=\"example\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">Input:\nn = 4\nrank = [4, 3, 2, 1]</pre>\n            <pre class=\"output\">Output:\n1\n2\n2\n1</pre>\n            <div class=\"explanation\">\n                <p>Explanation:</p>\n                <ul>\n                    <li>x = 1 → [1]</li>\n                    <li>x = 2 → [3, 2, 1], [2]</li>\n                    <li>x = 3 → [3], [4, 3, 2]</li>\n                    <li>x = 4 → [4]</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1d2XKQxgg1XQ1SLwF12__QShzDtcTnKO7T5i2PhTY9HA/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 81,
        "title": "Data Dependency Sum",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Code Question 2</h2>\n\n<div class=\"problem-description\">\n        <p>Data analysts at Amazon are analyzing time-series data. It was concluded that the data of the n<sup>th</sup> item was dependent on the data of some x<sup>th</sup> day if there is a positive integer k such that floor(n/k) = x, where floor(z) represents the largest integer less than or equal to z.</p>\n        <p>Given n, find the sum of all the days' numbers on which the data of the x<sup>th</sup> (0 ≤ x ≤ n) will be dependent.</p>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function getDataDependenceSum in the editor below.</p>\n        <p>getDataDependenceSum takes the following arguments:</p>\n        <ul>\n            <li><code>long int n</code>: the day to analyze the data dependency for</li>\n        </ul>\n        <p><strong>Returns</strong></p>\n        <ul>\n            <li><code>long int</code>: the sum of days on which the data is dependent</li>\n        </ul>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 10<sup>10</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example</h3>\n        <p>Suppose n = 5</p>\n        <table class=\"example-table\">\n            <thead>\n                <tr>\n                    <th>x</th>\n                    <th>k</th>\n                    <th>floor(n/k)</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>0</td>\n                    <td>6</td>\n                    <td>floor(5/6) = 0</td>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>5</td>\n                    <td>floor(5/5) = 1</td>\n                </tr>\n                <tr>\n                    <td>2</td>\n                    <td>2</td>\n                    <td>floor(5/2) = 2</td>\n                </tr>\n                <tr>\n                    <td>3</td>\n                    <td>Does not exist</td>\n                    <td>-</td>\n                </tr>\n                <tr>\n                    <td>4</td>\n                    <td>Does not exist</td>\n                    <td>-</td>\n                </tr>\n                <tr>\n                    <td>5</td>\n                    <td>1</td>\n                    <td>floor(5/1) = 5</td>\n                </tr>\n            </tbody>\n        </table>\n        <p class=\"example-explanation\">Hence the answer is 0 + 1 + 2 + 5 = 8.</p>\n\n<h4>Sample Case 0</h4>\n        <pre class=\"input\">Input:\n13</pre>\n        <pre class=\"output\">Output:\n29</pre>\n        <div class=\"explanation\">\n            <p>The data of the n = 13<sup>th</sup> day is dependent on [0, 1, 2, 3, 4, 6, 13] obtained for k = [14, 13, 6, 4, 3, 2, 1].</p>\n        </div>\n\n<h4>Sample Case 1</h4>\n        <pre class=\"input\">Input:\n1</pre>\n        <pre class=\"output\">Output:\n1</pre>\n        <div class=\"explanation\">\n            <p>The only dependency is 1.</p>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1MZLfXT-b085CFWXHfIsrUs_ij5YTwFxQHTPctFl0VzE/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 84,
        "title": "Minimum XOR Operations to Zero",
        "problem_statement": "<div class=\"problem-container\">\n    <h1 class=\"problem-title\">Code Question 1</h1>\n\n<div class=\"problem-description\">\n        <p>Developers at Amazon are working on a new algorithm using the Bitwise XOR operation.</p>\n        <p>Given an array <code>arr</code> of even length <code>n</code>, Developers can perform an operation on a given array which is defined below as many times as necessary:</p>\n\n<ul>\n            <li>Choose two indices L and R, where 0 ≤ L ≤ R < N.</li>\n            <li>Let x be the bitwise XOR of all elements of the subarray represented by indices L and R of the given array.</li>\n            <li>Assign all elements of the chosen subarray to x.</li>\n        </ul>\n\n<p>Given an integer array <code>arr[]</code>, find the minimum number of operations required to make all elements of the given array equal to zero.</p>\n\n<div class=\"note\">\n            <h4>Note:</h4>\n            <p>Bitwise XOR for an array of numbers is determined by examining each bit position across all numbers in the array. If the total count of set bits at a bit-position is odd, the resulting bit in output is set to 1. Otherwise, the resulting bit is set to 0. For example, consider the array [13, 6, 10, 7].</p>\n\n<ul>\n                <li>The binary representations are:\n                    <ul>\n                        <li>13 = 1101<sub>2</sub></li>\n                        <li>6 = 0110<sub>2</sub></li>\n                        <li>10 = 1010<sub>2</sub></li>\n                        <li>7 = 0111<sub>2</sub></li>\n                    </ul>\n                </li>\n                <li>The count of set bits for each bit position:\n                    <ul>\n                        <li>bit-position 0 = 2 (from 13, 7) → Result: 0</li>\n                        <li>bit-position 1 = 3 (from 6, 10, 7) → Result: 1</li>\n                        <li>bit-position 2 = 3 (from 13, 6, 7) → Result: 1</li>\n                        <li>bit-position 3 = 2 (from 13, 10) → Result: 0</li>\n                    </ul>\n                </li>\n                <li>Final result: 0110<sub>2</sub>, or 6.</li>\n            </ul>\n        </div>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example</h3>\n        <div class=\"example\">\n            <p>Given, arr = [0, 2, 2, 0]</p>\n            <div class=\"example-visualization\">\n                <pre>[0 2 2 0] → [0 0 0 0]</pre>\n            </div>\n            <p>Choose L = 1 and R = 2. This corresponds to the subarray [2, 2]. The value of x for [2, 2] is 0. We replace the elements with 0 making all elements 0.</p>\n            <p>Hence, the minimum number of operations required is 1.</p>\n        </div>\n    </div>\n\n<div class=\"function-description\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getMinMoves</code> in the editor below. <code>getMinMoves</code> has the following parameter(s):</p>\n        <ul>\n            <li><code>int arr[n]</code>: the array of integers</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p><code>int</code>: the minimum number of moves to make all elements zero</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ n ≤ 10<sup>5</sup></li>\n            <li>n is even</li>\n            <li>0 ≤ arr[i] < 2<sup>20</sup></li>\n        </ul>\n    </div>\n\n<div class=\"sample-cases\">\n        <h3>Sample Test Cases</h3>\n        <div class=\"sample-case\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">Input:\nn = 5\narr = [0, 2, 3, 0, 2]</pre>\n            <pre class=\"output\">Output:\n2</pre>\n            <div class=\"explanation\">\n                <h4>Explanation</h4>\n                <p>Operation 1:</p>\n                <ul>\n                    <li>Choose L = 1, R = 4</li>\n                    <li>The chosen subarray is [2, 3, 0] and the value of x for this subarray is 3</li>\n                    <li>The new array is [0, 3, 3, 3, 3]</li>\n                </ul>\n                <p>Operation 2:</p>\n                <ul>\n                    <li>Choose L = 1, R = 4</li>\n                    <li>The chosen subarray is [3, 3, 3, 3] and the value of x is 0</li>\n                    <li>The new array is [0, 0, 0, 0, 0]</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1uOg7jLyM0VtrltK92jyFA7ggZM42Rsa3YqVcLhbORXw/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 85,
        "title": "Tiling Cost",
        "problem_statement": "<div class=\"problem-container\">\n    <h2>Tiling Cost</h2>\n\n<div class=\"problem-description\">\n        <p>Bob has bought a complete basement for remodeling. He wants to tile its entire floor which is X units in length and Y units in breadth. He has a mathematical function f(X,Y) to find the cost for the flooring:</p>\n\n<div class=\"mathematical-function\">\n            <ol>\n                <li>f(X,Y) = X * f(X-2,Y-2) if X > 2 and Y > 2</li>\n                <li>f(X,Y) = X * Y * h(X,Y) if X ≤ 2 or Y ≤ 2</li>\n                <li>f(X,Y) = 1 if X ≤ 0 or Y ≤ 0</li>\n            </ol>\n            <p>where h(X,Y) = (2*X + 3*Y + 5)</p>\n        </div>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Specification</h3>\n        <ul>\n            <li><strong>input1</strong>: An integer value X, representing the length of the floor to be tiled.</li>\n            <li><strong>input2</strong>: An integer value Y, representing the breadth of the floor to be tiled.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Specification</h3>\n        <p>Return an integer value representing the total cost of tiling the floor using mathematical function f(X,Y).</p>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Example 1:</h4>\n            <pre class=\"input\">input1: 3\ninput2: 5</pre>\n            <pre class=\"output\">Output: 360</pre>\n            <div class=\"explanation\">\n                <p>Here we are given the length of the basement X = 3 and the breadth of the basement Y = 5. The cost of tiling the basement will be:</p>\n                <p>f(X,Y) = f(X-2,Y-2) + (2X + 2Y - 4) * h(X,Y)</p>\n                <p>f(3,5) = f(1,3) + (2*3 + 2*5 - 4) * h(3,5)</p>\n                <p>where h(3,5) = 2*3 + 3*5 + 5 = 26</p>\n                <p>f(3,5) = (1 * 3) * h(1,3) + (6 + 10 - 4) * 26</p>\n                <p>f(3,5) = 3 * (2*1 + 3*3 + 5) + 12 * 26</p>\n                <p>f(3,5) = 360</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Example 2:</h4>\n            <pre class=\"input\">input1: 1000\ninput2: 1</pre>\n            <pre class=\"output\">Output: 2008000</pre>\n            <div class=\"explanation\">\n                <p>Here we are given the length of the basement X = 1000 and the breadth of the basement Y = 1. The cost of tiling the basement will be:</p>\n                <p>f(X,Y) = X * Y * h(X,Y)</p>\n                <p>f(1000,1) = 1000 * 1 * h(1000,1)</p>\n                <p>where h(1000,1) = 2*1000 + 3*1 + 5 = 2008</p>\n                <p>f(1000,1) = 1000 * 1",
        "google_doc_link": "https://docs.google.com/document/d/1IdhCWNoJ9GfcgbLtSE2pVcIntnWBCEuRpCSTHegZW-o/edit?usp=sharing",
        "solution_code": null,
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 112,
        "title": "Sports Analytics",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Sports Analytics</h2>\n\n<div class=\\\"problem-description\\\">\n        <p>The Xavier\\'s School for gifted students holds a competition between X football players, and Professor Charles Xavier keeps track of the matches using a 2D matrix A. For each player, a win is marked as 1 point, a loss is marked as 0 points and matches yet to occur are marked as 2 in the matrix. The player with the highest points at the end of the competition is declared the winner.</p>\n\n<p>Professor Charles wants to predict the winner of the competition, and for that he generates an array of 0s and 1s indicating which players have a chance of winning the competition. If the N<sup>th</sup> player is likely to win, the corresponding element in the array should be 1, otherwise it should be 0.</p>\n\n<p>A player has a good chance of winning if s/he is likely to score the highest number of points. Your task is to find and return an integer array of 0s and 1s indicating which players have a chance of winning the competition.</p>\n    </div>\n\n<div class=\\\"input-format\\\">\n        <h3>Input Specification</h3>\n        <ul>\n            <li><strong>input1</strong>: An integer value X, representing the number of football players.</li>\n            <li><strong>input2</strong>: A 2D matrix A of size input1 X input1, representing the points scored by X football players during a series of matches.</li>\n        </ul>\n    </div>\n\n<div class=\\\"output-format\\\">\n        <h3>Output Specification</h3>\n        <p>Return an integer array of 0s and 1s indicating which players have a chance of winning the competition.</p>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example 1:</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">input1: 5\ninput2: {{0,2,2,1,0},{2,0,1,1,0},{1,1,0,0,0},{0,0,0,0,1},{1,1,1,0,0}}</pre>\n            <pre class=\\\"output\\\">Output: {1,1,0,0,1}</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <table class=\\\"match-table\\\">\n                    <tr>\n                        <th></th>\n                        <th>Match 1</th>\n                        <th>Match 2</th>\n                        <th>Match 3</th>\n                        <th>Match 4</th>\n                        <th>Match 5</th>\n                    </tr>\n                    <tr>\n                        <td>Player 1</td>\n                        <td>0</td>\n                        <td>2</td>\n                        <td>2</td>\n                        <td>1</td>\n                        <td>0</td>\n                    </tr>\n                    <tr>\n                        <td>Player 2</td>\n                        <td>2</td>\n                        <td>0</td>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>0</td>\n                    </tr>\n                    <tr>\n                        <td>Player 3</td>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>0</td>\n                        <td>0</td>\n                        <td>0</td>\n                    </tr>\n                    <tr>\n                        <td>Player 4</td>\n                        <td>0</td>\n                        <td>0</td>\n                        <td>0</td>\n                        <td>0</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>Player 5</td>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>1</td>\n                        <td>0</td>\n                        <td>0</td>\n                    </tr>\n                </table>\n                <p>Players 1, 2 and 5 are likely to earn the maximum number of points, and therefore have a good chance of winning the competition.</p>\n            </div>\n        </div>\n\n<h3>Example 2:</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">input1: 3\ninput2: {{0,0,0},{1,0,1},{1,0,0}}</pre>\n            <pre class=\\\"output\\\">Output: {0,1,0}</pre>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1cc7juuCaxT8KHDnwAEuo7alVY0M18OGQ4xigPhy4Asc/edit?usp=sharing",
        "solution_code": "",
        "company_name": "amazon  oa",
        "company_id": 1
    },
    {
        "id": 233,
        "title": "Amazon Eco-Friendly Product Ratings",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Code Question 2: Amazon Eco-Friendly Product Ratings</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Imagine you\\'re a seller on Amazon, specializing in eco-friendly home products. Each of your items is rated by customers based on its quality and environmental impact.</p>\n        \n        <p>The overall qualityScore of your products is determined by the maximum possible sum of consecutive ratings.</p>\n        \n        <p>To improve the qualityScore of your products and attract more customers, you are given with an integer impactFactor and the following two strategies:</p>\n        \n        <ol>\n            <li><strong>Amplify Ratings:</strong> Select a contiguous segment of ratings and amplify them by multiplying each rating in that range by impactFactor.</li>\n            <li><strong>Adjust Ratings:</strong> Select a contiguous segment of ratings and adjust them by dividing each rating in that range by impactFactor.</li>\n        </ol>\n        \n        <p class=\\\"note\\\"><strong>Note:</strong> When applying the second strategy i.e., Adjust Ratings: For dividing positive ratings, use the floor value of the division result and for dividing negative ratings, use the ceiling value of the division result.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains an integer impactFactor, denoting the value used in the strategies.</li>\n            <li>The next line contains an integer n, representing the size of the ratings array.</li>\n            <li>Each of the next n lines contains an integer ratings[i].</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return the maximum possible qualityScore i.e., maximum possible sum of consecutive ratings by optimally selecting exactly one of the strategies to modify the ratings.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2 * 10<sup>5</sup></li>\n            <li>1 ≤ impactFactor ≤ 10<sup>4</sup></li>\n            <li>-10<sup>5</sup> ≤ ratings[i] ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">Input:\nratings = [5, -3, -3, 2, 4]\nimpactFactor = 3</pre>\n            <pre class=\\\"output\\\">Output: 12</pre>\n            <div class=\\\"explanation\\\">\n                <p>If we perform the first strategy on the subsegment [4, 5] (1-based indexing), we get:</p>\n                <p>ratings = [5, -3, -3, 4, 8] with a qualityScore of 12, which is the maximum possible.</p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <h4>Sample Case 0:</h4>\n            <pre class=\\\"input\\\">Input:\nimpactFactor = 1\nratings = [-2, 3, -3, -1]</pre>\n            <pre class=\\\"output\\\">Output: 3</pre>\n            <div class=\\\"explanation\\\">\n                <p>The initial qualityScore of the ratings is 3, and since impactFactor = 1, performing any of the strategy will not make any change, so this is the maximum qualityScore obtainable.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"function-signature\\\">\n        <h3>Function Description</h3>\n        <pre class=\\\"cpp\\\">long calculateMaxQualityScore(int impactFactor, vector&lt;int&gt; ratings)</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1jz-QQoRXNLEi6ohKauFOdwfBb3GVpaN0Xjzbl1a0-5c/edit?usp=sharing",
        "solution_code": "",
        "company_name": "amazon  oa",
        "company_id": 1
    }
]