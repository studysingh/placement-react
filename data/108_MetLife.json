[
    {
        "id": 358,
        "title": "Optimal Array Concatenation",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Optimal Array Concatenation Problem</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n        }\n        .problem-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 8px;\n            background-color: #f9f9f9;\n        }\n        h3 {\n            color: #333;\n        }\n        .problem-description, .input-format, .output-format, .constraints, .examples {\n            margin-bottom: 20px;\n        }\n        .example {\n            background-color: #fff;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n        }\n        pre {\n            background-color: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            overflow-x: auto;\n        }\n        .explanation {\n            margin-top: 10px;\n            color: #555;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h2>Optimal Array Concatenation</h2>\n        <p>You are given an array <code>a</code> of length <code>N</code> and an array <code>b</code> of length <code>M</code>. The goal is to construct a new array <code>c</code> by performing a total of <code>N+M</code> operations. In one operation, you can do one of the following:</p>\n        <ul>\n            <li>If the array <code>a</code> is not empty, remove its first element and append it to the end of the array <code>c</code>.</li>\n            <li>If the array <code>b</code> is not empty, remove its first element and append it to the end of the array <code>c</code>.</li>\n        </ul>\n        <p>Determine the maximum subarray sum achievable for the resulting array <code>c</code>.</p>\n        <p><strong>Function Description:</strong> Complete the <code>solve</code> function. The function takes the following 4 parameters and returns a single integer denoting the answer to the question:</p>\n        <ul>\n            <li><code>N</code>: Represents the number of elements in the array <code>a</code>.</li>\n            <li><code>M</code>: Represents the number of elements in the array <code>b</code>.</li>\n            <li><code>a</code>: Represents the first array.</li>\n            <li><code>b</code>: Represents the second array.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains \\\\( T \\\\), which represents the number of test cases.</p>\n        <p>For each test case:</p>\n        <ul>\n            <li>The first line contains an integer \\\\( N \\\\) denoting the number of elements in the array \\\\( a \\\\).</li>\n            <li>The second line contains \\\\( N \\\\) space-separated integers denoting the array \\\\( a \\\\).</li>\n            <li>The third line contains an integer \\\\( M \\\\) denoting the number of elements in the array \\\\( b \\\\).</li>\n            <li>The fourth line contains \\\\( M \\\\) space-separated integers denoting the array \\\\( b \\\\).</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each test case, print a single integer representing the maximum subarray sum achievable.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>\\\\(1 \\\\leq T \\\\leq 1000\\\\)</li>\n            <li>\\\\(1 \\\\leq N, M \\\\leq 10^5\\\\)</li>\n            <li>\\\\(-10^9 \\\\leq a_i, b_i \\\\leq 10^9\\\\)</li>\n            <li>It is guaranteed that the sum of \\\\( N \\\\) and sum of \\\\( M \\\\) over all test cases does not exceed \\\\( 10^5 \\\\) respectively.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n1\n6\n12 3 -13 4 -19 7\n7\n-13 -10 18 4 -9 8 -12\n</pre>\n            <pre class=\\\"output\\\">Output:\n37\n</pre>\n            <div class=\\\"explanation\\\">\n                <p>In test case 1, given:</p>\n                <ul>\n                    <li>\\\\(N = 6\\\\)</li>\n                    <li>\\\\(a = [12, 3, -13, 4, -19, 7]\\\\)</li>\n                    <li>\\\\(M = 7\\\\)</li>\n                    <li>\\\\(b = [-13, -10, 18, 4, -9, 8, -12]\\\\)</li>\n                </ul>\n                <p>Approach: We will combine the array as follows: <code>c = [12, 3, -13, 4, -19, 7, -13, -10, 18, 4, -9, 8, -12]</code>. The maximum subarray sum achievable is 37.</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n</body>\n</html>",
        "google_doc_link": "https://docs.google.com/document/d/1-yo_g6Zr1BHJ0wv6zXsgj4iR6eaU0wRQp-OfMIMiv60/edit?usp=sharing",
        "solution_code": "",
        "company_name": "MetLife",
        "company_id": 108
    }
]