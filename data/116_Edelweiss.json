[
    {
        "id": 390,
        "title": "Minimize Cost of Task Scheduling",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1>Minimize Cost of Task Scheduling</h1>\n    \n    <div class=\\\"problem-description\\\">\n        <p>The data analysts of Hackerland want to schedule some long-running tasks on remote servers optimally to minimize the cost of running them locally. The analysts have two servers, a <strong>paid</strong> one and a <strong>free</strong> one.</p>\n        <p>The free server can be used only if the paid server is occupied.</p>\n        <p>The <em>i<sup>th</sup></em> task is expected to take <code>time[i]</code> units of time to complete and the cost of processing the task on the paid server is <code>cost[i]</code>. The task can be run on the free server only if some task is already running on the paid server. The cost of the free server is 0, and it can process any task in 1 unit of time.</p>\n        <p>Find the minimum cost to complete all the tasks if tasks are scheduled optimally.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains an integer <strong>n</strong>, the number of tasks.</li>\n            <li>The second line contains <strong>n</strong> space-separated integers representing <strong>cost</strong>, where <code>cost[i]</code> is the cost of scheduling the i-th task on the paid server.</li>\n            <li>The third line contains <strong>n</strong> space-separated integers representing <strong>time</strong>, where <code>time[i]</code> is the time taken to run the i-th task on the remote server.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return a single integer, the minimum cost to complete all the tasks.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 &le; n &le; 10<sup>5</sup></li>\n            <li>1 &le; cost[i] &le; 10<sup>5</sup></li>\n            <li>1 &le; time[i] &le; 10<sup>5</sup></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4\n2 3 4 2\n1 1 1 1</pre>\n            <pre class=\\\"output\\\">Output:\n4</pre>\n            <div class=\\\"explanation\\\">\n                <p><strong>Explanation:</strong></p>\n                <p>The first and the last tasks can be scheduled on the paid server. In the meantime, the other two can be scheduled on the free server. The total cost is <code>2 + 2 = 4</code>.</p>\n            </div>\n        </div>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4\n1 2 3 2\n1 2 3 2</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n            <div class=\\\"explanation\\\">\n                <p><strong>Explanation:</strong></p>\n                <p>The first and the second tasks can be scheduled on the paid server, running in parallel. The last two tasks can be scheduled on the free server. The total cost is <code>1 + 2 = 3</code>.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getMinCost</code>:</p>\n        <pre><code>int getMinCost(vector&lt;int&gt; cost, vector&lt;int&gt; time);</code></pre>\n        <p>The function has the following parameters:</p>\n        <ul>\n            <li><code>vector&lt;int&gt; cost</code>: the costs of scheduling the tasks on a remote server.</li>\n            <li><code>vector&lt;int&gt; time</code>: the times taken to run the tasks on a remote server.</li>\n        </ul>\n        <p><strong>Return:</strong></p>\n        <p><code>int</code>: the minimum cost to complete all the tasks.</p>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/157LBjuzEIFqkRUvcjT9MZX1_rCR2yX6G2ngkmx7ybrU/edit?usp=sharing",
        "solution_code": "int getMinCost(vector<int> cost, vector<int> time) {\\n    int n = cost.size();\\n    const int INF = 1e9;\\n    vector<int> dp(n + 1, INF);\\n    dp[0] = 0;\\n    \\n    for(int i = 0; i < n; ++i) {\\n        int value = time[i] + 1;\\n        int c = cost[i];\\n        for(int s = n; s >= 0; --s) {\\n            if(dp[s] == INF) {\\n                continue;\\n            }\\n            int new_s = s + value;\\n            if(new_s > n) {\\n                new_s = n;\\n            }\\n            if(dp[new_s] > dp[s] + c) {\\n                dp[new_s] = dp[s] + c;\\n            }\\n        }\\n    }\\n    \\n    return dp[n];\\n}",
        "company_name": "Edelweiss",
        "company_id": 116
    }
]