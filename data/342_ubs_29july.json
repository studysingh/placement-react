[
    {
        "id": 1053,
        "title": "Question 31",
        "problem_statement": "<h1>Question 31</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a collection of items and their associated costs, where each item can have multiple cost options. There are <code>numItems</code> total items, labeled from 0 to <code>numItems - 1</code>.</p>\r\n<p>You have two integer arrays that define the available cost options, <code>itemid</code> and <code>cost</code>. For each <code>k</code>th entry, <code>itemid[k]</code> is the label of the item for the <code>k</code>th cost entry and <code>cost[k]</code> is the cost associated with that item.</p>\r\n<p>Implement a function that returns the minimum total cost to select exactly one cost entry for each item. If it is impossible to select exactly one cost entry for each item, return -1.</p>\r\n<p>The function <code>minTotalCost</code> takes the following inputs:</p>\r\n<ul>\r\n    <li><code>int numItems</code>: the total number of items labeled from 0 to <code>numItems - 1</code></li>\r\n    <li><code>int itemid[]</code>: an array of item labels for each cost entry</li>\r\n    <li><code>int cost[]</code>: an array containing the corresponding costs for each entry</li>\r\n</ul>\r\n<p>The function should return a <code>long</code> integer representing the minimum total cost to select all the items, or -1 if it is impossible to select exactly one cost entry for each item.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nnumItems = 2\r\nitemid = [0, 1, 0, 1, 1]\r\ncost = [4, 74, 7, 44, 7]\r\nOutput: 11</code></pre>\r\n<p><strong>Explanation:</strong> An optimal way of selecting exactly one cost entry for each item is:</p>\r\n<ol>\r\n    <li>For item 0, choose the 1st cost entry (4) instead of the 3rd (7).</li>\r\n    <li>For item 1, choose the 5th cost entry (7) instead of the 2nd (74) and 4th (44).</li>\r\n</ol>\r\n<p>The minimum total cost is 4 + 7 = 11.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nnumItems = 2\r\nitemid = [1, 0]\r\ncost = [4, 7]\r\nOutput: -1</code></pre>\r\n<p><strong>Explanation:</strong> There are no cost entries for item C. Hence, the answer is -1.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= numItems <= 5 * 10^5</code></li>\r\n    <li><code>0 <= itemid[k] < numItems</code></li>\r\n    <li><code>1 <= cost[k] <= 10^9</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "ubs_29july",
        "company_id": 342
    },
    {
        "id": 1054,
        "title": "Get Maximum Ones",
        "problem_statement": "<h1>Get Maximum Ones</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Implement a function that finds the maximum possible number of '1's in the string <code>s</code> after performing at most <code>k</code> operations.</p>\r\n<p>In one operation:</p>\r\n<ul>\r\n    <li>Choose an index <code>i</code> (where <code>0 &lt;= i &lt; length of s - 1</code>) and update the character at position <code>i</code> as follows: <code>s[i] = max(s[i], s[i] + 1)</code>. This means if <code>s[i]</code> is '0', it becomes '1'. If <code>s[i]</code> is '1', it remains '1'.</li>\r\n</ul>\r\n<p>The function <code>getMaximumOnes</code> will take two inputs:</p>\r\n<ul>\r\n    <li><code>string s</code>: the string</li>\r\n    <li><code>int k</code>: the maximum number of operations allowed</li>\r\n</ul>\r\n<p>The function should return an integer representing the maximum possible number of '1's in the string <code>s</code>.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: s = \"10110\", k = 1\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong> An optimal sequence of at most <code>k</code> operations:</p>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Operation Number</th>\r\n            <th>s before</th>\r\n            <th>Chosen Index (0-based)</th>\r\n            <th>s after</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>1</td>\r\n            <td>10110</td>\r\n            <td>Choose the index i = 1</td>\r\n            <td>11110</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>The final string \"11110\" has 4 ones.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: s = \"00011\", k = 2\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong> An optimal sequence of at most <code>k</code> operations:</p>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Operation Number</th>\r\n            <th>s before</th>\r\n            <th>Chosen Index (0-based)</th>\r\n            <th>s after</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>1</td>\r\n            <td>00011</td>\r\n            <td>Choose the index i = 0</td>\r\n            <td>00111</td>\r\n        </tr>\r\n        <tr>\r\n            <td>2</td>\r\n            <td>00111</td>\r\n            <td>Choose the index i = 1</td>\r\n            <td>01111</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>The final string \"01111\" has 4 ones.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: s = \"00000000\", k = 3\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> The string will remain unchanged as no operation is performed.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>2 &lt;= s.length &lt;= 10^5</code></li>\r\n    <li><code>0 &lt;= k &lt;= s.length</code></li>\r\n    <li>It is guaranteed that string <code>s</code> contains only '0's and '1's.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "ubs_29july",
        "company_id": 342
    }
]