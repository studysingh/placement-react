[
    {
        "id": 138,
        "title": "K-Periodic String Transformation",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">TURING - Problem 1</h2>\n\n<div class=\\\"problem-description\\\">\n        <p>You are given a string word of length n and an integer k such that k divides n.</p>\n        <p>In one operation, you can choose any two indices i and j, both divisible by k, and swap the substring of length k starting at i with the substring of length k starting at j. Specifically, you replace substring word[i..i+k-1] with the substring word[j..j+k-1].</p>\n        <p>Your goal is to determine the minimum number of operations needed to transform word into a k-periodic string.</p>\n        <p>A string is considered k-periodic if there exists a string s of length k such that the entire word can be constructed by repeating s multiple times. For instance, if word == \\\"ababab\\\", then word is 2-periodic for s = \\\"ab\\\".</p>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Examples</h3>\n\n<div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">Input: word = \\\"codeninacode\\\", k = 4</pre>\n            <pre class=\\\"output\\\">Output: 1</pre>\n            <div class=\\\"explanation\\\">\n                <p>You can achieve a 4-periodic string by selecting i = 4 and j = 0. After this operation, the word becomes \\\"codecodecode\\\".</p>\n            </div>\n        </div>\n\n<div class=\\\"example\\\">\n            <h4>Example 2:</h4>\n            <pre class=\\\"input\\\">Input: word = \\\"codencoode\\\", k = 2</pre>\n            <pre class=\\\"output\\\">Output: 2</pre>\n            <div class=\\\"explanation\\\">\n                <p>You can achieve a 2-periodic string by performing the following operations:</p>\n                <table class=\\\"operations-table\\\">\n                    <tr>\n                        <th>i</th>\n                        <th>j</th>\n                        <th>word</th>\n                    </tr>\n                    <tr>\n                        <td>0</td>\n                        <td>2</td>\n                        <td>odencoode</td>\n                    </tr>\n                    <tr>\n                        <td>2</td>\n                        <td>6</td>\n                        <td>codecode</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 &lt;= n == word.length &lt;= 10^5</li>\n            <li>1 &lt;= k &lt;= word.length</li>\n            <li>k divides word.length</li>\n            <li>The string word consists of lowercase English letters only.</li>\n        </ul>\n    </div>\n\n<div class=\\\"starter-code\\\">\n        <h3>Function Signature</h3>\n        <pre class=\\\"python\\\">\ndef solution(s: str, n: int) -> int:\n    # write your solution here\n    return -1</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1LrZ7qsw-at7HLe6oo8vWn0E14nENrLjzQYqB1lES6NY/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Turing",
        "company_id": 32
    },
    {
        "id": 394,
        "title": "TuringEncoding Number Conversion",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1>TuringEncoding Number Conversion</h1>\n\n    <div class=\\\"problem-description\\\">\n        <p>Your friend needs your help to convert a number to <strong>TuringEncoding</strong>. He gave a number <code>k</code> which you have to convert to TuringEncoding using the following instructions:</p>\n        <ol>\n            <li><code>convert(1) = \\\"1\\\"</code></li>\n            <li><code>convert(k)</code> is the TuringEncoding of <code>convert(k-1)</code>.</li>\n        </ol>\n        <p>TuringEncoding is a compression method for strings that aims to reduce the length of the string by replacing consecutive identical characters (repeated 2 or more times) with a combination of the character itself and the count of consecutive occurrences.</p>\n        <p>For example, consider the string \\\"44333811\\\".</p>\n        <p>To apply the TuringEncoding compression, we identify repeating segments:</p>\n        <ul>\n            <li>Replace \\\"44\\\" with \\\"24\\\" (2 consecutive 4s)</li>\n            <li>Replace \\\"333\\\" with \\\"33\\\" (3 consecutive 3s)</li>\n            <li>Replace \\\"8\\\" with \\\"18\\\" (1 occurrence of 8)</li>\n            <li>Replace \\\"11\\\" with \\\"11\\\" (1 occurrence of 1)</li>\n        </ul>\n        <p>By performing these replacements, the compressed string becomes <code>\\\"24331811\\\"</code>.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>A single integer <code>n</code> (the number to be converted).</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print the TuringEncoding of the given number <code>n</code>.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 &le; <code>n</code> &le; 40</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n3</pre>\n            <pre class=\\\"output\\\">Output:\n21</pre>\n            <div class=\\\"explanation\\\">\n                <p><strong>Explanation:</strong></p>\n                <ul>\n                    <li><code>convert(3)</code> = TuringEncoding of <code>convert(2)</code> = \\\"21\\\"</li>\n                    <li><code>convert(2)</code> = TuringEncoding of <code>convert(1)</code> = \\\"11\\\"</li>\n                    <li><code>convert(1)</code> = \\\"1\\\"</li>\n                </ul>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n1</pre>\n            <pre class=\\\"output\\\">Output:\n1</pre>\n            <div class=\\\"explanation\\\">\n                <p><strong>Explanation:</strong> This is the base case.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"solution-template\\\">\n        <h3>Solution Template</h3>\n        <pre><code>def solution(n: int) -> str:\n    # Write your solution here\n    return \\\"\\\"</code></pre>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1m739YvyLQcb6WLFKuuEp2PCmy6Sop3FO1Sx5z_vqoGA/edit?usp=sharing",
        "solution_code": "def solution(n: int) -> str:\\n    def turing_encoding(s: str) -> str:\\n        result = []\\n        count = 1\\n        for i in range(1, len(s)):\\n            if s[i] == s[i - 1]:\\n                count += 1\\n            else:\\n                result.append(str(count))\\n                result.append(s[i - 1])\\n                count = 1\\n        result.append(str(count))\\n        result.append(s[-1])\\n        return \\'\\'.join(result)\\n\\n    s = \\\"1\\\"\\n    for _ in range(1, n):\\n        s = turing_encoding(s)\\n    return s",
        "company_name": "Turing",
        "company_id": 32
    }
]