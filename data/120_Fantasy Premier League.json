[
    {
        "id": 409,
        "title": "Chain Square",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Chain Square</h1>\n        <p>\n            Given a directed tree of <code>N</code> nodes in a form of an array <code>A</code> of size <code>N - 1</code>, such that there is a directed edge from the node <code>A[i]</code> to the node <code>i+1</code> (<code>1 ≤ i &lt; N</code>).\n        </p>\n        <p>\n            You can perform the following operations on it:\n            <ul>\n                <li>In one operation, you can break any edge in the tree, dividing that tree into two trees.</li>\n            </ul>\n        </p>\n        <p>\n            Break the given tree into a set of trees such that each tree is a directed chain. Your score is the sum of squares of lengths of the directed chains in the set. Print the maximum possible score.\n        </p>\n        <h3>Notes</h3>\n        <ul>\n            <li>A <strong>directed chain</strong> is a directed tree such that each node in that tree has <em>at most one out-degree</em> and <em>at most one in-degree</em>.</li>\n            <li>The length of a directed chain is the number of nodes in that directed chain.</li>\n            <li>Assume <code>1</code>-based indexing.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains an integer <code>N</code>, representing the size of the tree.</li>\n            <li>The second line contains <code>N - 1</code> space-separated integers representing the array <code>A</code>.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>\n            Print a single integer representing the maximum possible score.\n        </p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ N ≤ 10<sup>5</sup></code></li>\n            <li><code>1 ≤ A[i] ≤ N</code> for <code>1 ≤ i &lt; N</code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n1 1 2 2</pre>\n            <pre class=\\\"output\\\">Output:\n17</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    Breaking edges optimally results in two directed chains with lengths <code>4</code> and <code>1</code>. The sum of squares of these lengths is <code>4<sup>2</sup> + 1<sup>2</sup> = 16 + 1 = 17</code>.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1GxQOFWsO7XJkuv7eyRhwy_g8H0Rhe34qxri0mm3jP0o/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Fantasy Premier League",
        "company_id": 120
    },
    {
        "id": 412,
        "title": "Modulo Queries",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Modulo Queries</h1>\n        <p>\n            There is an empty container. You want to support <strong>2 types of queries</strong> in this container:\n        </p>\n        <ul>\n            <li><code>1 V X</code>: Insert an element in the container with value <code>V</code> and power equal to <code>X</code>.</li>\n            <li>\n                <code>2 V 0</code>: Let <code>N</code> be the number of bits in the binary representation of <code>V</code> without leading zeros. \n                Consider all the elements in the container till now. You need to count the number of elements which when divided by <code>2<sup>N</sup></code> leaves a remainder equal to <code>V</code> and also find the sum of powers of such numbers. \n                Mathematically, count the number of elements <code>Y</code> such that <code>Y</code> is present in the container and <code>Y mod 2<sup>N</sup> = V</code>. \n                For all such <code>Y</code>, you need to find the sum of their powers also.\n            </li>\n        </ul>\n        <p>Given <code>Q</code> queries, answer queries of type <code>2 V 0</code>.</p>\n        <h3>Notes</h3>\n        <ul>\n            <li><em>1-based indexing</em> is followed.</li>\n            <li>Do not consider leading zeros while counting the number of bits in an integer.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>\n            Complete the <code>modulo_queries()</code> function. This function takes the following <strong>2 parameters</strong> and returns a 2D array/vector containing answers to queries of Type 2:\n        </p>\n        <ul>\n            <li><code>Q</code>: Represents the integer <code>Q</code> denoting the number of queries.</li>\n            <li><code>queries</code>: Represents a 2D array/vector denoting queries of the type <code>\\\"1 V X\\\"</code> or <code>\\\"2 V 0\\\"</code>. Therefore, the size of the queries array is <code>Q×3</code>.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>Use this input format if you are testing against custom input or writing code in a language where we don’t provide boilerplate code:</p>\n        <ul>\n            <li>The first line contains <code>T</code>, which represents the number of test cases.</li>\n            <li>For each test case:\n                <ul>\n                    <li>The first line contains an integer <code>Q</code> denoting the number of queries.</li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return a 2D array/vector containing the answers to the queries of type <code>2 V 0</code>.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ Q ≤ 10<sup>5</sup></code></li>\n            <li><code>1 ≤ V, X ≤ 10<sup>9</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nT = 1\nQ = 5\n1 3 1\n1 4 2\n2 3 0\n1 6 3\n2 4 0</pre>\n            <pre class=\\\"output\\\">Output:\n1 1\n1 2</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    For query <code>2 3 0</code>, there is one element <code>3</code> in the container with power <code>1</code>.<br>\n                    For query <code>2 4 0</code>, there is one element <code>4</code> in the container with power <code>2</code>.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1jlbboamS8OFxvdJaUzVCYCydICrhB344W_PAoSIoqHo/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Fantasy Premier League",
        "company_id": 120
    },
    {
        "id": 413,
        "title": "Frequency",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Frequency</h1>\n        <p>You are given a table <em>applicant</em>.</p>\n        <h2>Task</h2>\n        <p>Write an SQL query to fetch the <code>email_id</code> and the <strong>frequency</strong> of the redundant records, i.e., the records that occurred more than once in the table. Arrange the output in alphabetical order of the <code>email_id</code>.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>Table: <em>applicant</em></p>\n        <table>\n            <tr>\n                <th>Field</th>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n            <tr>\n                <td>applicant_id</td>\n                <td>Integer</td>\n                <td>Represents the unique id of the applicant</td>\n            </tr>\n            <tr>\n                <td>applicant_name</td>\n                <td>String</td>\n                <td>Represents the name of the applicant</td>\n            </tr>\n            <tr>\n                <td>email_id</td>\n                <td>String</td>\n                <td>Represents the email id of the applicant</td>\n            </tr>\n        </table>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <table>\n            <tr>\n                <th>Field</th>\n                <th>Type</th>\n                <th>Description</th>\n            </tr>\n            <tr>\n                <td>email_id</td>\n                <td>String</td>\n                <td>Represents the email id of the applicant</td>\n            </tr>\n            <tr>\n                <td>frequency</td>\n                <td>Integer</td>\n                <td>Represents the count of occurrence of the redundant record</td>\n            </tr>\n        </table>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>Time Limit: 5 seconds for each input file</li>\n            <li>Memory Limit: 256 MB</li>\n            <li>Source Limit: 1024 KB</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <h4>Input Table:</h4>\n            <p>Table: <em>applicant</em></p>\n            <table>\n                <tr>\n                    <th>applicant_id</th>\n                    <th>applicant_name</th>\n                    <th>email_id</th>\n                </tr>\n                <tr>\n                    <td>1</td>\n                    <td>Robin</td>\n                    <td>Robin12@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>2</td>\n                    <td>Rachael</td>\n                    <td>Rachael23@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>3</td>\n                    <td>Michael</td>\n                    <td>Michael92@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>4</td>\n                    <td>Hermoine</td>\n                    <td>Hermoine99@gmail.com</td>\n                </tr>\n                <tr>\n                    <td>5</td>\n                    <td>Hermoine</td>\n                    <td>Hermoine99@gmail.com</td>\n                </tr>\n            </table>\n            <h4>Output Table:</h4>\n            <table>\n                <tr>\n                    <th>email_id</th>\n                    <th>frequency</th>\n                </tr>\n                <tr>\n                    <td>Hermoine99@gmail.com</td>\n                    <td>2</td>\n                </tr>\n            </table>\n            <div class=\\\"explanation\\\">\n                <p>The email ID <code>Hermoine99@gmail.com</code> occurs twice in the input table, so the frequency is <strong>2</strong>.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"notes\\\">\n        <h3>Note</h3>\n        <p>Your SQL query must be able to print the sample output from the provided sample input. However, the query is run against multiple hidden test cases. Therefore, your query must pass these hidden test cases to solve the problem statement.</p>\n    </div>\n\n    <div class=\\\"limits\\\">\n        <h3>Limits</h3>\n        <ul>\n            <li>Time Limit: 5 seconds for each input file</li>\n            <li>Memory Limit: 256 MB</li>\n            <li>Source Limit: 1024 KB</li>\n        </ul>\n    </div>\n\n    <div class=\\\"scoring\\\">\n        <h3>Scoring</h3>\n        <p>Score is assigned if any test case passes.</p>\n    </div>\n\n    <div class=\\\"allowed-languages\\\">\n        <h3>Allowed Languages</h3>\n        <p>MySQL, PostgreSQL</p>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1GUGih8nGCyxvweuxs11UVi5JDq92LQ-1mmlhhsGE0DA/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Fantasy Premier League",
        "company_id": 120
    },
    {
        "id": 417,
        "title": "Image conversion",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h2>Image conversion</h2>\n        <p>Given an input image <i>A</i> and you want to convert it to image <i>C</i>. But, the direct conversion from <i>A</i> to <i>C</i> is not possible hence you first need to convert image <i>A</i> to image <i>B</i> and then convert image <i>B</i> to image <i>C</i>. Here an image is represented as an array of <i>N</i> distinct integers (permutation of integers 1 through <i>N</i>).</p>\n\n        <h3>Conversion from Image <i>A</i> to image <i>B</i></h3>\n        <ul>\n            <li>Always select the first integer (pixel) of array <i>A</i>.</li>\n            <li>Either append it at the end of the array (image) <i>A</i> or put it at any index in array (image) <i>A</i>.</li>\n            <li>Doing this 1 operation costs <i>K1</i>.</li>\n        </ul>\n\n        <h3>Conversion from Image <i>B</i> to image <i>C</i></h3>\n        <ul>\n            <li>Always select the last integer (pixel) of the array(image) <i>B</i>.</li>\n            <li>Either append it at the beginning of the array (image) <i>B</i> or put it at any index in array (image) <i>B</i>.</li>\n            <li>Doing this 1 operation costs <i>K2</i>.</li>\n        </ul>\n\n        <p>Calculate the minimum cost to convert image <i>A</i> to image <i>C</i>.</p>\n\n        <h2>Function description</h2>\n        <p>Complete the function <i>minimumCost()</i>. This function takes the following 6 parameters and returns the answer:</p>\n        <ul>\n            <li><i>A</i>: Represents image <i>A</i></li>\n            <li><i>N</i>: Represents the size of the array</li>\n            <li><i>B</i>: Represents image <i>B</i></li>\n            <li><i>C</i>: Represents image <i>C</i></li>\n            <li><i>K1</i>: Represents the cost of each operation during the conversion of <i>A</i> -> <i>B</i></li>\n            <li><i>K2</i>: Represents the cost of each operation during the conversion of <i>B</i> -> <i>C</i></li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input format for custom testing</h3>\n        <p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don\\'t provide boilerplate code.</p>\n        <ul>\n            <li>The first line contains <i>N</i> denoting the size of the array.</li>\n            <li>The second line contains <i>N</i> space-separated integers denoting the pixels of image <i>A</i>.</li>\n            <li>The third line contains <i>N</i> space-separated integers denoting the pixels of image <i>B</i>.</li>\n            <li>The fourth line contains <i>N</i> space-separated integers denoting the pixels of image <i>C</i>.</li>\n            <li>The fifth line contains integer <i>K1</i> denoting the cost of each operation in conversion from image <i>A</i> to image <i>B</i>.</li>\n            <li>The sixth line contains integer <i>K2</i> denoting the cost of each operation in conversion from image <i>B</i> to image <i>C</i>.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output format</h3>\n        <p>Print a single integer representing the minimum conversion cost from image <i>A</i> to image <i>C</i>.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ <i>N</i> ≤ 10<sup>5</sup></li>\n            <li>1 ≤ <i>A[i], B[i], C[i]</i> ≤ <i>N</i>; <i>A</i>, <i>B</i> and <i>C</i> are permutations of integers 1 through <i>N</i></li>\n            <li>1 ≤ <i>K1, K2</i> ≤ 10<sup>4</sup></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4\n3 2 1 4\n1 2 3 4\n1 2 4 3\n8\n5</pre>\n            <pre class=\\\"output\\\">Output:\n21</pre>\n            <div class=\\\"explanation\\\">\n                <p>Given:</p>\n                <ul>\n                  <li><i>N</i> = 4</li>\n                  <li><i>A</i> = [3, 2, 1, 4]</li>\n                  <li><i>B</i> = [1, 2, 3, 4]</li>\n                  <li><i>C</i> = [1, 2, 4, 3]</li>\n                  <li><i>K1</i> = 8</li>\n                  <li><i>K2</i> = 5</li>\n                </ul>\n                 <p>Approach</p>\n                 <ol>\n                    <li>Remove 3 from the beginning of <i>A</i> and add it after 1. Cost of which will be 8 and <i>A</i> = [2, 1, 3, 4]</li>\n                    <li>Remove 2 from the beginning of <i>A</i> and add it after 1. Cost of which will be 8 and <i>A</i> = [1, 2, 3, 4] = <i>B</i></li>\n                    <li>Hence <i>A</i> = <i>B</i> and it costs us 8 + 8 = 16</li>\n                    <li>Remove 4 from the end of <i>B</i> and add it before 3. Cost of which will be 5 and <i>B</i> = [1, 2, 4, 3] = <i>C</i></li>\n                    <li>Hence <i>B</i> = <i>C</i> and it costs us 5</li>\n                 </ol>\n                 <p>So, the total cost to convert image A to image C will be 16 + 5 = 21</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1JrXDNqqLJf7Ox6N9_KN_tBEGFJEP7ev54dg62E-dOgc/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Fantasy Premier League",
        "company_id": 120
    },
    {
        "id": 420,
        "title": "Chain Square",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Chain Square</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Given a directed tree of <strong>N</strong> nodes in the form of an array <strong>A</strong> of size <strong>N - 1</strong>, such that there is a directed edge from the node <code>A[i]</code> to the node <code>i + 1</code> (1 ≤ i < N).</p>\n        <p>You can perform the following operations on it:</p>\n        <ul>\n            <li>In one operation, you can break any edge in the tree, dividing that tree into two trees.</li>\n        </ul>\n        <p>Break the given tree into a set of trees such that each tree is a directed chain. Your score is the sum of squares of lengths of the directed chains in the set. Print the maximum possible score.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains a single integer <strong>N</strong>.</p>\n        <p>The second line contains <strong>N - 1</strong> space-separated integers <code>A[i]</code> where <code>A[i]</code> represents the directed edges.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print a single integer that is the maximum possible score.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ N ≤ 10<sup>5</sup></code></li>\n            <li><code>1 ≤ A[i] ≤ N</code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n1 2 3 4</pre>\n            <pre class=\\\"output\\\">Output:\n25</pre>\n            <div class=\\\"explanation\\\">\n                <p>In this example, breaking the edges optimally results in a maximum score of 25.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1QFXheL4JQsaQ9GNpIlLl-FEaZPwvtnaan2vBl326jp0/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Fantasy Premier League",
        "company_id": 120
    }
]