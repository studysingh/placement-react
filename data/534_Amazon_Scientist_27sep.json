[
    {
        "id": 1528,
        "title": "First Unique Character in a String",
        "problem_statement": "<h1>First Unique Character in a String</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Amazon Web Services is experimenting with optimizing search queries based on the location of the first unique character in a string. You have been asked to help test the query your team has created to ensure it works as designed. A unique character is one which appears only once in a string. Given a string consisting of lowercase English letters only, return the index of the first occurrence of a unique character in the string using 1-based indexing. If the string does not contain any unique character, return -1.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: s = \"statistics\"\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The unique characters are [a, c] among which 'a' occurs first. Using 1-based indexing, it is at index 3.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: s = \"hackthegame\"\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The unique characters are [c, t, g, m] out of which the character 'c' occurs first, at index 3.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: s = \"falafal\"\r\nOutput: -1</code></pre>\r\n<p><strong>Explanation:</strong> All the characters present occur at least twice in the given string. There are no unique characters.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>findFirstUnique</code> in the editor below.</p>\r\n<p><code>findFirstUnique</code> has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>string s:</code> a string</li>\r\n</ul>\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n    <li><code>int:</code> either the 1-based index or -1</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= length of s <= 10<sup>5</sup></code></li>\r\n    <li>The string <code>s</code> consists of lowercase English letters only.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_Scientist_27sep",
        "company_id": 534
    },
    {
        "id": 1529,
        "title": "Minimum Classes for Skill Grouping",
        "problem_statement": "<h1>Minimum Classes for Skill Grouping</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Amazon Technical Academy (ATA) provides in-demand, technical training to current Amazon employees looking to broaden their skill sets. ATA has admitted a group of N prospective trainees with varying skill levels. To better accommodate the trainees, ATA has decided to create classes tailored to the skill levels. A placement examination will return a skill level that will be used to group the trainees into classes where <code>levels[i]</code> represent the skill level of trainee <code>i</code>. All trainees within a class must have a skill level within <code>maxSpread</code>, a specified range of one another. Determine the minimum number of classes that must be formed.</p>\r\n\r\n<p>Complete the function <code>groupStudents</code> in the editor below.</p>\r\n<p><code>groupStudents</code> has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>int levels[n]</code>: the skill level for each student</li>\r\n    <li><code>int maxSpread</code>: the maximum allowed skill level difference between any two members of a class</li>\r\n</ul>\r\n<p>Returns:</p>\r\n<ul>\r\n    <li><code>int</code>: the minimum number of classes that can be formed</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 5, levels = [1, 4, 7, 3, 4], maxSpread = 2\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The trainees in any class must be within <code>maxSpread = 2</code> levels of each other. In this case, one optimal grouping is (1), (3, 4, 4), and (7). Another possible grouping is (1), (3, 4), (4), (7). There is no way to form fewer than 3 classes.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 4, levels = [4, 8, 1, 7], maxSpread = 3\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> The students are grouped into 2 classes as [1, 4] and [7, 8].</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: n = 5, levels = [4, 1, 2, 5, 3], maxSpread = 0\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong> There are no students with matching levels so each student must be in a separate class.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10^5</code></li>\r\n    <li><code>1 <= levels[i] <= 10^9</code> for every <code>i</code> (where <code>0 <= i <= n-1</code>)</li>\r\n    <li><code>0 <= maxSpread <= 10^9</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_Scientist_27sep",
        "company_id": 534
    }
]