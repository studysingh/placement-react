[
    {
        "id": 225,
        "title": "Count Isomorphic",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1 class=\\\"problem-title\\\">Count Isomorphic</h1>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are given a list of N strings consisting of only lowercase letters. S[i] represents the i<sup>th</sup> string in the list.</p>\n        \n        <h3>Task</h3>\n        <p>You are given Q queries. For each query, you are given a string K[i]. Determine the count of strings that are present in the list of strings such that they are isomorphic to K[i].</p>\n        \n        <h3>Notes</h3>\n        <ul>\n            <li>Two strings, X and Y, are called isomorphic if all occurrences of each character in X can be replaced with another character to get Y and vice-versa.</li>\n            <li>For example, consider strings \\\"ACAB\\\" and \\\"XCXY\\\". They are isomorphic as you can map \\'A\\' to \\'X\\', \\'B\\' to \\'Y\\', and \\'C\\' to \\'C\\', to get the string \\\"XCXY\\\" from \\\"ACAB\\\".</li>\n            <li>The mapping from a character to itself is allowed, but the same character cannot replace two characters.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"example\\\">\n        <h3>Example</h3>\n        <h4>Assumptions:</h4>\n        <ul>\n            <li>N = 4</li>\n            <li>Q = 1</li>\n            <li>S = [\\\"abaca\\\", \\\"efefe\\\", \\\"trtft\\\", \\\"rtrcr\\\"]</li>\n            <li>K = [\\\"hwhoh\\\"]</li>\n        </ul>\n\n        <h4>Approach:</h4>\n        <ul>\n            <li>\\\"abaca\\\", \\\"trtft\\\", \\\"rtrcr\\\" are isomorphic to \\\"hwhoh\\\".</li>\n            <li>\\\"abaca\\\" is isomorphic to \\\"hwhoh\\\" if you map \\'a\\' to \\'h\\', \\'b\\' to \\'w\\' and \\'c\\' to \\'o\\'.</li>\n            <li>\\\"trtft\\\" is isomorphic to \\\"hwhoh\\\" if you map \\'t\\' to \\'h\\', \\'r\\' to \\'w\\' and \\'f\\' to \\'o\\'.</li>\n            <li>\\\"rtrcr\\\" is isomorphic to \\\"hwhoh\\\" if you map \\'r\\' to \\'h\\', \\'t\\' to \\'w\\' and \\'c\\' to \\'o\\'.</li>\n            <li>\\\"efefe\\\" is not isomorphic to \\\"hwhoh\\\" because you cannot map \\'f\\' to \\'w\\' and \\'o\\' at the same time.</li>\n            <li>So, the answer is 3</li>\n        </ul>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function solve which takes in the following 4 parameters and returns an integer array representing the answer of each query:</p>\n        <ul>\n            <li>N: Represents the number of strings in the list</li>\n            <li>Q: Represents the number of queries that you need to answer</li>\n            <li>S: Represents an array representing the list of strings</li>\n            <li>K: Represents an array representing the string K for each query</li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains an integer N.</li>\n            <li>The second line contains an integer Q.</li>\n            <li>The following N line contains strings representing the list of strings.</li>\n            <li>The following Q line contains strings, representing the array K.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print Q space-separated integers representing the answer for each query.</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1jXYcN-fLWnjN45DjMNoRO3Ijw7-ovlHPXC6aB4tOD_Y/edit?usp=sharing",
        "solution_code": "#include <bits/stdc++.h>\\nusing namespace std;\\n\\nstring getPattern(const string &s) {\\n    unordered_map<char, int> mp;\\n    string p = \\\"\\\";\\n    int nxt = 0;\\n    for(char c : s){\\n        if(mp.find(c) == mp.end()){\\n            mp[c] = nxt++;\\n        }\\n        p += to_string(mp[c]) + \\\",\\\";\\n    }\\n    return p;\\n}\\n\\nvector<int> solve(int N, int Q, vector<string> &S, vector<string> &K) {\\n    unordered_map<string, int> cnt;\\n    \\n    for(auto &s : S){\\n        string p = getPattern(s);\\n        cnt[p]++;\\n    }\\n    \\n    vector<int> res;\\n    \\n    for(auto &k : K){\\n        string p = getPattern(k);\\n        if(cnt.find(p) != cnt.end()){\\n            res.push_back(cnt[p]);\\n        }\\n        else{\\n            res.push_back(0);\\n        }\\n    }\\n    \\n    return res;\\n}",
        "company_name": "Google",
        "company_id": 59
    },
    {
        "id": 226,
        "title": "Minimize the cost",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h2>Minimize the cost</h2>\n        <span class=\\\"max-score\\\">Max. score: 20.00</span>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>You are given two strings S and R, each of size N, containing lowercase English letters.</p>\n        \n        <p>You can do the following operations any number of times:</p>\n        <ul>\n            <li><strong>Type 0:</strong> Select any two indices i and j from 0 to n-1 and swap S[i] with S[j]. This operation is free of cost.</li>\n            <li><strong>Type 1:</strong> Select any index i from 0 to n-1 and swap S[i] with any lowercase English letter. This operation costs 1 coin.</li>\n        </ul>\n\n        <h3>Task</h3>\n        <p>Determine the minimum cost to make string S equal to R.</p>\n        <p class=\\\"note\\\">Note: 0-based indexing is followed.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains an integer T denoting the number of test cases.</li>\n            <li>For each test case:\n                <ul>\n                    <li>The first line contains N denoting the size of the strings S and R.</li>\n                    <li>The second line contains the string S.</li>\n                    <li>The third line contains the string R.</li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each test case in a new line, print an integer representing the minimum cost to make string S equal to R.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ T ≤ 5</li>\n            <li>1 ≤ N ≤ 10<sup>5</sup></li>\n            <li>S and R contains only lowercase English letters</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <h4>Assumptions:</h4>\n            <ul>\n                <li>N = 5</li>\n                <li>S = \\\"abdfd\\\"</li>\n                <li>R = \\\"abcde\\\"</li>\n            </ul>\n\n            <h4>Approach</h4>\n            <p>The required operations are:</p>\n            <ol>\n                <li>Type 0: Select two indices 2 and 3 and swap them. The string S becomes \\\"abfdd\\\".</li>\n                <li>Type 1: Select index 2 and replace it with the character \\'c\\'. The string S becomes \\\"abcdd\\\". This operation costs 1 coin.</li>\n                <li>Type 1: Select index 4 and replace it with the character \\'e\\'. The string S becomes \\\"abcde\\\". This operation costs 1 coin.</li>\n            </ol>\n\n            <p class=\\\"result\\\">Hence, the minimum cost is 2.</p>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1XpthyFrVUSCBEy0izSTMWh5LfCWLnoKeN4_FV1WthB4/edit?usp=sharing",
        "solution_code": "void runTestCase(string S, string R, int expected) {\\n    \\n        vector<int> freq_S(26, 0), freq_R(26, 0);\\n        for(char c : S) {\\n            freq_S[c - \\'a\\']++;\\n        }\\n        for(char c : R) {\\n            freq_R[c - \\'a\\']++;\\n        }\\n        \\n        int cost = 0;\\n        for(int i = 0; i < 26; i++) {\\n            if(freq_R[i] > freq_S[i]) {\\n                cost += freq_R[i] - freq_S[i];\\n            }\\n        }\\n        \\n        cout << cost << \\\"\\\\n\\\";\\n    \\n}",
        "company_name": "Google",
        "company_id": 59
    },
    {
        "id": 245,
        "title": "Shrink the Array",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h2 class=\\\"problem-title\\\">Shrink the Array</h2>\n        <div class=\\\"score-indicator\\\">Max. score: 20.00</div>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>You are given an array A of size N. Among all the elements in the array having the same value, replace the element which is in the middle position with the sum of all same value elements, and remove all the other same value elements. The relative position of the middle element should remain the same as that in the original array. Among multiple middle positions take the second one.</p>\n    </div>\n\n    <div class=\\\"task\\\">\n        <h3>Task</h3>\n        <p>Determine the final array after shrinking.</p>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        \n        <div class=\\\"assumptions\\\">\n            <h4>Assumptions</h4>\n            <ul>\n                <li>N = 10</li>\n                <li>A = [1, 2, 2, 1, 1, 2, 1, 3, 3, 3]</li>\n            </ul>\n        </div>\n\n        <div class=\\\"approach\\\">\n            <h4>Approach</h4>\n            <ul>\n                <li>For value = 1, elements at indexes 1, 4, 5, and 7 are grouped</li>\n                <li>The middle position (second among middle positions) is 4</li>\n                <li>Sum of all 1\\'s is 4</li>\n                <li>For value = 2, elements at indexes 2, 3, and 6 are grouped</li>\n                <li>The middle position is 3</li>\n                <li>Sum of all 2\\'s is 6</li>\n                <li>For value = 3, elements at indexes 8, 9, and 10 are grouped</li>\n                <li>The middle position is 9</li>\n                <li>Sum of all 3\\'s is 9</li>\n            </ul>\n        </div>\n\n        <div class=\\\"example-result\\\">\n            <h4>Final Result</h4>\n            <pre class=\\\"output\\\">Output Array: [4, 6, 9]</pre>\n            <p>Explanation: Each group of same numbers is replaced by their sum at the middle position (taking second middle position when there are multiple middle positions), and all other occurrences are removed.</p>\n        </div>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 10<sup>5</sup></li>\n            <li>1 ≤ A[i] ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>First line contains an integer N denoting the size of the array.</p>\n        <p>Second line contains N space-separated integers denoting the elements of array A.</p>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return the final array after performing the shrinking operation.</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1M_Md0fpRjsl9EmpVGmFdX3HdEK9-wctf26A9VizKRUM/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Google",
        "company_id": 59
    }
]