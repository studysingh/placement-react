[
    {
        "id": 220,
        "title": "Peter\\'s Number",
        "problem_statement": "<div class=\\\\\\\"problem-container\\\\\\\">\\n    <h2 class=\\\\\\\"problem-title\\\\\\\">Peter\\\\\\'s Number</h2>\\n    \\n    <div class=\\\\\\\"problem-description\\\\\\\">\\n        <p>Imagine that Peter likes numbers a lot and wants to choose a number that consists of n digits. But it has to be special. Peter also wants it to have a sum of digits equal to s, which should be as large as possible. The number cannot have leading zeroes. Can you help Peter find that number or determine that it does not exist?</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"input-format\\\\\\\">\\n        <h3>Input Format</h3>\\n        <p>The first line of input contains an integer n, representing the number of digits in the requested number.</p>\\n        <p>The second line of input contains s, representing the sum of its digits.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"output-format\\\\\\\">\\n        <h3>Output Format</h3>\\n        <p>Print the requested number if it exists or -1 otherwise.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"constraints\\\\\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>1 ≤ n ≤ 10<sup>5</sup></li>\\n            <li>0 ≤ s ≤ 10<sup>6</sup></li>\\n        </ul>\\n    </div>\\n    \\n    <div class=\\\\\\\"examples\\\\\\\">\\n        <h3>Examples</h3>\\n        \\n        <div class=\\\\\\\"example\\\\\\\">\\n            <h4>Example #1</h4>\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\n1\\n5</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n5</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <p>Explanation: 5 is the only one digit number with the sum of digits equal to five.</p>\\n            </div>\\n        </div>\\n\\n        <div class=\\\\\\\"example\\\\\\\">\\n            <h4>Example #2</h4>\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\n2\\n15</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n96</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <p>Explanation: Notice that the person could, for example, choose 87. But the person chooses 96 because it is the largest.</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1QsHoT2HruhqZu6pR2u4LDz-8OiVbO6JNYWllz68S4LY/edit?usp=sharing",
        "solution_code": "import java.io.BufferedReader;\\nimport java.io.InputStreamReader;\\nimport java.io.IOException;\\nimport java.util.List;\\nimport java.util.ArrayList;\\n\\ninterface IProduct {\\n}\\n\\nclass Product implements IProduct {\\n    String id;\\n    int sv;\\n    int sl;\\n    \\n    public Product(String id, int sv, int sl) {\\n        this.id = id;\\n        this.sv = sv;\\n        this.sl = sl;\\n    }\\n}\\n\\nclass InventoryClearance {\\n    public List<String> identifyClearanceItems(List<Product> ps) {\\n        List<String> el = new ArrayList<>();\\n        for(Product p : ps) {\\n            if(p.sl >= 10 * p.sv) {\\n                el.add(p.id);\\n            }\\n        }\\n        return el;\\n    }\\n}\\n\\npublic class Solution {\\n    public static void main(String[] args) throws IOException {\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\n        int n = Integer.parseInt(br.readLine());\\n        List<Product> ps = new ArrayList<>(n);\\n        for(int i = 0; i < n; i++) {\\n            String[] parts = br.readLine().split(\\\" \\\");\\n            String id = parts[0];\\n            int sv = Integer.parseInt(parts[1]);\\n            int sl = Integer.parseInt(parts[2]);\\n            ps.add(new Product(id, sv, sl));\\n        }\\n        InventoryClearance ic = new InventoryClearance();\\n        List<String> el = ic.identifyClearanceItems(ps);\\n        StringBuilder sb = new StringBuilder();\\n        for(String id : el) {\\n            sb.append(id).append(\\\"\\\\n\\\");\\n        }\\n        System.out.print(sb);\\n    }\\n}",
        "company_name": "Intuit",
        "company_id": 56
    },
    {
        "id": 221,
        "title": "Transform the Array",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Transform the Array</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are given two integer arrays: array a of length n and array b of length n+1.</p>\n        \n        <p>You can perform the following operations any number of times in any order at any given time:</p>\n        <ul>\n            <li>choose any element of the array a and increase it by 1;</li>\n            <li>choose any element of the array a and decrease it by 1;</li>\n            <li>choose any element of the array a, copy it and append the copy to the end of the array a</li>\n        </ul>\n        \n        <p>Your task is to calculate the minimum number of aforementioned operations (possibly zero) required to transform the array a into the array b. It can be shown that under the constraints of the problem, it is always possible.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input</h3>\n        <p>The first line contains a single integer, n.</p>\n        <p>The second line contains n integers (a1, a2, a3...an).</p>\n        <p>The third line contains n+1 integers (b1, b2, b3...bn+1).</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output</h3>\n        <p>Print a single integer — the minimum number of operations (possibly zero) required to transform the array a into the array b.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2×10<sup>5</sup></li>\n            <li>1 ≤ a[i] ≤ 10<sup>9</sup></li>\n            <li>1 ≤ b[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\" id=\\\"example1\\\">\n            <h4>Example #1</h4>\n            <pre class=\\\"input\\\">Input:\n1\n2\n1 3</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n        </div>\n        \n        <div class=\\\"example\\\" id=\\\"example2\\\">\n            <h4>Example #2</h4>\n            <pre class=\\\"input\\\">Input:\n4\n4 2 1 2\n2 1 5 2 3</pre>\n            <pre class=\\\"output\\\">Output:\n8</pre>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1QTBFnTw3nWl5OZw4-wIK-yN1Fo-Gu2mCvjEDa9b_D6U/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Intuit",
        "company_id": 56
    },
    {
        "id": 375,
        "title": "Rearrange String",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Rearrange String Problem</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 20px;\n        }\n        .problem-container {\n            max-width: 800px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #ddd;\n            border-radius: 8px;\n            background: #f9f9f9;\n        }\n        h1, h3 {\n            color: #333;\n        }\n        pre {\n            background: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        ul {\n            margin: 0;\n            padding-left: 20px;\n        }\n        .example {\n            margin-top: 15px;\n        }\n        .example .input, .example .output {\n            margin-bottom: 5px;\n        }\n        .explanation {\n            font-style: italic;\n            margin-top: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\\\"problem-container\\\">\n        <h1>Rearrange String</h1>\n        <div class=\\\"problem-description\\\">\n            <p>\n                You have a string <strong>S</strong>. Your task is to rearrange some characters of the string (if needed) so that <code>S[i]</code> is not equal to <code>S[L - i - 1]</code> for each <code>0 &le; i &lt; (L - 1) / 2</code>, where <strong>L</strong> is the length of <strong>S</strong>. If multiple rearrangements exist, return the one that comes earliest alphabetically. If there is no answer, print <em>\\'impossible.\\'</em>\n            </p>\n        </div>\n\n        <div class=\\\"input-format\\\">\n            <h3>Input Format</h3>\n            <p>The input contains the string <strong>S</strong>.</p>\n        </div>\n\n        <div class=\\\"output-format\\\">\n            <h3>Output Format</h3>\n            <p>Print <em>\\'impossible\\'</em> if there is no answer. Otherwise, print a lexicographical first string that satisfies the given requirements.</p>\n        </div>\n\n        <div class=\\\"constraints\\\">\n            <h3>Constraints</h3>\n            <ul>\n                <li>1 &le; L &le; 10<sup>4</sup></li>\n            </ul>\n        </div>\n\n        <div class=\\\"examples\\\">\n            <h3>Examples</h3>\n\n            <div class=\\\"example\\\">\n                <h4>Example #1</h4>\n                <pre class=\\\"input\\\">Input:\nabca</pre>\n                <pre class=\\\"output\\\">Output:\naabc</pre>\n                <div class=\\\"explanation\\\">\n                    Explanation: We need to move the second \\'a\\' at the beginning of the string so that S[0] != S[3], S[1] != S[2], and \\'aabc\\' is the alphabetically smallest string among all valid answers.\n                </div>\n            </div>\n\n            <div class=\\\"example\\\">\n                <h4>Example #2</h4>\n                <pre class=\\\"input\\\">Input:\nabaa</pre>\n                <pre class=\\\"output\\\">Output:\nimpossible</pre>\n                <div class=\\\"explanation\\\">\n                    Explanation: There is no way to rearrange the characters of the given string in the required manner.\n                </div>\n            </div>\n        </div>\n\n        <div class=\\\"code-block\\\">\n            <h3>Code Template</h3>\n            <pre>\nclass Outcome {\n    /*\n     * Implement method/function with name \\'solve\\' below.\n     * The function accepts following as parameters.\n     * 1. S is of type String.\n     * return String.\n     */\n    public static String solve(String S) {\n        // Write your code here\n        \n        return \\\"\\\"; // return type \\\"String\\\".\n    }\n}</pre>\n        </div>\n    </div>\n</body>\n</html>\n",
        "google_doc_link": "https://docs.google.com/document/d/1UhKzmDuHGk8UwkRxqekCsdQLbmZipKrQEM9HOuUnSRI/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Intuit",
        "company_id": 56
    }
]