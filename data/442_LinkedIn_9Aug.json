[
    {
        "id": 1285,
        "title": "Hackerland Travel Cost",
        "problem_statement": "<h1>Hackerland Travel Cost</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The country of Hackerland is depicted as a graph with <code>g_nodes</code> cities, numbered from 1 to <code>g_nodes</code>. These cities are interconnected by <code>g_edges</code> bidirectional roads, where the <code>i</code>th road connects city <code>g_from[i]</code> to city <code>g_to[i]</code>, and the fuel required to travel this road is <code>g_weight[i]</code>. Vehicles in Hackerland have unlimited fuel capacity, and the cost of one unit of fuel in the <code>i</code>th city is given by <code>arr[i]</code>. Any amount of fuel can be purchased in any city.</p>\r\n<p>Given two cities A and B (1 &le; A, B &le; <code>g_nodes</code>), determine the minimum cost to travel from city A to city B. If travel between these cities is impossible, return -1.</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the function <code>getMinCost</code> in the editor with the following parameters:</p>\r\n<ul>\r\n    <li><code>int g_nodes</code>: the number of cities</li>\r\n    <li><code>int g_from_g_edges</code>: one endpoint of each road</li>\r\n    <li><code>int g_to_g_edges</code>: the other endpoint of each road</li>\r\n    <li><code>int g_weight_g_edges</code>: the weight of each road</li>\r\n    <li><code>int arr_g_nodes</code>: the cost of unit fuel in each city</li>\r\n    <li><code>int A</code>: the city to start from</li>\r\n    <li><code>int B</code>: the destination city</li>\r\n</ul>\r\n\r\n<h3>Returns</h3>\r\n<p><code>long int</code>: the minimum cost to go from city A to city B, or -1 if it is impossible</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<p>Nodes are labeled &lt;city number&gt;:&lt;fuel cost&gt;</p>\r\n<pre><code class='language-text'>Input:\r\ng_nodes = 5\r\ng_from = [4, 5, 4, 1, 3, 4, 4]\r\ng_to = [1, 3, 5, 5, 1, 2, 3]\r\ng_weight = [1, 1, 8, 1, 3, 9, 5]\r\narr[] size = g_nodes = 5\r\narr = [9, 11, 3, 2, 10]\r\nA = 3\r\nB = 2\r\n\r\nOutput: 27</code></pre>\r\n<p><strong>Explanation:</strong> One optimal path is 3 -> 5 -> 1 -> 4 -> 2. Buy 3 units of fuel at city 3 with a cost of 3 * 3 = 9 and 9 units at city 4 for 9 * 2 = 18. The total cost is 9 + 18 = 27.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\ng_nodes = 4, g_edges = 3\r\ng_from = [1, 2, 2], g_to = [2, 3, 4], g_weight = [3, 1, 7]\r\narr[] size = g_nodes = 4\r\narr = [3, 6, 2, 2]\r\nA = 1\r\nB = 4\r\n\r\nOutput: 28</code></pre>\r\n<p><strong>Explanation:</strong> One optimal path is 1 -> 2 -> 3 -> 2 -> 4. Buy 4 units in city 1 and 8 units in city 3 for a total cost of 4 * 3 + 8 * 2 = 28.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\ng_nodes = 5, g_edges = 4\r\ng_from = [2, 4, 2, 5], g_to = [1, 3, 5, 3], g_weight = [8, 4, 8, 2]\r\narr[] size = g_nodes = 5\r\narr = [9, 5, 9, 6, 3]\r\nA = 2\r\nB = 4\r\n\r\nOutput: -1</code></pre>\r\n<p><strong>Explanation:</strong> It is impossible to travel from city A (2) to city B (4).</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>2 &le; g_nodes &le; 200</code></li>\r\n    <li><code>1 &le; g_edges &le; g_nodes * (g_nodes - 1) / 2</code></li>\r\n    <li><code>1 &le; g_from[i], g_to[i] &le; g_nodes</code></li>\r\n    <li><code>1 &le; g_weight[i] &le; 10^6</code></li>\r\n    <li><code>1 &le; arr[i] &le; 10^6</code></li>\r\n    <li><code>1 &le; A, B &le; g_nodes</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LinkedIn_9Aug",
        "company_id": 442
    }
]