[
    {
        "id": 729,
        "title": "Help Your Master 2",
        "problem_statement": "<h1>Help Your Master 2</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>GOAT-master got arrested in a police chase. He is trying to escape the high-tech prison he is held captive in. He needs a pass-code for disabling all the cameras in order to escape. Pass-code is the solution of matrix problem given below. Help him finding the pass-code.</p>\r\n<p>You are given a matrix of order N×N. Each cell in a matrix has a value A[i][j] (0≤i,j&lt;N) which is either positive or equal to -1 (representing blocked cell).</p>\r\n<p>Cells which are not blocked have distinct values. You can traverse from a cell in any direction (up, down, left or right), if there is no blockage.</p>\r\n<p>For any cell A[i][j], sed-value S[i][j] is defined as sum of values of cells A[x][y] which are multiple of A[i][j], but not reachable from A[i][j]. For blocked cells, sed-value is -1.</p>\r\n<p>Pass-code P is sum of sed-values of all the cells, modulo 1000000007.</p>\r\n<p><strong>Input Format:</strong> First argument is a 2-D array of integers denoting the above matrix.</p>\r\n<p><strong>Output Format:</strong> Return the sum of sed-values of all the cells, modulo 1000000007.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= N &lt;= 1e3</li>\r\n    <li>1 &lt;= A[i][j] &lt;= 1e6</li>\r\n    <li>A[i][j] = -1 for blocked cells only</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: [[1, 3, -1, 5],\r\n        [-1, -1, -1, -1],\r\n        [2, 6, -1, 10],\r\n        [8, 7, -1, 11]]\r\nOutput: 68</code></pre>\r\n<p><strong>Explanation:</strong> Sed values of the following cells are :-></p>\r\n<pre><code class='language-text'>i j SED_value\r\n0 0 49\r\n0 1 6\r\n0 2 -1\r\n0 3 10\r\n1 0 -1\r\n1 1 -1\r\n1 2 -1\r\n1 3 -1\r\n2 0 10\r\n2 1 0\r\n2 2 -1\r\n2 3 0\r\n3 0 0\r\n3 1 0\r\n3 2 -1\r\n3 3 0\r\nTotal Sum = 68</code></pre>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: [[1]]\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> Sed value of 1st cell is 0.</p>\r\n\r\n<p>You only need to implement the given function. Do not read input; instead use the argument. Check out Sample Codes for more details.</p>\r\n<pre><code class='language-cpp'>int Solution::solve(vector&lt;vector&lt;int&gt;&gt; &amp;A) {\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "MediaNet_23july",
        "company_id": 231
    },
    {
        "id": 730,
        "title": "Powerful Permutation",
        "problem_statement": "<h1>Powerful Permutation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an integer array A of length N. You can create any permutation P of length N.</p>\r\n<p>Using this permutation you can create an array Z = [A<sub>P<sub>0</sub></sub>, A<sub>P<sub>1</sub></sub>, ..., A<sub>P<sub>N-1</sub></sub>].</p>\r\n<p>Now we will create a power array X of size 20 using this Z array.</p>\r\n<p>X[i] = maximum j such that &#8704; k &lt;= j (Z[k] &amp; 2<sup>20-i</sup> != 0) where 1 &lt;= i &lt;= 20</p>\r\n<p>A power array F will be greater than a power array G if there exists an index i such that F[i] &gt; G[i] given that &#8704; j &lt; i, F[j] = G[j].</p>\r\n<p>Find the largest possible power array for any permutation.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= N &lt;= 2 * 10<sup>5</sup></li>\r\n    <li>0 &lt;= A[i] &lt; 2<sup>20</sup></li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first argument is an integer array A.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return an integer array of size 20 which is the greatest power array that can be formed.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input1:\r\nA = [1, 2, 3, 4, 5]</code></pre>\r\n<pre><code class='language-text'>Output1:\r\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1]</code></pre>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input2:\r\nB = [4, 16, 16, 36]</code></pre>\r\n<pre><code class='language-text'>Output2:\r\n[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 0, 0]</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "MediaNet_23july",
        "company_id": 231
    },
    {
        "id": 747,
        "title": "Rainwater Harvesting",
        "problem_statement": "<h1>Rainwater Harvesting</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given an N x M matrix of positive integers representing the height of each unit cell in a 2D elevation map.</p>\r\n<p>Return the volume of water it is able to trap after raining.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first and the only argument given is the integer matrix A.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return the volume of water that is trapped after raining.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= N, M &lt;= 110</code></li>\r\n    <li><code>1 &lt;= A[i] &lt;= 19999</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [ [1, 4, 3, 1, 3, 2],\r\n               [3, 2, 1, 3, 2, 4],\r\n               [2, 3, 3, 2, 3, 1] ]\r\nOutput: 4</code></pre>\r\n\r\n<h2>Follow-up</h2>\r\n<p>You only need to implement the given function. Do not read input, instead use the arguments to the function. Do not print the output, instead return the answer from the function. Check out Sample Codes for more details.</p>\r\n<pre><code class='language-javascript'>int Solution::solve(vector&lt;vector&lt;int&gt; &gt; &amp;A) {\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "MediaNet_23july",
        "company_id": 231
    }
]