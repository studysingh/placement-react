[
    {
        "id": 122,
        "title": "Equalizing Box Piles",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h1>Equalizing Box Piles</h1>\n    </div>\n\n<div class=\\\"problem-description\\\">\n        <p>Alex has n piles of boxes with varying heights. In each step, Alex can remove any number of boxes from the tallest pile to reduce its height to match the next tallest pile. Determine the minimum number of steps required to make all piles equal in height.</p>\n    </div>\n\n<div class=\\\"input-format\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>pilesOfBoxes</code> which has the following parameter:</p>\n        <ul>\n            <li><code>vector&lt;int&gt; boxesInPiles</code>: each boxesInPiles[i] represents the initial height of one pile</li>\n        </ul>\n    </div>\n\n<div class=\\\"output-format\\\">\n        <h3>Return</h3>\n        <p>long: the minimum number of steps required</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2 × 10⁵</li>\n            <li>1 ≤ boxesInPiles[i] ≤ 2 × 10⁶</li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example 1</h3>\n        <div class=\\\"example\\\">\n            <h4>Sample Input</h4>\n            <pre class=\\\"input\\\">n = 3\nboxesInPiles = [5, 2, 1]</pre>\n\n<h4>Sample Output</h4>\n            <pre class=\\\"output\\\">3</pre>\n\n<div class=\\\"explanation\\\">\n                <h4>Explanation</h4>\n                <p>In the first step, remove 3 boxes from boxesInPiles[0], and the new array is boxesInPiles = [2, 2, 1]. Now reduce the two taller piles by 1 box each to match the height of the shortest pile. This takes 2 steps because each step is performed on only one pile. The final number of steps required is 3.</p>\n            </div>\n        </div>\n\n<h3>Example 2</h3>\n        <div class=\\\"example\\\">\n            <h4>Sample Input</h4>\n            <pre class=\\\"input\\\">n = 2\nboxesInPiles = [886, 777]</pre>\n\n<h4>Sample Output</h4>\n            <pre class=\\\"output\\\">1</pre>\n\n<div class=\\\"explanation\\\">\n                <p>In 1 step, 109 boxes can be removed from the first pile to make both piles have a height of 886 - 109 = 777.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1T9cIBGHiw4ITQfYk2fymAbnNnmiPEa0QzqqbQqxz5DA/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Factset",
        "company_id": 29
    },
    {
        "id": 123,
        "title": "Maximum Element Index After Rotations",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Maximum Element Index After Rotations</h2>\n\n<div class=\\\"problem-description\\\">\n        <p>Array <code>a</code> consists of distinct, positive integers and serves as the work array. Array <code>rotate</code> contains a list of integers that define operations to perform on the work array. For each element of the <code>rotate</code> array, that number of left circular rotations is applied to the work array. In one left circular rotation, the element at index 0 is moved to the highest index of the array, and all the other elements shift left (down) by 1 index.</p>\n\n<p>Given an array of distinct positive integers, perform each rotation in the second array and determine the index of the highest value element within the array.</p>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getMaxElementIndexes</code> in the editor.</p>\n\n<p><code>getMaxElementIndexes</code> has the following parameter(s):</p>\n        <ul>\n            <li><code>int a[n]</code>: an array of n integers to rotate</li>\n            <li><code>int rotate[m]</code>: the rotations to perform</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p><code>int[m]</code>: each element <code>i</code> is the index of the maximal element in <code>a</code> after <code>rotate[i]</code> rotations</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n, m ≤ 10<sup>5</sup></li>\n            <li>1 ≤ a[j] ≤ 10<sup>9</sup>, where 0 ≤ j < n</li>\n            <li>0 ≤ rotate[i] ≤ 10<sup>9</sup>, where 0 ≤ i < m</li>\n            <li><code>rotate[]</code> consists of positive integers</li>\n            <li><code>a[]</code> consists of distinct positive integers</li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <p>Given:</p>\n        <pre>a = [1, 2, 3]\nrotate = [1, 2, 3, 4]</pre>\n\n<p>The resulting arrays are:</p>\n        <ul>\n            <li><code>a = [1,2,3], rotate[0] = 1 → a = [2, 3, 1]</code> and the maximum element is at index 1. Set <code>indices[0] = 1</code>.</li>\n            <li><code>a = [1,2,3], rotate[1] = 2 → a = [3, 1, 2]</code> and <code>indices[1] = 0</code>.</li>\n            <li><code>a = [1,2,3], rotate[2] = 3 → a = [1, 2, 3]</code> and <code>indices[2] = 2</code>.</li>\n            <li><code>a = [1,2,3], rotate[3] = 4 → a = [2, 3, 1]</code> and <code>indices[3] = 1</code>.</li>\n        </ul>\n\n<p>Return the new array made of the indices of the maximal elements, <code>indices = [1, 0, 2, 1]</code>.</p>\n\n<div class=\\\"note\\\">\n            <strong>Note:</strong> Each rotation is performed on the original array formation.\n        </div>\n    </div>\n\n<div class=\\\"sample-case\\\">\n        <h3>Sample Case 0</h3>\n        <h4>Sample Input 0</h4>\n        <pre>\n4\n1 2 4 3\n2\n0 2</pre>\n\n<h4>Sample Output 0</h4>\n        <pre>2\n0</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1FuqlcYNHUTMfJKv6En_qPd1IpeXUdCtEGRMYsLtzQRs/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Factset",
        "company_id": 29
    },
    {
        "id": 124,
        "title": "Lexicographically Minimal String Encryption",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2></h2>\n\n<div class=\\\"problem-description\\\">\n        <p>Implement an encryption algorithm to encrypt the string <code>originalString</code> per the following:</p>\n        <ul>\n            <li>Initialize two empty strings: <code>temporaryString</code> and <code>encryptedString</code>.</li>\n            <li>At each step, perform one of the following two operations. Choose the order of operations to produce the lexicographically minimal possible <code>encryptedString</code>:\n                <ol>\n                    <li>Take the first letter from <code>originalString</code> and append it to the end of <code>temporaryString</code>.</li>\n                    <li>Take the last letter from <code>temporaryString</code> and append it to the end of <code>encryptedString</code>.</li>\n                </ol>\n            </li>\n            <li>Given a string <code>originalString</code>, return the <code>encryptedString</code>.</li>\n        </ul>\n\n<div class=\\\"note\\\">\n            <h4>Note:</h4>\n            <p>A string <em>a</em> is lexicographically smaller than string <em>b</em> (of the same length) if, in the first position where <em>a</em> and <em>b</em> differ, string <em>a</em> has a letter that appears earlier in the alphabet than the corresponding letter in <em>b</em>.</p>\n        </div>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ |<code>originalString</code>| ≤ 2 × 10⁵</li>\n            <li><code>originalString</code> consists of lowercase English letters [a-z].</li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Examples</h3>\n\n<div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">originalString = \\\"dby\\\"</pre>\n            <pre class=\\\"output\\\">\\\"bdy\\\"</pre>\n            <div class=\\\"explanation\\\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Operation Used</th>\n                            <th>originalString</th>\n                            <th>temporaryString</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>1</td>\n                            <td>\\\"by\\\"</td>\n                            <td>\\\"d\\\"</td>\n                        </tr>\n                        <tr>\n                            <td>1</td>\n                            <td>\\\"y\\\"</td>\n                            <td>\\\"db\\\"</td>\n                        </tr>\n                        <tr>\n                            <td>2</td>\n                            <td>\\\"y\\\"</td>\n                            <td>\\\"d\\\"</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n<div class=\\\"example\\\">\n            <h4>Example 2:</h4>\n            <pre class=\\\"input\\\">originalString = \\\"zyxw\\\"</pre>\n            <pre class=\\\"output\\\">wxyz</pre>\n            <div class=\\\"explanation\\\">\n                <p>Operations are performed to achieve the lexicographically minimal result.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getEncryptedString</code> in the editor below.</p>\n\n<h4>Function Parameters</h4>\n        <p><code>string originalString</code>: the string to encrypt</p>\n\n<h4>Returns</h4>\n        <p><code>string</code>: the encrypted string</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/19XQDNyXLjN7ErZm_o-MtOnNAPIsRpXU2b9d9eKvptdU/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Factset",
        "company_id": 29
    }
]