[
    {
        "id": 206,
        "title": "REST API: Capital City",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">REST API: Capital City</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Given a country name, query the REST API at <code>https://jsonmock.hackerrank.com/api/countries?name=country</code> and return the capital city\\'s name.</p>\n        \n        <p>The response is a JSON object with 5 fields. The essential field is <code>data</code>:</p>\n        <ul>\n            <li><strong>data</strong>: Either an empty array or an array with a single object that contains the country\\'s record.</li>\n            <li>In the <code>data</code> array, the country has the following schema:\n                <ul>\n                    <li><code>name</code>: The name of the country (String)</li>\n                    <li><code>capital</code>: The name of the capital city (String)</li>\n                    <li>A number of fields that are not of interest.</li>\n                </ul>\n            </li>\n        </ul>\n        \n        <p><em>Note: <code>page</code>, <code>per_page</code>, <code>total</code>, <code>total_pages</code> etc., are not required for this task.</em></p>\n        \n        <p>If the country is found, the <code>data</code> array contains exactly 1 element. If not, it is empty, and the function should return \\'-1\\'.</p>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the <code>getCapitalCity</code> function in the editor.</p>\n        <p><code>getCapitalCity</code> has the following parameters:</p>\n        <ul>\n            <li><code>string country</code>: the country to query</li>\n        </ul>\n    </div>\n\n    <div class=\\\"returns\\\">\n        <h3>Returns</h3>\n        <ul>\n            <li><code>string</code>: the capital city or \\'-1\\'</li>\n        </ul>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>The returned JSON object contains either 0 or 1 record in <code>data</code>.</li>\n            <li>The country name may contain uppercase and lowercase English letters and &lt;space&gt; (ascii 32)</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Sample Test Cases</h3>\n        \n        <div class=\\\"example\\\">\n            <h4>Sample Case 0</h4>\n            <pre class=\\\"input\\\">Afghanistan</pre>\n            <pre class=\\\"output\\\">Kabul</pre>\n            <div class=\\\"explanation\\\">\n                <p>A call is made to https://jsonmock.hackerrank.com/api/countries?name=Afghanistan.</p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <h4>Sample Case 1</h4>\n            <pre class=\\\"input\\\">Oceania</pre>\n            <pre class=\\\"output\\\">-1</pre>\n            <div class=\\\"explanation\\\">\n                <p>An API call is made to https://jsonmock.hackerrank.com/api/countries?name=Oceania. The data field is an empty array.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"note\\\">\n        <h3>Note</h3>\n        <p>Please review the header in the code stub to see available libraries for API requests in the selected language. Required libraries can be imported in order to solve the question. Check our full list of supported libraries at <a href=\\\"https://www.hackerrank.com/environment\\\">https://www.hackerrank.com/environment</a>.</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1xQuvvrR2rl9AOocbt_NCcjeFbUaHal73fZ0GsHqYooU/edit?usp=sharing",
        "solution_code": "",
        "company_name": " Swiggy",
        "company_id": 50
    },
    {
        "id": 207,
        "title": "List Customer and Product Without Sale",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h2>List Customer and Product Without Sale</h2>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>Using the UNION operator, in one list return all customers who do not have an invoice and all products that were not sold.</p>\n        \n        <div class=\\\"return-format\\\">\n            <h3>For each customer without an invoice, return:</h3>\n            <ul>\n                <li>the string \\\"customer\\\"</li>\n                <li>the customer id</li>\n                <li>the customer_name</li>\n            </ul>\n\n            <h3>For each product without an invoice, return:</h3>\n            <ul>\n                <li>the string \\\"product\\\"</li>\n                <li>the product id</li>\n                <li>the product_name</li>\n            </ul>\n        </div>\n\n        <p class=\\\"note\\\">The columns must be in the order shown, but row order does not matter.</p>\n    </div>\n\n    <div class=\\\"schema-section\\\">\n        <h3>Schema</h3>\n        \n        <div class=\\\"table-definition\\\">\n            <h4>Table: customer</h4>\n            <table>\n                <thead>\n                    <tr>\n                        <th>column name</th>\n                        <th>column type</th>\n                        <th>key / NULL</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>id</td>\n                        <td>int</td>\n                        <td>PK</td>\n                    </tr>\n                    <tr>\n                        <td>customer_name</td>\n                        <td>varchar(255)</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td>city_id</td>\n                        <td>int</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td>customer_address</td>\n                        <td>varchar(255)</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td>contact_person</td>\n                        <td>varchar(255)</td>\n                        <td>N</td>\n                    </tr>\n                    <tr>\n                        <td>email</td>\n                        <td>varchar(128)</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <td>phone</td>\n                        <td>varchar(128)</td>\n                        <td></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <!-- Similar table definitions for product, invoice, and invoice_item tables -->\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example Output</h3>\n        <pre class=\\\"output\\\">\ncustomer 2 Cosmetics Store\nproduct 9 Dewy Skin Mist - TATCHA</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1C1VAMdllHPT-WjmzDD8u2bvADiSUk9tT6RG8VaV5BD4/edit?usp=sharing",
        "solution_code": "",
        "company_name": " Swiggy",
        "company_id": 50
    },
    {
        "id": 214,
        "title": "Diverse Deputations",
        "problem_statement": "<div class=\\\\\\\"problem-container\\\\\\\">\\n    <h2 class=\\\\\\\"problem-title\\\\\\\">Diverse Deputations</h2>\\n    \\n    <div class=\\\\\\\"problem-description\\\\\\\">\\n        <p>A professional society is using a program to determine possible diverse deputations of 3 members for an upcoming conference. There are m men and w women who are eligible. A deputation is diverse only if it contains at least one man and at least one woman. Two deputations are considered distinct if one has a member that the other does not. For a given number of men and women, determine the number of distinct ways to select a diverse deputation of 3 people.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"example-description\\\\\\\">\\n        <h3>Example</h3>\\n        <p>m = 1<br>\\n        w = 2</p>\\n        <p>There is m = 1 man available and there are w = 2 women. Label them m1, w1, w2 for demonstration. There are 2 possible ways to form a diverse deputation (m1, w1, w2) and (m1, w2, w1). The only other possible permutation is (w1, w2, w2), which does not include a man, so it is invalid.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"function-description\\\\\\\">\\n        <h3>Function Description</h3>\\n        <p>Complete the function <code>diverseDeputation</code> in the editor below.</p>\\n        \\n        <p>diverseDeputation has the following parameters:</p>\\n        <ul>\\n            <li><code>int m</code>: the number of men available</li>\\n            <li><code>int w</code>: the number of women available</li>\\n        </ul>\\n        \\n        <p><strong>Returns</strong></p>\\n        <ul>\\n            <li><code>int</code>: the number of ways to select a diverse deputation from m men and w women</li>\\n        </ul>\\n    </div>\\n    \\n    <div class=\\\\\\\"constraints\\\\\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>0 ≤ m, w ≤ 1000</li>\\n        </ul>\\n    </div>\\n    \\n    <div class=\\\\\\\"examples\\\\\\\">\\n        <h3>Sample Cases</h3>\\n        \\n        <div class=\\\\\\\"example\\\\\\\" id=\\\\\\\"sample-case-0\\\\\\\">\\n            <h4>Sample Case 0</h4>\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\nm = 3\\nw = 0</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n0</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <p>The number of women is 0 so there is no way to select a diverse deputation.</p>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\\\\\"example\\\\\\\" id=\\\\\\\"sample-case-1\\\\\\\">\\n            <h4>Sample Case 1</h4>\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\nm = 2\\nw = 2</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n4</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <p>In this case, m = 2 and w = 2. This yields 4 ways to select a diverse deputation (m1, w1, w2), (m1, w2, w1), (m2, w1, w2), (m2, w2, w1).</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1P8C9fqvoIo15lCa3WsbmJPp3-tzWt4gNWGYvByrXMOg/edit?usp=sharing",
        "solution_code": "",
        "company_name": " Swiggy",
        "company_id": 50
    },
    {
        "id": 215,
        "title": "Extraordinary Substrings",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1 class=\\\"problem-title\\\">Extraordinary Substrings</h1>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Each character of the lowercase English alphabet has been mapped to digits as shown in the figure:</p>\n        \n        <div class=\\\"keypad-grid\\\">\n            <table class=\\\"mapping-table\\\">\n                <tr>\n                    <td>1 (ab)</td>\n                    <td>2 (cde)</td>\n                    <td>3 (fgh)</td>\n                </tr>\n                <tr>\n                    <td>4 (ijk)</td>\n                    <td>5 (lmn)</td>\n                    <td>6 (opq)</td>\n                </tr>\n                <tr>\n                    <td>7 (rst)</td>\n                    <td>8 (uvw)</td>\n                    <td>9 (xyz)</td>\n                </tr>\n            </table>\n        </div>\n\n        <p>An <em>extraordinary</em> substring is one whose sum of the mapped values of each letter is divisible by its length. Given string <code>input_str</code>, count its total number of non-empty extraordinary substrings.</p>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>countSubstrings</code> in the editor.</p>\n        <p><code>countSubstrings</code> has the following parameter(s):</p>\n        <ul>\n            <li><code>string input_str</code>: a string of length n</li>\n        </ul>\n    </div>\n\n    <div class=\\\"return-value\\\">\n        <h3>Returns</h3>\n        <p><code>int</code>: the number of non-empty extraordinary substrings</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n ≤ 2000</li>\n            <li>All characters of input_str are lowercase English letters.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Sample Case 0</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input: bdh</pre>\n            <pre class=\\\"output\\\">Output: 4</pre>\n            <div class=\\\"explanation\\\">\n                <p>The extraordinary substrings are \\'b\\', \\'d\\', \\'h\\' and \\'bdh\\'.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"sample-table\\\">\n        <h3>Example Calculation Table</h3>\n        <table>\n            <tr>\n                <th>String</th>\n                <th>Mapped</th>\n                <th>Sum</th>\n                <th>Length</th>\n                <th>Is divisible</th>\n            </tr>\n            <tr>\n                <td>b</td>\n                <td>1</td>\n                <td>1</td>\n                <td>1</td>\n                <td>Yes</td>\n            </tr>\n            <tr>\n                <td>d</td>\n                <td>2</td>\n                <td>2</td>\n                <td>1</td>\n                <td>Yes</td>\n            </tr>\n            <tr>\n                <td>h</td>\n                <td>3</td>\n                <td>3</td>\n                <td>1</td>\n                <td>Yes</td>\n            </tr>\n            <tr>\n                <td>bdh</td>\n                <td>1,2,3</td>\n                <td>6</td>\n                <td>3</td>\n                <td>Yes</td>\n            </tr>\n        </table>\n    </div>\n</div>\n\n<style>\n.mapping-table {\n    border-collapse: collapse;\n    margin: 1em 0;\n}\n\n.mapping-table td {\n    border: 1px solid #ccc;\n    padding: 8px;\n    text-align: center;\n}\n\n.sample-table table {\n    border-collapse: collapse;\n    width: 100%;\n    margin: 1em 0;\n}\n\n.sample-table th, .sample-table td {\n    border: 1px solid #ccc;\n    padding: 8px;\n    text-align: left;\n}\n\n.sample-table th {\n    background-color: #f5f5f5;\n}\n\n.example {\n    background-color: #f8f9fa;\n    padding: 1em;\n    margin: 1em 0;\n    border-radius: 4px;\n}\n\npre {\n    background-color: #f1f1f1;\n    padding: 10px;\n    border-radius: 4px;\n}\n\ncode {\n    background-color: #f1f1f1;\n    padding: 2px 4px;\n    border-radius: 3px;\n}\n</style>",
        "google_doc_link": "https://docs.google.com/document/d/1A-mo5NGL48VK8LVFlknHiLChxeZqTN9266_n7QmGWk0/edit?usp=sharing",
        "solution_code": "#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint countSubstrings(string input_str) {\\n    int mapping[26] = {1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9};\\n    int n = input_str.length();\\n    long long count = 0;\\n    for(int i=0;i<n;i++) {\\n        long long sum = 0;\\n        for(int j=i;j<n;j++) {\\n            sum += mapping[input_str[j]-\\'a\\'];\\n            int len = j - i + 1;\\n            if(sum % len == 0) count++;\\n        }\\n    }\\n    return count;\\n}\\n\\nint main(){\\n    ios::sync_with_stdio(false);\\n    cin.tie(NULL);\\n    string input_str;\\n    cin >> input_str;\\n    cout << countSubstrings(input_str);\\n}",
        "company_name": " Swiggy",
        "company_id": 50
    },
    {
        "id": 459,
        "title": "Merge Arrays",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Merge Arrays</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>A number of bids are received for a project. Determine the number of distinct pairs of project costs where their absolute difference is some target value. Two pairs are distinct if they differ in at least one value.</p>\n        \n        <h3>Function Description</h3>\n        <p>Complete the function <code>mergeArrays</code> in the editor below.</p>\n        <p>The function is expected to return an <code>INTEGER_ARRAY</code>.</p>\n        <p>The function accepts the following parameters:</p>\n        <ul>\n            <li><code>vector&lt;int&gt; a</code>: a sorted array of integers</li>\n            <li><code>vector&lt;int&gt; b</code>: a sorted array of integers</li>\n        </ul>\n        <p>Returns:</p>\n        <p><code>vector&lt;int&gt;</code>: an array of all the elements from both input arrays in non-decreasing order.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line consists of an integer <code>n</code>, denoting the number of line segments.</p>\n        <p>The next <code>n</code> lines consist of four space-separated integers <code>(x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub>)</code> denoting the <code>x</code>, <code>y</code> coordinates of starting and ending points of the line segments.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return a single integer representing the maximum closed area.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>3 ≤ n ≤ 10<sup>5</sup></code></li>\n            <li><code>0 ≤ projectCosts[i] ≤ 2 × 10<sup>9</sup></code></li>\n            <li><code>1 ≤ target ≤ 10<sup>9</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4\n1 3 5\n2 4 6\n3 5 7\n4 6 8</pre>\n            <pre class=\\\"output\\\">Output:\n[Sample output]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation of the output if necessary.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1PtCinZS_US_FauQAs1T0_Mvbh_ofOLv-kkfABJCcMus/edit?usp=sharing",
        "solution_code": "",
        "company_name": " Swiggy",
        "company_id": 50
    },
    {
        "id": 460,
        "title": "List Customer and Product Without Sale",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>List Customer and Product Without Sale</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Using the <code>UNION</code> operator, in one list return all customers who do not have an invoice and all products that weren\\'t sold.</p>\n        <p>For each customer without an invoice, return:</p>\n        <ul>\n            <li>The string <code>customer</code></li>\n            <li>The <code>customer_id</code></li>\n            <li>The <code>customer_name</code></li>\n        </ul>\n        <p>For each product without an invoice, return:</p>\n        <ul>\n            <li>The string <code>product</code></li>\n            <li>The <code>product_id</code></li>\n            <li>The <code>product_name</code></li>\n        </ul>\n        <p>The columns must be in the order shown, but row order does not matter.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>Table definitions and a data sample are given below.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return a list of customers and products without sales.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>3 < N < 10</code></li>\n            <li><code>0 ≤ x<sub>1</sub>, y<sub>1</sub>, x<sub>2</sub>, y<sub>2</sub> ≤ 10</code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4\n1 2 3\n2 3 4\n3 4 5\n4 5 6</pre>\n            <pre class=\\\"output\\\">Output:\n[Sample output]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation of the output if necessary.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1kyy8untzv6skZkoF13u8TSxBm3q1RZVpMr8wVxt5KXg/edit?usp=sharing",
        "solution_code": "",
        "company_name": " Swiggy",
        "company_id": 50
    }
]