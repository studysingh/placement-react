[
    {
        "id": 572,
        "title": "Count subsequences",
        "problem_statement": "<h1>Count subsequences</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Determine the number of non-empty subsequences of array A such that they do not exist three consecutive odd or three consecutive even integers in the subsequence. As the answer can be large, print it modulo 10<sup>9</sup> + 7.</p>\r\n<p><strong>Notes:</strong></p>\r\n<ul>\r\n    <li>Assume 1-based indexing.</li>\r\n    <li>A subsequence of array A can be obtained by deleting some array elements while keeping the order of other elements intact.</li>\r\n</ul>\r\n<p><strong>Function Description:</strong></p>\r\n<p>Complete the <code>solve</code> function provided in the editor. This function takes the following 2 parameters and returns the required answer:</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the number of elements in array A</li>\r\n    <li><code>A</code>: Represents the elements of array A</li>\r\n</ul>\r\n<p><strong>Input format:</strong></p>\r\n<p>The first line contains a single integer <code>T</code>, which denotes the number of test cases. <code>T</code> also specifies the number of times you have to run the solve function on a different input set.</p>\r\n<p>For each test case:</p>\r\n<ul>\r\n    <li>The first line contains an integer <code>N</code>.</li>\r\n    <li>The second line contains <code>N</code> space-separated integers denoting the array <code>A</code>.</li>\r\n</ul>\r\n<p><strong>Output format:</strong></p>\r\n<p>For each test case in a new line, print the number of non-empty subsequences which satisfy the given conditions. As the answer can be large, output it modulo 10<sup>9</sup> + 7.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n3\r\n2 2 2\r\nOutput:\r\n6</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Given: <code>N=3</code>, <code>A=[2, 2, 2]</code></p>\r\n<p>Approach: Following subsequences satisfy the conditions: (2), (2), (2), (2,2), (2,2), (2,2). Hence, required answer is 6.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n4\r\n1 2 3 5\r\nOutput:\r\n14</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Given: <code>N=4</code>, <code>A=[1, 2, 3, 5]</code></p>\r\n<p>Approach: Following subsequences satisfy the conditions: (1), (2), (3), (5), (1, 2), (1,3), (1,5), (2,3), (2,5), (3,5), (1,2,3), (1,2,5), (2,3,5), (1,2,3,5).</p>\r\n<p>Subsequence (1,3,5) does not satisfy the conditions as it has three consecutive odd integers.</p>\r\n<p>Thus, required answer is 14.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; T &le; 10</code></li>\r\n    <li><code>1 &le; N &le; 10<sup>5</sup></code></li>\r\n    <li><code>1 &le; A<sub>i</sub> &le; 10<sup>9</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_5july",
        "company_id": 193
    },
    {
        "id": 573,
        "title": "Palindrome special",
        "problem_statement": "<h1>Palindrome special</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A number X is said to be palindrome special, if it satisfies the given conditions:</p>\r\n<ul>\r\n    <li>Every digit <code>r</code> present in X, occurs <code>r</code> number of times in X.</li>\r\n    <li>Digits of X forms a palindrome i.e. it reads the same from right to left and left to right.</li>\r\n</ul>\r\n<p>You are given an integer N.</p>\r\n<p><strong>Task:</strong> Determine the smallest palindrome special number greater than N.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the solve function provided in the editor. This function takes the following parameters and returns the required answer:</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the value of N</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p><strong>Note:</strong> This is the input format that you must use to provide custom input (available above the Compile and Test button).</p>\r\n<ul>\r\n    <li>The first line contains a single integer <code>T</code>, which denotes the number of test cases. <code>T</code> also specifies the number of times you have to run the solve function on a different set of inputs.</li>\r\n    <li>For each test case:\r\n        <ul>\r\n            <li>The first line contains an integer <code>N</code>.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>For each test case in a new line, print the smallest palindrome special number greater than N.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n10\r\n23\r\nOutput:\r\n22\r\n212</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The first line contains the number of test cases, T = 2</p>\r\n<p><strong>For the first test case</strong></p>\r\n<p><strong>Given:</strong> N = 10</p>\r\n<p><strong>Approach:</strong> 22 is the smallest palindrome special number greater than N.</p>\r\n<p><strong>For the second test case</strong></p>\r\n<p><strong>Given:</strong> N = 23</p>\r\n<p><strong>Approach:</strong> 212 is the smallest palindrome special number greater than N.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; T &le; 10<sup>5</sup></code></li>\r\n    <li><code>1 &le; N &le; 10<sup>17</sup></code></li>\r\n</ul>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code will be tested against hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 10 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_5july",
        "company_id": 193
    },
    {
        "id": 651,
        "title": "Palindrom special",
        "problem_statement": "<h1>Palindrom special</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A number X is said to be palindrome special, if it satisfies the given conditions:</p>\r\n<ul>\r\n    <li>Every digit `d` present in X, occurs `d` number of times in X.</li>\r\n    <li>Digits of X forms a palindrome i.e. it reads the same from right to left and left to right.</li>\r\n</ul>\r\n<p>You are given an integer N.</p>\r\n<p><strong>Task:</strong> Determine the smallest palindrome special number greater than N.</p>\r\n<p>Complete the solve function provided in the editor. This function takes the following 1 parameters (an integer N) and returns the required answer.</p>\r\n\r\n<h3>Input Format</h3>\r\n<p>The first line contains a single integer T, which denotes the number of test cases. T also specifies the number of times you have to run the solve function on a different set of inputs.</p>\r\n<p>For each test case:</p>\r\n<ul>\r\n    <li>The first line contains an integer N.</li>\r\n</ul>\r\n\r\n<h3>Output Format</h3>\r\n<p>For each test case in a new line, print the smallest palindrome special number greater than N.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: N = 2\r\nOutput: 22</code></pre>\r\n<p><strong>Explanation:</strong> 22 is the smallest palindrome special number greater than 2.\r\nFor 22:\r\n1. Digit '2' occurs 2 times. (Satisfies condition 1)\r\n2. '22' is a palindrome. (Satisfies condition 2)</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: N = 10\r\nOutput: 22</code></pre>\r\n<p><strong>Explanation:</strong> 22 is the smallest palindrome special number greater than 10.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: N = 23\r\nOutput: 212</code></pre>\r\n<p><strong>Explanation:</strong> 212 is the smallest palindrome special number greater than 23.\r\nFor 212:\r\n1. Digit '2' occurs 2 times, digit '1' occurs 1 time. (Satisfies condition 1)\r\n2. '212' is a palindrome. (Satisfies condition 2)</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= T <= 10^5</code></li>\r\n    <li><code>1 <= N <= 10^17</code></li>\r\n</ul>\r\n\r\n<h2>Notes</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h3>Limits</h3>\r\n<ul>\r\n    <li>Time Limit: 10 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h3>Scoring</h3>\r\n<p>Score is assigned if any testcase passes.</p>\r\n\r\n<h3>Allowed Languages</h3>\r\n<p>This question has code snippets for C, CPP, Java, and Python, among others.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_5july",
        "company_id": 193
    },
    {
        "id": 652,
        "title": "Array function",
        "problem_statement": "<h1>Array function</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an array A of length N.</p>\r\n<p>A function F is defined as follows:</p>\r\n<ul>\r\n    <li>F(A) = A[1] - A[2] + A[3] - A[4] + ... + (-1)<sup>(N+1)</sup> * A[N]</li>\r\n</ul>\r\n<p>You also have an array B having M pairs where an element is in the form [p, q] denoting that the elements of A at indices p and q are swappable. And you can swap these indices any number of times and in any order.</p>\r\n\r\n<h2>Task</h2>\r\n<p>Determine the maximum value of F(A) if you perform the swaps optimally.</p>\r\n<p>Note: 1-based indexing is used.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<p><strong>Input:</strong></p>\r\n<pre><code class='language-text'>N = 4\r\nA = [5, 6, 7, 8]\r\nM = 2\r\nB = [[1, 2], [3, 4]]</code></pre>\r\n<p><strong>Output:</strong></p>\r\n<pre><code class='language-text'>2</code></pre>\r\n<p><strong>Explanation:</strong> The optimal approach will be to swap indices [1, 2] and [3, 4]. The array after that will be A = [6, 5, 8, 7]. So answer is F(A) = 6 - 5 + 8 - 7 = 2.</p>\r\n\r\n<h2>Function description</h2>\r\n<p>Complete the solve function provided in the editor. The function takes the following 4 parameters and returns the final value:</p>\r\n<ul>\r\n    <li><strong>N:</strong> Represents an integer denoting the number of elements in A</li>\r\n    <li><strong>A:</strong> Represents the array A</li>\r\n    <li><strong>M:</strong> Represents an integer denoting the number of pairs</li>\r\n    <li><strong>B:</strong> Represents an array B of dimension M×2</li>\r\n</ul>\r\n\r\n<h2>Input format</h2>\r\n<p><strong>Note:</strong> This is the input format that you must use to provide custom input (available above the Compile and Test button).</p>\r\n<ul>\r\n    <li>The first line contains an integer T denoting the number of test cases. T also denotes the number of times you have to run the solve() function on a different set of inputs.</li>\r\n    <li>For each test case:\r\n        <ul>\r\n            <li>The first line contains one integer N.</li>\r\n            <li>The second line contains N space-separated integers denoting the array A.</li>\r\n            <li>The third line contains one integer M.</li>\r\n            <li>The next M lines each have two space-separated integers where the integers on i<sup>th</sup> line denote the value for i<sup>th</sup> element of B.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>For each test case, print the answer in a new line representing the maximum value of F(A).</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= T &lt;= 10<sup>4</sup></code></li>\r\n    <li><code>1 &lt;= N, M &lt;= 10<sup>5</sup></code></li>\r\n    <li><code>1 &lt;= A[i] &lt;= 10<sup>9</sup></code></li>\r\n    <li><code>1 &lt;= B[i][0], B[i][1] &lt;= N</code></li>\r\n    <li>The sum of N over all test cases does not exceed 10<sup>5</sup>.</li>\r\n    <li>The sum of M over all test cases does not exceed 10<sup>5</sup>.</li>\r\n</ul>\r\n\r\n<h3>Sample input</h3>\r\n<pre><code class='language-text'>1\r\n5\r\n2 3 4 1 2\r\n3\r\n1 2\r\n1 4\r\n3 5</code></pre>\r\n\r\n<h3>Sample output</h3>\r\n<pre><code class='language-text'>6</code></pre>\r\n\r\n<h2>Explanation</h2>\r\n<p>The first line contains the number of test cases, T = 1.</p>\r\n<p>For the first test case</p>\r\n<p><strong>Given:</strong></p>\r\n<ul>\r\n    <li>N = 5</li>\r\n    <li>A = [2, 3, 4, 1, 2]</li>\r\n    <li>M = 3</li>\r\n    <li>B = [[1, 2], [1, 4], [3, 5]]</li>\r\n</ul>\r\n<p><strong>Approach:</strong></p>\r\n<ul>\r\n    <li>The optimal approach will be to swap at indices [1, 2]</li>\r\n    <li>The array after that will be A = [3, 2, 4, 1, 2]</li>\r\n    <li>So answer is F(A) = 3 - 2 + 4 - 1 + 2 = 6</li>\r\n</ul>\r\n\r\n<p><strong>Note:</strong> Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n<p>Time Limit: 10 sec(s) for each input file</p>\r\n<p>Memory Limit: 256 MB</p>\r\n<p>Source Limit: 1024 KB</p>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed languages</h2>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, Java 17, Javascript(Node.js), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, Python 3.8, R(script), Racket, Ruby, Rust, Scala, Swift, Typescript, Visual Basic</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_5july",
        "company_id": 193
    },
    {
        "id": 653,
        "title": "Sort the array",
        "problem_statement": "```html\r\n<h1>Sort the array</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an integer array A of size N containing only 1, 2, and 3.</p>\r\n<p>You are also given an integer Q and a 2D array of queries.</p>\r\n<p>You have to answer Q queries:</p>\r\n<ul>\r\n    <li>For the i<sup>th</sup> query, perform A[queries[i][0]] = queries[i][1] and determine the minimum number of swaps required to sort the array in non-decreasing order.</li>\r\n</ul>\r\n<p><strong>Task:</strong></p>\r\n<p>For each query, determine the minimum swaps required to sort the array in non-decreasing order.</p>\r\n<p><strong>Note:</strong> Array A and queries follow 0-based indexing.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n5\r\n2 2 1 1 3\r\n1\r\n0 3\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The first line contains the number of test cases, T = 1.</p>\r\n<p>The first test case:</p>\r\n<ul>\r\n    <li><strong>Given:</strong>\r\n        <ul>\r\n            <li>N = 5</li>\r\n            <li>A = [2, 2, 1, 1, 3]</li>\r\n            <li>Q = 1</li>\r\n            <li>queries = [[0, 3]]</li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Approach:</strong>\r\n        <ul>\r\n            <li>Original A: [2, 2, 1, 1, 3]</li>\r\n            <li>After the first update (A[0] = 3), the array A becomes [3, 2, 1, 1, 3].</li>\r\n            <li>To sort [3, 2, 1, 1, 3] into [1, 1, 2, 3, 3]:\r\n                <ul>\r\n                    <li>Swap indices 0 and 3: [1, 2, 1, 3, 3]</li>\r\n                    <li>Swap indices 1 and 2: [1, 1, 2, 3, 3]</li>\r\n                </ul>\r\n            </li>\r\n            <li>The minimum swaps required would be 2.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nN = 5, A = [1, 2, 3, 1, 2], Q = 2, queries = [[1, 3], [3, 3]]\r\nOutput:\r\n2\r\n1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li><strong>Original A:</strong> [1, 2, 3, 1, 2]</li>\r\n    <li><strong>Query 1:</strong> queries[0] = [1, 3] (Perform A[1] = 3)\r\n        <ul>\r\n            <li>After the first update, the array A becomes [1, 3, 3, 1, 2].</li>\r\n            <li>To sort [1, 3, 3, 1, 2] into [1, 1, 2, 3, 3]:\r\n                <ul>\r\n                    <li>Swap indices 1 and 3: [1, 1, 3, 3, 2]</li>\r\n                    <li>Swap indices 2 and 4: [1, 1, 2, 3, 3]</li>\r\n                </ul>\r\n            </li>\r\n            <li>The minimum swaps required would be 2.</li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Query 2:</strong> queries[1] = [3, 3] (Perform A[3] = 3)\r\n        <ul>\r\n            <li>After the second update, the array A becomes [1, 3, 3, 2, 2].</li>\r\n            <li>To sort [1, 3, 3, 2, 2] into [1, 2, 2, 3, 3]:\r\n                <ul>\r\n                    <li>Swap indices 1 and 4: [1, 2, 3, 2, 3]</li>\r\n                </ul>\r\n            </li>\r\n            <li>The minimum swaps required is 1.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the Solve function that takes the following arguments and returns an integer denoting the minimum swaps required to sort the array in non-decreasing order for each query.</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the size of array A</li>\r\n    <li><code>A</code>: Represents the elements of array A</li>\r\n    <li><code>Q</code>: Represents the integer Q</li>\r\n    <li><code>queries</code>: Represents the elements of the array of queries</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line contains <code>T</code> denoting the number of test cases. <code>T</code> also specifies the number of times you have to run the solve function on a different set of inputs.</p>\r\n<p>For each test case:</p>\r\n<ul>\r\n    <li>The first line contains <code>N</code> denoting the size of the array.</li>\r\n    <li>The second line contains <code>N</code> space-separated representing the elements of the array <code>A</code>.</li>\r\n    <li>The third line consists of a single integer denoting the value of <code>Q</code>.</li>\r\n    <li>The following <code>Q</code> lines consist of two space-separated integers denoting <code>queries[i][0]</code> and <code>queries[i][1]</code>.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>For each query, determine the minimum swaps required to sort the array in non-decreasing order. Print a single integer on a new line for each query.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= T &lt;= 100</code></li>\r\n    <li><code>1 &lt;= N &lt;= 10<sup>5</sup></code></li>\r\n    <li><code>1 &lt;= A[i] &lt;= 3</code></li>\r\n    <li><code>1 &lt;= Q &lt;= 2 * 10<sup>5</sup></code></li>\r\n    <li><code>0 &lt;= queries[i][0] &lt; N</code></li>\r\n    <li><code>1 &lt;= queries[i][1] &lt;= 3</code></li>\r\n    <li>The sum of <code>N</code> over all the test cases does not exceed <code>2 * 10<sup>5</sup></code></li>\r\n    <li>The sum of <code>Q</code> over all the test cases does not exceed <code>2 * 10<sup>5</sup></code></li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_5july",
        "company_id": 193
    }
]