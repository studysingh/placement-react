[
    {
        "id": 1258,
        "title": "Mother Daughter Age Calculation",
        "problem_statement": "<h1>Mother Daughter Age Calculation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Write a program that accepts two integer inputs: the current age of a mother, <code>mAge</code>, and the current age of her daughter, <code>dAge</code>. The program should determine how many years ago, or how many years hence, will the mother be twice as old as her daughter.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not write arbitrary strings anywhere in the program, as these contribute to the standard output, and test cases will fail.</p>\r\n<p><strong>Input Format:</strong> The only line of input consists of two numbers <code>mAge</code> and <code>dAge</code> separated by a single space, where <code>mAge</code> represents the current age of the mother and <code>dAge</code> represents the current age of her daughter.</p>\r\n<p><strong>Output Format:</strong> Single line of output contains how many years ago or how many years hence the mother is twice as old as her daughter.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: 36 7\r\nOutput: 22</code></pre>\r\n<p><strong>Explanation:</strong> Here, after 22 years the mother's age will be 58 (i.e., 36+22) and the daughter's age will be 29 (i.e., 7+22). So, after 22 years is when the mother will be twice as old as the daughter.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= mAge, dAge &lt;= 100</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "deloitte_26aug",
        "company_id": 428
    },
    {
        "id": 1259,
        "title": "Tens Digit Sort",
        "problem_statement": "<h1>Tens Digit Sort</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Sorting seems to be a big topic right now, so Shubha decides to create her own kind of sorting. Since she can't really code, she asks you to help to design the program for the same.</p>\r\n<p>Shubha's sorting algorithm goes like this: She sorts the numbers by their ten's digits in ascending order but if two numbers have the same ten's digit then the bigger number is printed first.</p>\r\n<p>Write a program to print all the numbers after sorting.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line of input contains an integer N, a number of elements.</p>\r\n<p>The second line of input contains N elements, each separated by a space.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>The output should display the numbers after applying Shubha's sorting algorithm, each separated by a single white space.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n7\r\n51 13 107 27 47 59 99\r\nOutput:\r\n107 13 27 47 59 51 99</code></pre>\r\n<p><strong>Explanation:</strong> From Sample Input1, we have:</p>\r\n<ul>\r\n    <li>In 51 - 5 is in ten's place</li>\r\n    <li>In 13 - 1 is in ten's place</li>\r\n    <li>In 107 - 0 is in ten's place</li>\r\n    <li>In 27 - 2 is in ten's place</li>\r\n    <li>In 47 - 4 is in ten's place</li>\r\n    <li>In 59 - 5 is in ten's place</li>\r\n    <li>In 99 - 9 is in ten's place</li>\r\n</ul>\r\n<p>So after sorting it according to ten's place value in ascending order, we will get (107, 13, 27, 47, 51, 59, and 99).</p>\r\n<p>But 51 and 59 have the same ten's digit so the bigger between them is 59 so it will print first.</p>\r\n<p>Hence, it will print 107, 13, 27, 47, 59, 51, and 99 as an output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n23 86 356 47\r\nOutput:\r\n23 47 356 86</code></pre>\r\n<p><strong>Explanation:</strong> From Sample Input2, we have:</p>\r\n<ul>\r\n    <li>In 23 - 2 is in ten's place</li>\r\n    <li>In 47 - 4 is in ten's place</li>\r\n    <li>In 356 - 5 is in ten's place</li>\r\n    <li>In 86 - 8 is in ten's place</li>\r\n</ul>\r\n<p>So after sorting according to ten's place value in ascending order, we will get (23, 47, 356, and 86).</p>\r\n<p>Hence, it will print 23, 47, 356, and 86 as an output.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>The number should have ten's place.</li>\r\n</ul>\r\n\r\n<pre><code class='language-cpp'>#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\nvoid numbersAfterSorting(int arr[], int n) { // arr is an array of size n\r\n    // WRITE YOUR CODE HERE\r\n}\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    int* array = new int[n];\r\n    for (int i = 0; i &lt; n; i++) {\r\n        cin >> array[i];\r\n    }\r\n    numbersAfterSorting(array, n);\r\n    delete[] array;\r\n    return 0;\r\n}\r\n</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "deloitte_26aug",
        "company_id": 428
    }
]