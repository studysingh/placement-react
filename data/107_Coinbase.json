[
    {
        "id": 349,
        "title": "Water Flow Simulation",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Water Flow Simulation</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 20px;\n        }\n        .problem-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 8px;\n            background-color: #f9f9f9;\n        }\n        h1, h2, h3 {\n            color: #333;\n        }\n        .problem-description, .input-format, .output-format, .constraints, .examples {\n            margin-bottom: 20px;\n        }\n        .example {\n            background-color: #fff;\n            padding: 15px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            margin-bottom: 15px;\n        }\n        pre {\n            background-color: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        .explanation {\n            margin-top: 10px;\n            color: #555;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-bottom: 20px;\n        }\n        table, th, td {\n            border: 1px solid #ddd;\n        }\n        th, td {\n            padding: 8px;\n            text-align: left;\n        }\n        th {\n            background-color: #f2f2f2;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\\\"problem-container\\\">\n    <h1>Water Flow Simulation</h1>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Civil engineers are simulating rainfall on a digital elevation model to study water flow. You are given a 2D array of integers <code>heights</code> representing terrain heights and two integers <code>startRow</code> and <code>startCol</code> indicating the water\\'s starting point.</p>\n        <p>Simulate the water flow from the starting point with these rules:</p>\n        <ol>\n            <li>Water flows to adjacent cells (up, down, left, right) if the adjacent cell\\'s height is less than or equal to the current cell\\'s height.</li>\n            <li>The flow stops when no adjacent cell has a lower or equal height.</li>\n        </ol>\n        <p>Return a 2D array of integers where each cell contains the time step when it becomes wet, starting at 0 for the initial cell. If a cell remains dry, its value should be <code>-1</code>. The dimensions of the output array should match those of the input <code>heights</code>.</p>\n        <p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(heights.length^2 * heights[0].length^2)</code> will fit within the execution time limit.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The input consists of:</p>\n        <ul>\n            <li>A 2D array of integers <code>heights</code> representing terrain heights.</li>\n            <li>Two integers <code>startRow</code> and <code>startCol</code> indicating the water\\'s starting point.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return a 2D array of integers where each cell contains the time step when it becomes wet, starting at 0 for the initial cell. If a cell remains dry, its value should be <code>-1</code>.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>The dimensions of the <code>heights</code> array will be within the range of typical terrain models.</li>\n            <li>The time complexity should not exceed <code>O(heights.length^2 * heights[0].length^2)</code>.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nheights = [\n    [3, 2, 1],\n    [6, 5, 4],\n    [9, 8, 7]\n]\nstartRow = 1, startCol = 1</pre>\n            <pre class=\\\"output\\\">Output:\n[\n    [-1, 1, 2],\n    [-1, 0, 1],\n    [-1, -1, -1]\n]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation:</p>\n                <p>The water starts at the center cell (1, 1) with a height of 5. It flows to the right to (1, 2) with a height of 4 (time step 1), and then to (1, 3) with a height of 1 (time step 2). The water cannot flow upwards or downwards because the adjacent cells have higher heights. The final output is:</p>\n                <table>\n                    <tr>\n                        <td>-1</td>\n                        <td>1</td>\n                        <td>2</td>\n                    </tr>\n                    <tr>\n                        <td>-1</td>\n                        <td>0</td>\n                        <td>1</td>\n                    </tr>\n                    <tr>\n                        <td>-1</td>\n                        <td>-1</td>\n                        <td>-1</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n</body>\n</html>",
        "google_doc_link": "https://docs.google.com/document/d/1VHIvugm82bzJMs_4rbSo8t12pcQbLRo-nNi564jCECI/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coinbase",
        "company_id": 107
    },
    {
        "id": 350,
        "title": "Word Vowel and Consonant Difference",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Word Vowel and Consonant Difference</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 20px;\n        }\n        .problem-container {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            border: 1px solid #ccc;\n            border-radius: 8px;\n            background-color: #f9f9f9;\n        }\n        h1, h2, h3 {\n            color: #333;\n        }\n        .problem-description, .input-format, .output-format, .constraints, .examples {\n            margin-bottom: 20px;\n        }\n        .example {\n            background-color: #fff;\n            padding: 15px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            margin-bottom: 15px;\n        }\n        pre {\n            background-color: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        .explanation {\n            margin-top: 10px;\n            color: #555;\n        }\n    </style>\n</head>\n<body>\n\n<div class=\\\"problem-container\\\">\n    <h1>Word Vowel and Consonant Difference</h1>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are given a string <code>text</code> consisting of unique lowercase English words that are divided by spaces. Your task is to count the absolute difference between the number of vowels (excluding \\'e\\' and \\'u\\') and the number of consonants in each word. You are to return the array of words in the ascending order of these absolute differences. If the absolute difference is the same, sort the words in alphabetical order.</p>\n        <p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(text.length^2)</code> will fit within the execution time limit.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The input is a string <code>text</code> containing unique words divided by spaces. Words will include only lowercase English letters. The maximum length of the words in the text is 20 characters.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return an array of strings in the ascending order of the absolute difference between the count of vowels (excluding \\'e\\' and \\'u\\') and consonants in each word. If the absolute difference is the same, sort the words in alphabetical order.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ text.length ≤ 1000</li>\n            <li>The maximum length of each word is 20 characters.</li>\n            <li>The time complexity should not exceed <code>O(text.length^2)</code>.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n\\\"apple banana cherry date\\\"</pre>\n            <pre class=\\\"output\\\">Output:\n[\\\"date\\\", \\\"banana\\\", \\\"apple\\\", \\\"cherry\\\"]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation:</p>\n                <p>The absolute differences are calculated as follows:</p>\n                <ul>\n                    <li>\\\"apple\\\": |2 (a, i) - 3 (p, p, l)| = 1</li>\n                    <li>\\\"banana\\\": |3 (a, a, a) - 3 (b, n, n)| = 0</li>\n                    <li>\\\"cherry\\\": |1 (e) - 5 (c, h, r, r, y)| = 4</li>\n                    <li>\\\"date\\\": |2 (a, e) - 2 (d, t)| = 0</li>\n                </ul>\n                <p>Sorting by absolute difference and then alphabetically gives: [\\\"date\\\", \\\"banana\\\", \\\"apple\\\", \\\"cherry\\\"].</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n</body>\n</html>",
        "google_doc_link": "https://docs.google.com/document/d/1wuZ90YcCZ-wozg2X-Zg-dRkWQxLvDvSepzF77wxp0z8/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coinbase",
        "company_id": 107
    },
    {
        "id": 357,
        "title": "Package Codes Problem",
        "problem_statement": "<!DOCTYPE html>\\n<html lang=\\\\\\\"en\\\\\\\">\\n<head>\\n    <meta charset=\\\\\\\"UTF-8\\\\\\\">\\n    <meta name=\\\\\\\"viewport\\\\\\\" content=\\\\\\\"width=device-width, initial-scale=1.0\\\\\\\">\\n    <title>Package Codes Problem</title>\\n    <style>\\n        body {\\n            font-family: Arial, sans-serif;\\n            line-height: 1.6;\\n        }\\n        .problem-container {\\n            max-width: 800px;\\n            margin: 0 auto;\\n            padding: 20px;\\n            border: 1px solid #ccc;\\n            border-radius: 8px;\\n            background-color: #f9f9f9;\\n        }\\n        h3 {\\n            color: #333;\\n        }\\n        .problem-description, .input-format, .output-format, .constraints, .examples {\\n            margin-bottom: 20px;\\n        }\\n        .example {\\n            background-color: #fff;\\n            padding: 10px;\\n            border: 1px solid #ddd;\\n            border-radius: 4px;\\n        }\\n        pre {\\n            background-color: #f4f4f4;\\n            padding: 10px;\\n            border: 1px solid #ddd;\\n            border-radius: 4px;\\n            overflow-x: auto;\\n        }\\n        .explanation {\\n            margin-top: 10px;\\n            color: #555;\\n        }\\n    </style>\\n</head>\\n<body>\\n\\n<div class=\\\\\\\"problem-container\\\\\\\">\\n    <div class=\\\\\\\"problem-description\\\\\\\">\\n        <h2>Package Codes Problem</h2>\\n        <p>In a logistics company, you are given an array of integers <code>packageCodes</code>, representing the codes assigned to packages processed by the system. Analyze <code>packageCodes</code> and find the codes that are both divisible by 3 and contain the digit \\\\\\'7\\\\\\' at least twice. Return the number of such codes.</p>\\n        <p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than O(packageCodes.length²) will fit within the execution time limit.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"input-format\\\\\\\">\\n        <h3>Input Format</h3>\\n        <p>An array of integers <code>packageCodes</code> representing the unique codes assigned to packages processed by the system.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"output-format\\\\\\\">\\n        <h3>Output Format</h3>\\n        <p>The total number of package codes that are both divisible by 3 and contain the digit \\\\\\'7\\\\\\' at least twice.</p>\\n    </div>\\n    \\n    <div class=\\\\\\\"constraints\\\\\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>0 &lt; packageCodes.length ≤ 10</li>\\n            <li>1 &lt; packageCodes[i] &lt; 10</li>\\n        </ul>\\n    </div>\\n    \\n    <div class=\\\\\\\"examples\\\\\\\">\\n        <h3>Examples</h3>\\n        <div class=\\\\\\\"example\\\\\\\">\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\n[1277, 777, 333, 77]\\n</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n2\\n</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <p>The codes 1277 and 777 are divisible by 3 and contain the digit \\\\\\'7\\\\\\' at least twice. Therefore, the output is 2.</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n</body>\\n</html>",
        "google_doc_link": "https://docs.google.com/document/d/1C1RyL96oXgIqQjjCcPZXW92_nwXy_rN5I4IvPez4NZg/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coinbase",
        "company_id": 107
    },
    {
        "id": 476,
        "title": "Array Query Processing",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-title\\\">\n        <h2>Array Query Processing</h2>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>You are given two arrays of integers <code>a</code> and <code>b</code>, and an array <code>queries</code> containing the queries you are required to process. Every <code>queries[i]</code> can have one of the following two forms:</p>\n        \n        <ul>\n            <li><code>[0, i, x]</code>: In this case, you need to add <code>x</code> to the current value of <code>b[i]</code></li>\n            <li><code>[1, x]</code>: In this case, you need to find the total number of pairs of indices <code>i</code> and <code>j</code> such that <code>a[i] + b[j] = x</code></li>\n        </ul>\n        \n        <p>Perform the given queries in order and return an array containing the results of the queries of the type <code>[1, x]</code>.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li><code>array.integer a</code>: An array of integers</li>\n            <li><code>array.integer b</code>: An array of integers</li>\n            <li><code>array.array.integer queries</code>: A 2D array where queries[i][0] represents the type of query</li>\n        </ul>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ a.length ≤ 10³</li>\n            <li>0 ≤ a[i] ≤ 10⁸</li>\n            <li>1 ≤ b.length ≤ 5 × 10⁴</li>\n            <li>0 ≤ b[i] ≤ 10⁸</li>\n            <li>1 ≤ queries.length ≤ 10³</li>\n            <li>For queries of type [0, i, x]: 0 ≤ i < b.length and 0 ≤ x ≤ 10⁵</li>\n            <li>For queries of type [1, x]: 0 ≤ x ≤ 3 × 10⁸</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">Input:\na = [1, 2, 3]\nb = [1, 4]\nqueries = [[1, 5], [0, 0, 2], [1, 5]]</pre>\n            <pre class=\\\"output\\\">Output: [1, 2]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Initially: a = [1, 2, 3] and b = [1, 4]</p>\n                <p>Query [1, 5]: One way to form sum of 5 (1 + 4 = a[0] + b[1]). Result = 1</p>\n                <p>Query [0, 0, 2]: Add 2 to b[0]. Now b = [3, 4]</p>\n                <p>Query [1, 5]: Two ways to form sum of 5 (1 + 4 = a[0] + b[1] and 2 + 3 = a[1] + b[0]). Result = 2</p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <h4>Example 2:</h4>\n            <pre class=\\\"input\\\">Input:\na = [1, 2, 2]\nb = [2, 3]\nqueries = [[1, 4], [0, 0, 1], [1, 5]]</pre>\n            <pre class=\\\"output\\\">Output: [3, 4]</pre>\n        </div>\n    </div>\n\n    <div class=\\\"time-memory-limits\\\">\n        <h3>Limits</h3>\n        <ul>\n            <li>Time Limit: 0.5 seconds</li>\n            <li>Memory Limit: 1 GB</li>\n        </ul>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/10otQrDB73NCU6ElPxoGSv309KC8UWbrFFRFFUiIvgtY/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coinbase",
        "company_id": 107
    },
    {
        "id": 497,
        "title": "coinbase",
        "problem_statement": "\r\n<h2>Restaurant Chain</h2>\r\n<div class=\"problem-description\">\r\n  <p>A restaurant chain has N restaurants. Each restaurant is given a unique ID from 0 to N-1. To establish connectivity among all the restaurants, the head office maintains a hierarchy with N connections. The restaurant with head office is given an ID 0. A restaurant is further connected to a maximum of two restaurants. For every restaurant A, a new restaurant is always added to the left of it and its left connection is occupied then a restaurant A is added to the right of it. The system maintains the count of permanent customers of every restaurant.</p>\r\n  <p>An annual festival is being organised in one of the restaurants. To select which restaurant will host the festival, an algorithm is used which generates a number M and makes a sequence of restaurant IDs from traversing the hierarchy so that for every restaurant, the given rule is followed. The rule is: for a restaurant with ID X, first the left connected restaurant to X is added, then the given restaurant with ID X is added and then the right connected restaurant to X is added in the sequence. Then the Mth restaurant from the start of the sequence is selected for the festival. The system must store the count of permanent customers of every restaurant.</p>\r\n  <p>Write an algorithm to find the count of permanent customers of the selected restaurant.</p>\r\n</div>\r\n<div class=\"input-format\">\r\n  <p>The first line of the input consists of an integer - <code>restCount</code> representing the number of restaurants (N).</p>\r\n  <p>The next line consists of N space-separated integers - <code>restCust[0], restCust[1],..., restCust[N-1]</code> representing the number of permanent customers of each restaurant.</p>\r\n  <p>The next line consists of two space-separated integers - <code>conList_row</code> and <code>conList_col</code> representing the number of connections (<code>conList_row</code>) (is always equal to N-1) and number of restaurants connected by a connection (<code>conList_col</code>) (is always equal to two).</p>\r\n  <p>The next <code>C</code> lines consist of <code>R</code> space-separated integers, representing the IDs of restaurants connected by a connection.</p>\r\n  <p>The next line consists of an integer - <code>restM</code>, representing the number M to select the restaurant (M).</p>\r\n\r\n</div>\r\n<div class=\"output-format\">\r\n  <p>Print an integer representing count of permanent customers of the selected restaurant.</p>\r\n</div>\r\n<div class=\"constraints\">\r\n  <p>0 ≤ <code>restCount</code> ≤ 10<sup>5</sup></p>\r\n  <p>0 ≤ <code>restCust[0], restCust[1],..., restCust[N-1]</code> &lt; 10<sup>4</sup></p>\r\n  <p>0 ≤ <code>restM</code> ≤ <code>restCount</code></p>\r\n</div>\r\n<div class=\"examples\">\r\n  <h3>Example 1</h3>\r\n  <pre>\r\nInput:\r\n6\r\n10 15 21 25 14 22\r\n5 2\r\n1 2\r\n0 1\r\n3 4\r\n1 3\r\n4 5\r\n4\r\n\r\nOutput:\r\n15\r\n  </pre>\r\n  <p>Explanation:</p>\r\n  <p>The hierarchy is as given below:</p>\r\n  <pre>\r\n0\r\n/\\\r\n1 2\r\n/\\\r\n3 4 5\r\n/\\\r\n6 7\r\n  </pre>\r\n  <p>As per the given rule, the generated sequence of restaurant IDs is: 6,3,7,1,4,0,5,2.</p>\r\n  <p>Now the Mth (4th as M=4) restaurant has ID:1.</p>\r\n  <p>The count of permanent customers in restaurant with ID 1 is 15.</p>\r\n  <p>So, the output is 15.</p>\r\n  <h3>Example 2</h3>\r\n  <pre>\r\nInput:\r\n8\r\n10 15 21 25 14 22 15 24\r\n7 2\r\n0 1\r\n0 2\r\n1 3\r\n1 4\r\n2 5\r\n2 6\r\n4 7\r\n4\r\n\r\nOutput:\r\n15\r\n  </pre>\r\n<p>Explanation:</p>\r\n  <p>The hierarchy is as given below:</p>\r\n  <pre>\r\n0\r\n/\\\r\n1 2\r\n/\\\\\r\n3 4 5 6\r\n/\\\r\n7 8\r\n  </pre>\r\n\r\n</div>\r\n<div class=\"note\">\r\n    <p>The first connection of restaurant X in the connection list represents a restaurant connected to the left of restaurant X and the second connection of restaurant X represents the restaurant connected to the right of restaurant X.</p>\r\n    <p>There is only one path from one restaurant to another restaurant in the hierarchy.</p>\r\n</div>\r\n",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Coinbase",
        "company_id": 107
    }
]