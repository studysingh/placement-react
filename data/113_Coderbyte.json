[
    {
        "id": 379,
        "title": "Array Challenge",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Array Challenge Problem</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 20px;\n        }\n        .problem-container {\n            max-width: 900px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #ddd;\n            border-radius: 8px;\n            background: #f9f9f9;\n        }\n        h1, h3 {\n            color: #333;\n        }\n        pre {\n            background: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        ul {\n            margin: 0;\n            padding-left: 20px;\n        }\n        .example {\n            margin-top: 20px;\n        }\n        .example .input, .example .output {\n            margin-bottom: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\\\"problem-container\\\">\n        <h1>Array Challenge</h1>\n        <div class=\\\"problem-description\\\">\n            <p>\n                Have the function <code>ArrayChallenge(strArr)</code> take the <code>strArr</code> parameter being passed, which will be an array of two strings containing only the characters <strong>{a, b, c}</strong>. Your task is to return the length of the longest common subsequence common to both strings. \n            </p>\n            <p>\n                A common subsequence for two strings does not require each character to occupy consecutive positions within the original strings. For example: if <code>strArr</code> is [\\\"abcabb\\\", \\\"bacb\\\"], then your program should return <strong>3</strong> because the longest common subsequence for these two strings is \\\"bab\\\". There are other 3-length subsequences such as \\\"acb\\\" and \\\"bcb\\\", but 3 is the longest common subsequence.\n            </p>\n        </div>\n\n        <div class=\\\"input-format\\\">\n            <h3>Input Format</h3>\n            <p>\n                The input will be an array of two strings.\n            </p>\n        </div>\n\n        <div class=\\\"output-format\\\">\n            <h3>Output Format</h3>\n            <p>\n                Return the length of the longest common subsequence.\n            </p>\n        </div>\n\n        <div class=\\\"constraints\\\">\n            <h3>Constraints</h3>\n            <ul>\n                <li>The strings contain only the characters <strong>{a, b, c}</strong>.</li>\n                <li>1 ≤ length of each string ≤ 100</li>\n            </ul>\n        </div>\n\n        <div class=\\\"examples\\\">\n            <h3>Examples</h3>\n\n            <div class=\\\"example\\\">\n                <pre class=\\\"input\\\">Input:\n[\\\"abc\\\", \\\"cb\\\"]</pre>\n                <pre class=\\\"output\\\">Output:\n1</pre>\n            </div>\n\n            <div class=\\\"example\\\">\n                <pre class=\\\"input\\\">Input:\n[\\\"bcacb\\\", \\\"aacabb\\\"]</pre>\n                <pre class=\\\"output\\\">Output:\n3</pre>\n                <div class=\\\"explanation\\\">\n                    The longest common subsequence for these strings is \\\"bab\\\".\n                </div>\n            </div>\n        </div>\n\n        <div class=\\\"code-block\\\">\n            <h3>Sample Python Code Template</h3>\n            <pre>\ndef ArrayChallenge(strArr):\n    # code goes here\n    return len_lcs\n\n# Keep this function call here\nprint(ArrayChallenge(input()))\n            </pre>\n        </div>\n    </div>\n</body>\n</html>\n",
        "google_doc_link": "https://docs.google.com/document/d/1BXa2ovlt23uSD387seL0k3s5yG1YKtEIi0Fxq1pHy9M/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coderbyte",
        "company_id": 113
    },
    {
        "id": 381,
        "title": "Array Challenge - Gas Station Circular Route",
        "problem_statement": "<!DOCTYPE html>\n<html lang=\\\"en\\\">\n<head>\n    <meta charset=\\\"UTF-8\\\">\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\n    <title>Gas Station Circular Route</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            line-height: 1.6;\n            margin: 20px;\n        }\n        .problem-container {\n            max-width: 900px;\n            margin: auto;\n            padding: 20px;\n            border: 1px solid #ddd;\n            border-radius: 8px;\n            background: #f9f9f9;\n        }\n        h1, h3 {\n            color: #333;\n        }\n        pre {\n            background: #f4f4f4;\n            padding: 10px;\n            border: 1px solid #ddd;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n        ul {\n            margin: 0;\n            padding-left: 20px;\n        }\n        .example {\n            margin-top: 20px;\n        }\n        .example .input, .example .output {\n            margin-bottom: 10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\\\"problem-container\\\">\n        <h1>Array Challenge - Gas Station Circular Route</h1>\n        <div class=\\\"problem-description\\\">\n            <p>\n                Have the function <code>ArrayChallenge(strArr)</code> take <code>strArr</code>, which will be an array consisting of the following elements:\n            </p>\n            <ul>\n                <li><strong>N</strong>: The number of gas stations in a circular route.</li>\n                <li>Each subsequent element will represent the amount of gas <strong>g</strong> at a gas station and the amount <strong>c</strong> required to get to the next station (formatted as \\\"g:c\\\").</li>\n            </ul>\n            <p>\n                Your goal is to return the index of the starting gas station that will allow you to travel around the entire route once. If it is not possible, return the string <code>impossible</code>. If multiple gas stations allow you to complete the route, return the smallest index.\n            </p>\n            <p>\n                For example, if <code>strArr</code> is <code>[\\\"4\\\",\\\"3:1\\\",\\\"2:2\\\",\\\"1:2\\\",\\\"0:1\\\"]</code>, your program should return <code>1</code>. Starting at station 1 allows you to travel the entire route successfully.\n            </p>\n        </div>\n\n        <div class=\\\"input-format\\\">\n            <h3>Input Format</h3>\n            <p>\n                A single array <code>strArr</code> where:\n            </p>\n            <ul>\n                <li>The first element <code>strArr[0]</code> is an integer <strong>N</strong>, the number of gas stations (N &ge; 2).</li>\n                <li>Each of the next <strong>N</strong> elements is in the form \\\"<strong>g:c</strong>\\\", where <strong>g</strong> is the gas received and <strong>c</strong> is the gas needed to reach the next station.</li>\n            </ul>\n        </div>\n\n        <div class=\\\"output-format\\\">\n            <h3>Output Format</h3>\n            <p>\n                Return the 1-based index of the starting gas station. If no such station exists, return the string <code>impossible</code>.\n            </p>\n        </div>\n\n        <div class=\\\"constraints\\\">\n            <h3>Constraints</h3>\n            <ul>\n                <li>2 &le; N &le; 100</li>\n                <li>0 &le; g, c &le; 100</li>\n            </ul>\n        </div>\n\n        <div class=\\\"examples\\\">\n            <h3>Examples</h3>\n\n            <div class=\\\"example\\\">\n                <pre class=\\\"input\\\">Input:\n[\\\"4\\\",\\\"1:1\\\",\\\"2:2\\\",\\\"1:2\\\",\\\"0:1\\\"]</pre>\n                <pre class=\\\"output\\\">Output:\nimpossible</pre>\n            </div>\n\n            <div class=\\\"example\\\">\n                <pre class=\\\"input\\\">Input:\n[\\\"4\\\",\\\"0:1\\\",\\\"2:2\\\",\\\"1:2\\\",\\\"3:1\\\"]</pre>\n                <pre class=\\\"output\\\">Output:\n4</pre>\n                <div class=\\\"explanation\\\">\n                    <p>\n                        Starting at station 4, you can complete the circular route. The total gas available at each station and the gas spent successfully allows traversal of the route.\n                    </p>\n                </div>\n            </div>\n        </div>\n\n        <div class=\\\"code-block\\\">\n            <h3>Sample Python Code Template</h3>\n            <pre>\ndef ArrayChallenge(strArr):\n    # code goes here\n    return \\\"impossible\\\"\n\n# Keep this function call here\nprint(ArrayChallenge(input()))\n            </pre>\n        </div>\n    </div>\n</body>\n</html>\n",
        "google_doc_link": "https://docs.google.com/document/d/1QhbOWPp2DlUEpmZhv8xrKb8jc1BdU9N4jSe2ktyM07M/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Coderbyte",
        "company_id": 113
    }
]