[
    {
        "id": 1891,
        "title": "Positive Product",
        "problem_statement": "<h1>Positive Product</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a sequence of `n` integers and you have to find the maximum length of a segment which gives positive product.</p>\r\n<p>Complete the `maxLength` function in your editor. It has 1 parameter:</p>\r\n<ol>\r\n    <li>An array, `arr`, containing `n` elements of the sequence.</li>\r\n</ol>\r\n<p>It must return an integer denoting the maximum length of a segment which gives positive product.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n1\r\n-2\r\n-3\r\n4\r\nOutput:\r\n4</code></pre>\r\n<p><strong>Explanation:</strong> Here maximum product is 1 * -2 * -3 * 4 = 24.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n-3\r\n5\r\nOutput:\r\n1</code></pre>\r\n<p><strong>Explanation:</strong> Here if we multiply both the two numbers then our product will be -3 * 5 = -15. Whether if we take only 5 it will give us maximum product.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`1 <= n <= 1000`</li>\r\n    <li>Absolute value of each number is greater than 0 and less than or equal to 1000 (i.e., `0 < |arr[i]| <= 1000`).</li>\r\n</ul>\r\n\r\n<p>The locked stub code in your editor reads the following <strong>Input</strong> from stdin and passes it to your function:</p>\r\n<ul>\r\n    <li>First line contains number of integers `n` in the sequence.</li>\r\n    <li>Followed by `n` lines each contain an element.</li>\r\n</ul>\r\n<p>Your function must return an integer denoting the maximum length of a segment which gives positive product. This is printed to stdout by the locked stub code in your editor.</p>\r\n\r\n<pre><code class='language-javascript'>// Complete the maxlength function below.\r\nint maxlength(vector&lt;int&gt; arr) {\r\n\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": null,
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Arcesium_18oct",
        "company_id": 668
    },
    {
        "id": 1892,
        "title": "Hydrate the nodes",
        "problem_statement": "<h1>Hydrate the nodes</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There is a tree with n nodes. The tree is rooted at node with number 0. As usually in computer science, the tree grows upside down comparing to trees existing in nature. Apples grow on nodes of this tree. Some of these apples are underhydrated, some are overhydrated, and others are neither. You know that for each overhydrated apple you'll get <code>overhydratedPenalty</code> cents and for every underhydrated you'll get <code>underhydratedPenalty</code> cents.</p>\r\n<p>Now, you want to pour water on exactly one node of the tree. When you pour water on node <code>v</code>, all apples that are in <code>v</code>'s subtree, i.e. <code>v</code> itself and all descendants of <code>v</code>, will be hydrated and in consequence each hydrated apple that was almost overhydrated becomes overhydrated. Moreover, every apple in the whole tree that was almost underhydrated and no water was poured on it gets underhydrated.</p>\r\n<p>Calculate the minimum total penalty you can get from pouring water on exactly one node of the tree.</p>\r\n\r\n<p>Complete the function <code>minimumPouringWaterPenalty</code> below.</p>\r\n<pre><code class='language-javascript'>int minimumPouringWaterPenalty(vector&lt;int&gt; parent, vector&lt;int&gt; waterLevel, int overhydratedPenalty, int underhydratedPenalty)</code></pre>\r\n<p>The function has the following parameter(s):</p>\r\n<ul>\r\n    <li><strong>parent</strong>: An integer array, <code>parent</code>, of size <code>n</code>, where <code>parent[i]</code> denotes the parent of the <code>i</code>th node.</li>\r\n    <li><strong>waterLevel</strong>: An integer array, <code>waterLevel</code>, of size <code>n</code>, where <code>waterLevel[i]</code> denotes the level of the water in the apple on node <code>i</code>. It's either -1, 0 or 1 where -1 stands for almost underhydrated, 0 stands for neither underhydrated nor almost overhydrated and 1 stands for almost overhydrated.</li>\r\n    <li><strong>overhydratedPenalty</strong>: An integer, <code>overhydratedPenalty</code>, denoting the penalty for each overhydrated apple.</li>\r\n    <li><strong>underhydratedPenalty</strong>: An integer, <code>underhydratedPenalty</code>, denoting the penalty for each underhydrated apple.</li>\r\n</ul>\r\n<p>The function must return the minimum penalty that you can get by pouring water on exactly one node of the tree.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 3\r\nparent = [-1, 0, 0]\r\nwaterLevel = [-1, -1, -1]\r\noverhydratedPenalty = 3\r\nunderhydratedPenalty = 3\r\n\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> The tree structure is: node 0 is the root, with children 1 and 2.\r\nInitially, all nodes (0, 1, 2) have <code>waterLevel = -1</code> (almost underhydrated).</p>\r\n<p>If we pour water on node 0:</p>\r\n<ol>\r\n    <li>Nodes in the subtree of 0 (nodes 0, 1, 2) are affected.</li>\r\n    <li>No nodes had <code>waterLevel = 1</code> (almost overhydrated), so no nodes become overhydrated. Penalty from overhydration = 0.</li>\r\n    <li>All nodes had <code>waterLevel = -1</code> (almost underhydrated). Since water was poured on node 0, and nodes 1 and 2 are in its subtree, they are considered \"poured on\" in terms of hydration. Thus, no nodes remain that were almost underhydrated and *not* affected by pouring water. Penalty from underhydration = 0.</li>\r\n</ol>\r\n<p>Therefore, the total penalty is 0.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n    <li><code>parent[0] = -1</code></li>\r\n    <li><code>0 &lt;= parent[i] &lt; i</code> for <code>i &gt; 0</code></li>\r\n    <li><code>waterLevel[i]</code> is either -1, 0 or 1</li>\r\n    <li><code>1 &lt;= overhydratedPenalty, underhydratedPenalty &lt;= 10^3</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": null,
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Arcesium_18oct",
        "company_id": 668
    },
    {
        "id": 1893,
        "title": "Who Sits Where",
        "problem_statement": "```html\r\n<h1>Who Sits Where</h1>\r\n<h2>Problem Description</h2>\r\n<p>There are five people: A, B, C, D and E. There are chairs placed in a line and numbered from 11 to 18 from left to right. Three chairs are empty. The following conditions apply:</p>\r\n<ul>\r\n    <li>A sits on the chair whose number is divisible by 2.</li>\r\n    <li>B sits on the chair whose number is divisible by 3 and 4.</li>\r\n    <li>C sits on the chair whose number is divisible only by 1 and the number itself.</li>\r\n    <li>E sits third to the right of A.</li>\r\n</ul>\r\n<p>If it is given that there are exactly two chairs empty between B and E and D does not sit between A and E, then which of the following chairs is occupied by C?</p>\r\n\r\n<h1>Numerical Computation: Department Intersection</h1>\r\n<h2>Problem Description</h2>\r\n<p>In a company, 60 employees are in logistics, 40 in development, 30 in management, 15 in logistics and development, 10 in development and management, 5 in management and logistics. No one enrolled in all the three. Find how many are enrolled in at least one of the departments.</p>\r\n\r\n<h1>Cryptogram 1</h1>\r\n<h2>Problem Description</h2>\r\n<p>If 'CRAYONS' is coded as 'NMRYBSD', then how is 'FLOWERS' coded?</p>\r\n\r\n<h1>Date Math</h1>\r\n<h2>Problem Description</h2>\r\n<p>If today is Monday, what day is it after 62 days?</p>\r\n\r\n<h1>Odd One Out</h1>\r\n<h2>Problem Description</h2>\r\n<p>Which letter is different from the others?</p>\r\n<pre><code class='language-text'>WHIVEAM</code></pre>\r\n\r\n<h1>Interest in Science</h1>\r\n<h2>Problem Description</h2>\r\n<p>In a group of 60 students 30 like physics and 20 like chemistry. How many students like only chemistry, if 6 students like neither physics nor chemistry?</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": null,
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Arcesium_18oct",
        "company_id": 668
    },
    {
        "id": 1895,
        "title": "Analyze a Venn Diagram",
        "problem_statement": "```html\r\n<h1>Analyze a Venn Diagram</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given the following information, how many students are studying physics?</p>\r\n<ul>\r\n    <li>There are 227 students in total.</li>\r\n    <li>An equal number of students are studying chemistry and physics.</li>\r\n</ul>\r\n<p>The problem includes a Venn Diagram with three overlapping circles labeled P (Physics), C (Chemistry), and M (Math). The regions are populated as follows:</p>\r\n<ul>\r\n    <li>Region P only: x</li>\r\n    <li>Region C only: y</li>\r\n    <li>Region M only: z</li>\r\n    <li>Region P and C (but not M): 12</li>\r\n    <li>Region P and M (but not C): 13</li>\r\n    <li>Region C and M (but not P): 14</li>\r\n    <li>Region P, C, and M: 15</li>\r\n    <li>Region outside all circles (studying none of the subjects): <strong>n=20</strong></li>\r\n    <li>Total number of students studying Math (M): <strong>M=100</strong></li>\r\n</ul>\r\n<p>We are given the following variables and their meanings:</p>\r\n<ul>\r\n    <li><strong>P:</strong> the number of students studying physics</li>\r\n    <li><strong>C:</strong> the number of students studying chemistry</li>\r\n    <li><strong>M:</strong> the number of students studying math</li>\r\n    <li><strong>n:</strong> the number of students studying none of the subjects</li>\r\n</ul>\r\n<p>We need to find the total number of students studying physics (P).</p>\r\n\r\n<h1>Complete the Graph</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Observe the following figures and find the missing value (?).</p>\r\n<p>The problem presents a diagram with three columns of numbers. Each column has a top number, a middle number, and a bottom number. The top and bottom numbers in each column are connected to the middle number in that column.</p>\r\n<p>The numbers are arranged as follows:</p>\r\n<pre><code class='language-text'>Column 1:\r\nTop: 50\r\nMiddle: 65\r\nBottom: 30\r\n\r\nColumn 2:\r\nTop: 45\r\nMiddle: 10\r\nBottom: 40\r\n\r\nColumn 3:\r\nTop: 5\r\nMiddle: ?\r\nBottom: 2\r\n</code></pre>\r\n<p>The task is to determine the value of '?'.</p>\r\n\r\n<h1>What is the Original String?</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given the logic in the upper image, determine the value of '?' in the lower image.</p>\r\n<p>The problem illustrates two sequences of string transformations. Each sequence starts with an initial string, undergoes three distinct transformation steps (represented by a square, a triangle, and a diamond shape), and results in a final string.</p>\r\n\r\n<h3>Upper Image Logic (Example Transformation):</h3>\r\n<pre><code class='language-text'>ABC --[Square]--> EFGH --[Triangle]--> AC --[Diamond]--> EGGH\r\n</code></pre>\r\n\r\n<h3>Lower Image Transformation (Problem to Solve):</h3>\r\n<pre><code class='language-text'>? --[Square]--> [Intermediate String 1] --[Triangle]--> [Intermediate String 2] --[Diamond]--> WYYZ\r\n</code></pre>\r\n<p>The task is to deduce the transformation rules from the upper sequence and then apply them to find the initial string '?' in the lower sequence, given its final transformed string 'WYYZ'.</p>\r\n\r\n<h1>Puzzles: Calculate Distance After Movement</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Two people, P1 and P2, are 100 meters apart. P1 walks 50 meters towards P2's starting position, turns left, walks 16 meters, turns left, and walks 50 meters. P2 walks 37 meters towards P1's initial position. How far apart are they?</p>\r\n\r\n<h1>Who Sits Where</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There are five people: A, B, C, D and E. There are chairs placed in a line and numbered from 11 to 18 from left to right. Three chairs are empty. The following conditions apply:</p>\r\n<ul>\r\n    <li>A sits on the chair whose number is divisible by 2.</li>\r\n    <li>B sits on the chair whose number is divisible by 3 and 4.</li>\r\n    <li>C sits on the chair whose number is divisible only by 1 and the number itself.</li>\r\n    <li>E sits third to the right of A.</li>\r\n</ul>\r\n<p><strong>Question:</strong> If it is given that there are exactly two chairs empty between B and E and D does not sit between A and E, then which of the following chairs is occupied by C?</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": null,
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Arcesium_18oct",
        "company_id": 668
    }
]