[
    {
        "id": 1110,
        "title": "Power limit",
        "problem_statement": "<h1>Power limit</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given 2 resources with powers A and B respectively. At each second, you have to select one resource out of 2 to run the software. The power of the resource at the time of selection should be greater than 1. Every second, the power of the selected resource gets reduced by 2 and the power of unselected resource gets charged by 1. The software stops when at least one resource has 0 power.</p>\r\n<p>You are given integers A and B</p>\r\n<p>Find the maximum number of seconds your software can run if you select the resources optimally.</p>\r\n\r\n<h2>Function description</h2>\r\n<p>Complete the function <code>powerLimit()</code>. This function takes the following 2 parameters and returns the required answer.</p>\r\n<ul>\r\n    <li>A Represents the power of the first resource</li>\r\n    <li>B Represents the power of the second resource</li>\r\n</ul>\r\n\r\n<h2>Input format</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code</p>\r\n<ul>\r\n    <li>The first line contains an integer A denoting the power of the first resource.</li>\r\n    <li>The second line contains an integer B denoting the power of the second resource.</li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>Print the maximum number of seconds your software can run if you select the resources optimally.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= A, B &lt;= 100</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n5\r\nOutput:\r\n6</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>At second 1, select resource B, the powers will be A=4, B=3</li>\r\n    <li>At second 2, select resource A, the powers will be A=3, B=2</li>\r\n    <li>At second 3, select resource A, the powers will be A=1, B=3</li>\r\n    <li>At second 4, select resource B, the powers will be A=2, B=1</li>\r\n    <li>At second 5, select resource A, the powers will be A=0, B=2</li>\r\n</ul>\r\n<p>Hence, the answer is 6 seconds</p>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 10 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<p>C, C++, C#, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, Java 17, JavaScript(Node.js), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, Python 3.8, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Meesho_1aug",
        "company_id": 364
    },
    {
        "id": 1111,
        "title": "Minimum Cost Travel",
        "problem_statement": "<h1>Minimum Cost Travel</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a question of minimum cost of traveling between two train stations in a circular city with N train stations numbered from 1 to N. The cost of tickets between adjacent stations is given in an array <code>ticket_cost</code>, where <code>ticket_cost[i]</code> represents the cost of traveling from station <code>i</code> to station <code>(i+1)%N</code>. The problem asks you to find the minimum cost to travel from a given start station to a given finish station. The output should be the minimum cost of traveling from start to finish station.</p>\r\n<p>This function takes the following arguments and finds the minimum cost to travel between the given start and finish station.</p>\r\n\r\n<h3>Parameters:</h3>\r\n<ul>\r\n    <li><code>N</code>: Represents the total number of train stations.</li>\r\n    <li><code>start</code>: Represents the start station.</li>\r\n    <li><code>finish</code>: Represents the finish station.</li>\r\n    <li><code>ticket_cost</code>: Represents <code>ticket_cost[i]</code> denoting the ticket-cost between the station number <code>i</code> and <code>(i+1)%N</code>.</li>\r\n</ul>\r\n\r\n<h3>Input Format:</h3>\r\n<ul>\r\n    <li>The first line contains an integer <code>N</code> denoting the total number of train stations.</li>\r\n    <li>The second line contains an integer <code>start</code> denoting the start station.</li>\r\n    <li>The third line contains an integer <code>finish</code> denoting the finish station.</li>\r\n    <li>The fourth line contains an <code>N</code> space-separated integer array <code>ticket_cost[]</code> represents the ticket-cost between the station number <code>i</code> and <code>(i+1)%N</code>.</li>\r\n</ul>\r\n\r\n<h3>Output Format:</h3>\r\n<p>Return minimum cost to travel between the given start and finish station.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= N <= 10^5</code></li>\r\n    <li><code>0 <= start, finish < N</code></li>\r\n    <li><code>0 <= ticket_cost[i] <= 10^3</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n1\r\n2\r\n1 2 3 4\r\nOutput:\r\n3</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>path1 -> 1 -> 2 -> 3 -> 1+2 = 3</p>\r\n<p>path2 -> 1 -> 4 -> 3 -> 4+3 = 7</p>\r\n<p>Path1 will give the minimum cost. Therefore return 3</p>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<p>Time Limit: 1.0 sec(s) for each input file</p>\r\n<p>Memory Limit: 256 MB</p>\r\n<p>Source Limit: 1024 KB</p>\r\n\r\n<h2>Scoring</h2>\r\n<p>Scores assigned if any testcase passes</p>\r\n\r\n<h2>Allowed languages</h2>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, Java 17, JavaScript, NodeJS (s), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, Python 3.8, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Meesho_1aug",
        "company_id": 364
    },
    {
        "id": 1112,
        "title": "Genius Badge",
        "problem_statement": "<h1>Genius Badge</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A teacher decides to felicitate intelligent students in a class by giving them a \"Genius\" badge. Students who had a CGPA greater than 9 last year and have increased their CGPA this year will be given a \"Genius\" badge. You are given a table <code>student_record</code>.</p>\r\n<p><strong>Task:</strong> Write a query to select the <code>roll_number</code>, <code>student_name</code>, and whether or not he/she will be getting a \"Genius\" badge. Arrange the final answer in the increasing roll number.</p>\r\n\r\n<h3>Input Format</h3>\r\n<p>The input table is named <code>student_record</code> and has the following columns:</p>\r\n<ul>\r\n    <li><code>roll_number</code> (Int): Represents the unique id of a student.</li>\r\n    <li><code>student_name</code> (String): Represents the name of a student.</li>\r\n    <li><code>CGPA_lastyear</code> (Int): Represents the past year's CGPA of a student.</li>\r\n    <li><code>CGPA_thisyear</code> (Int): Represents this year's CGPA of a student.</li>\r\n</ul>\r\n\r\n<h3>Output Format</h3>\r\n<p>The output should contain the following columns:</p>\r\n<ul>\r\n    <li><code>roll_number</code> (Int): Represents the unique id of a student.</li>\r\n    <li><code>student_name</code> (String): Represents the name of a student.</li>\r\n    <li><code>geniusTrueFalse</code> (String): Represents boolean (TRUE/FALSE) value if a badge or not.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<p><strong>Input table:</strong> <code>student_record</code></p>\r\n<pre><code class='language-text'>roll_number | student_name | CGPA_lastyear | CGPA_thisyear\r\n------------|--------------|---------------|--------------\r\n1           | Jules        | 9.2           | 8\r\n2           | Cage         | 8.4           | 7.8\r\n3           | Carter       | 9.6           | 9.2\r\n4           | Stephen      | 9.2           | 9.4\r\n5           | Tory         | 7.6           | 8.5</code></pre>\r\n\r\n<p><strong>Output table:</strong></p>\r\n<pre><code class='language-text'>roll_number | student_name | geniusTrueFalse\r\n------------|--------------|----------------\r\n1           | Jules        | FALSE\r\n2           | Cage         | FALSE\r\n3           | Carter       | FALSE\r\n4           | Stephen      | TRUE\r\n5           | Tory         | FALSE</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<p><strong>Time Limit:</strong> 5 sec(s) for each input file</p>\r\n<p><strong>Memory Limit:</strong> 256 MB</p>\r\n<p><strong>Source Limit:</strong> 1024 KB</p>\r\n\r\n<h2>Notes</h2>\r\n<p>Your SQL query must be able to print the sample output from the provided sample input. However, the query is run against multiple hidden test cases. Therefore, your query must pass these hidden test cases to solve the problem statement.</p>\r\n<p><strong>Scoring:</strong> Score is assigned if any testcase passes.</p>\r\n<p><strong>Allowed Languages:</strong> MySQL, PostgreSQL, MSSQL, Oracle_Db</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Meesho_1aug",
        "company_id": 364
    }
]