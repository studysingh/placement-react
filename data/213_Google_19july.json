[
    {
        "id": 649,
        "title": "Special Number",
        "problem_statement": "<h1>Special Number</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A number X is said to be special if it satisfies the given condition:</p>\r\n<ul>\r\n    <li>Every digit `d` present in X, occurs `d` number of times in X.</li>\r\n</ul>\r\n<p>You are given an integer `N`.</p>\r\n<p><strong>Task:</strong> Determine the smallest special number greater than `N`.</p>\r\n<p><strong>Note:</strong> Digit `d` lies in the range [0,9].</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the `solve` function provided in the editor. This function takes the following parameters and returns the required answer:</p>\r\n<ul>\r\n    <li>`N`: Represents the value of `N`.</li>\r\n</ul>\r\n\r\n<h3>Input Format</h3>\r\n<p>The first line contains a single integer `T`, which denotes the number of test cases. `T` also specifies the number of times you have to run the `solve` function on a different set of inputs.</p>\r\n<p>For each test case:</p>\r\n<ul>\r\n    <li>The first line contains an integer `N`.</li>\r\n</ul>\r\n\r\n<h3>Output Format</h3>\r\n<p>For each test case in a new line, print the smallest special number greater than `N`.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n2\r\nOutput:\r\n22</code></pre>\r\n<p><strong>Explanation:</strong> For N = 2, the smallest special number greater than 2 is 22. In 22, the digit '2' appears 2 times, satisfying the condition.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n23\r\nOutput:\r\n122</code></pre>\r\n<p><strong>Explanation:</strong> For N = 23, the smallest special number greater than 23 is 122. In 122, the digit '1' appears 1 time and the digit '2' appears 2 times, satisfying the condition.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`1 <= T <= 10^5`</li>\r\n    <li>`1 <= N <= 10^18`</li>\r\n</ul>\r\n\r\n<h2>Follow-up</h2>\r\n<p><strong>Note:</strong> Your code must be able to print the sample output from the provided sample input. However, your code is run on multiple hidden test cases. Therefore, your code must solve the hidden test cases to solve the problem's statement.</p>\r\n<p><strong>Time Limit:</strong> 10 seconds for each input file</p>\r\n<p><strong>Memory Limit:</strong> 256 MB</p>\r\n<p><strong>Source Limit:</strong> 1024 KB</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_19july",
        "company_id": 213
    },
    {
        "id": 650,
        "title": "Number of sequences",
        "problem_statement": "<h1>Number of sequences</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given the following:</p>\r\n<ul>\r\n    <li>An integer Z</li>\r\n    <li>An integer O</li>\r\n    <li>An integer K</li>\r\n</ul>\r\n<h3>Task</h3>\r\n<p>Determine the number of sequences with total length (Z+O) containing exactly Z zeros and O ones such that the length of the longest non-decreasing subsequence in the sequence is at least K. As the number of sequences can be large, find the answer modulo 10<sup>9</sup> + 7.</p>\r\n<p><strong>Note:</strong> A non-decreasing subsequence of `a` is a sequence of integers a<sub>p1</sub>, a<sub>p2</sub>, ..., a<sub>pm</sub> such that p1 &lt; p2 &lt; ... &lt; pm and a<sub>p1</sub> &le; a<sub>p2</sub> &le; ... &le; a<sub>pm</sub>. The length of the subsequence is m.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<p><strong>Input:</strong> (Implied by assumptions) Z = 2, O = 2, K = 3</p>\r\n<p><strong>Output:</strong> 4</p>\r\n<p><strong>Explanation:</strong></p>\r\n<p><strong>Assumptions:</strong></p>\r\n<ul>\r\n    <li>Z = 2</li>\r\n    <li>O = 2</li>\r\n    <li>K = 3</li>\r\n</ul>\r\n<p><strong>Approach:</strong></p>\r\n<p>There are total of six sequences possible:</p>\r\n<ul>\r\n    <li>[0, 0, 1, 1] Length of longest non-decreasing subsequence = 4</li>\r\n    <li>[0, 1, 0, 1] Length of longest non-decreasing subsequence = 3</li>\r\n    <li>[0, 1, 1, 0] Length of longest non-decreasing subsequence = 3</li>\r\n    <li>[1, 0, 0, 1] Length of longest non-decreasing subsequence = 3</li>\r\n    <li>[1, 0, 1, 0] Length of longest non-decreasing subsequence = 2</li>\r\n    <li>[1, 1, 0, 0] Length of longest non-decreasing subsequence = 2</li>\r\n</ul>\r\n<p>There are four sequences with the length of the longest non-decreasing subsequence at least 3.</p>\r\n<p>Thus, the answer is 4.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: Z = 2, O = 2, K = 5\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p><strong>Given:</strong></p>\r\n<ul>\r\n    <li>Z = 2</li>\r\n    <li>O = 2</li>\r\n    <li>K = 5</li>\r\n</ul>\r\n<p><strong>Approach:</strong></p>\r\n<p>There are no sequences possible because the length of the sequence is at most 4.</p>\r\n<p>Thus, the answer is 0.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: Z = 2, O = 2, K = 3\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p><strong>Given:</strong></p>\r\n<ul>\r\n    <li>Z = 2</li>\r\n    <li>O = 2</li>\r\n    <li>K = 3</li>\r\n</ul>\r\n<p><strong>Approach:</strong></p>\r\n<p>This matches the example given earlier, so the answer is 4.</p>\r\n\r\n<h2>Function description</h2>\r\n<p>Complete the `solve` function provided in the editor. The function takes the following 3 parameters and returns the number of sequences satisfying the conditions in the problem statement modulo 10<sup>9</sup> + 7 as described in the problem statement.</p>\r\n<ul>\r\n    <li>Z Represents the number of zeros in the sequence.</li>\r\n    <li>O Represents the number of ones in the sequence.</li>\r\n    <li>K Represents the number as described in the problem statement.</li>\r\n</ul>\r\n\r\n<h2>Input format</h2>\r\n<p><strong>Note</strong> This is the input format that you must use to provide custom input (available above the Code and Test button).</p>\r\n<p>The first line contains a single integer T, which denotes the number of test cases. T also specifies the number of times you have to run the `solve` function on a different set of inputs.</p>\r\n<p>For every test case:</p>\r\n<ul>\r\n    <li>The first line contains an integer Z denoting the number of zeros in the sequence.</li>\r\n    <li>The second line contains an integer O denoting the number of ones in the sequence.</li>\r\n    <li>The third line contains an integer K as described in the problem statement.</li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>For each test case, print a single integer in a new line representing the number of sequences satisfying the constraints in the problem statement modulo 10<sup>9</sup> + 7.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; T &le; 10</li>\r\n    <li>1 &le; Z, O &le; 50</li>\r\n    <li>1 &le; K &le; 10<sup>2</sup></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Google_19july",
        "company_id": 213
    }
]