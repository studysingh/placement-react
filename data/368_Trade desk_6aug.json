[
    {
        "id": 1119,
        "title": "Draw Figures on Grid Paper",
        "problem_statement": "<h1>Draw Figures on Grid Paper</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have a sheet of n x m grid paper and you'd like to draw a cool design on it. You've decided on a block motif similar to tetris pieces. Specifically, your picture will include the following five types of figures:</p>\r\n<p>The array <code>figures</code> contains a list of letters representing the types of figures you'd like to include in your design. Your task is to create a matrix of integers representing the grid paper, and draw the figures on it according to the following rules:</p>\r\n<ul>\r\n    <li>Start with a matrix of all <code>0</code>s, and use the <code>1</code>-based index of each figure to represent it on the grid. For example, if <code>figures[0] = 'E'</code> then the shape added to the grid will look like this:\r\n<pre><code class='language-text'>[[0, 1, 0],\r\n[1, 1, 1]]</code></pre></li>\r\n    <li>Place the figures on the grid in the order they appear in <code>figures</code>. The figures must not overlap any other figures that have already been placed, and they may not be rotated.</li>\r\n    <li>Of all the available locations, choose the one with the lowest row index.</li>\r\n    <li>If there are multiple possible locations with the lowest row index, choose the one among them with the lowest column index.</li>\r\n    <li>It's guaranteed that all figures will fit on the grid.</li>\r\n</ul>\r\n<p>Return a matrix of integers representing the grid paper after all the figures have been drawn.</p>\r\n<p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(n * m * figures.length)</code> will fit within the execution time limit.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 4, m = 4, figures = ['D', 'B', 'A', 'C']\r\nOutput: [[2, 2, 2, 2],\r\n         [1, 1, 3, 0],\r\n         [1, 4, 4, 0],\r\n         [0, 4, 4, 0]]</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>Execution time limit: 0.5 seconds (cpp)</li>\r\n    <li>Memory limit: 1 GB</li>\r\n    <li><strong>Input:</strong> integer <code>n</code>\r\n        <ul>\r\n            <li>An integer representing the height of the grid.</li>\r\n            <li><code>2 <= n <= 50</code></li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Input:</strong> integer <code>m</code>\r\n        <ul>\r\n            <li>An integer representing the width of the grid.</li>\r\n            <li><code>2 <= m <= 50</code></li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Input:</strong> array.char <code>figures</code>\r\n        <ul>\r\n            <li>An array of letters representing figures to be drawn on the paper.</li>\r\n            <li><code>1 <= figures.length <= 500</code></li>\r\n            <li><code>'A' <= figures[i] <= 'E'</code></li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Output:</strong> array.array.integer\r\n        <ul>\r\n            <li>Return the resulting paper, after drawing all figures on it.</li>\r\n        </ul>\r\n    </li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Trade desk_6aug",
        "company_id": 368
    }
]