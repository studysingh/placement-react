[
    {
        "id": 1522,
        "title": "Minimum Task Transfers",
        "problem_statement": "<h1>Minimum Task Transfers</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In a post-apocalyptic world, Eren, Mikasa, and Armin are part of an elite team tasked with reclaiming lost territories. The missions they undertake are crucial for humanity's survival, and they have developed a very distinct strategy for handling them. Each mission consists of n different tasks, and they prefer to split these tasks in a particular way to ensure success:</p>\r\n<ul>\r\n    <li>Eren always takes the initial tasks, dealing with the more straightforward challenges from 1 to i.</li>\r\n    <li>Armin, the strategist, steps in next, taking charge of the middle tasks, covering everything from i to j.</li>\r\n    <li>Mikasa, the team's strongest member, handles the toughest tasks towards the end, from j to n.</li>\r\n</ul>\r\n<p>Their teamwork is smooth when they handle missions this way: Eren leading, Armin holding the middle, and Mikasa finishing strong, with i &lt;= j &lt;= n. However, after one particularly chaotic mission, the tasks got mixed up, and each of them ended up with random tasks, out of their usual order.</p>\r\n<p>Now, the team needs to redistribute the tasks among themselves so that they fall back into their preferred pattern: Eren at the front, Armin in the middle, and Mikasa at the end. During each move, only one of them can hand over a task to another, which complicates things. They need to minimize the number of times they exchange tasks to get back to their ideal configuration.</p>\r\n<p>Your job is to help them figure out the minimum number of task transfers required to make sure the tasks are redistributed according to their plan, though some of them might end up with fewer or no tasks by the time the redistribution is complete.</p>\r\n\r\n<p><strong>Input Format</strong></p>\r\n<p>First line contains three integers: k1, k2 &amp; k3 - number of problems initially taken by Eren, Armin &amp; Mikasa initially</p>\r\n<p>Second line contains k1 integers - problems taken by Eren initially</p>\r\n<p>Third line contains k2 integers - problems taken by Armin initially</p>\r\n<p>Fourth line contains k3 integers - problems taken by Mikasa initially</p>\r\n\r\n<p><strong>Output Format</strong></p>\r\n<p>Print one integer - minimum number of moves required to redistribute the problems according to the condition!</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2 1 2\r\n3 1\r\n4\r\n2 5\r\nOutput:\r\n1</code></pre>\r\n<p><strong>Explanation:</strong> In this example, Mikasa will give the problem number 2 to Eren. So Eren solves problem 1, 2, 3; Armin solves 4 &amp; Mikasa solves 5!</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= k1, k2, k3 &lt;= 2 * 10^5, k1 + k2 + k3 &lt;= 2 * 10^5</li>\r\n    <li>Problems will be numbered from 1 to n where n = k1 + k2 + k3</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Titan_27sep",
        "company_id": 532
    },
    {
        "id": 1523,
        "title": "Drone Path Queries",
        "problem_statement": "<h1>Drone Path Queries</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There is a delivery drone in an infinite 2-dimensional city grid. Initially, the drone starts at the coordinates (0,0). The drone follows a series of movement commands:</p>\r\n<ul>\r\n    <li>N — move from point (a,b) to (a,b+1) (north)</li>\r\n    <li>S — move from point (a,b) to (a,b-1) (south)</li>\r\n    <li>W — move from point (a,b) to (a-1,b) (west)</li>\r\n    <li>E — move from point (a,b) to (a+1,b) (east)</li>\r\n</ul>\r\n<p>You are given a sequence of n commands denoted by s. You have to answer m independent queries.</p>\r\n<p>In each query, you are given four integers a, b, l and r. The drone will follow the sequence of commands s but with the commands from l to r reversed (ie, the drone will execute commands in the order: s1, s2, ..., sl-1, sr, sr-1, ..., sl+1, sl, sr+1, ..., sn) You have to determine if the drone reaches the coordinate (a, b) at any point during its path.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line contains two integers n and m - the no of commands and the no of queries respectively.</p>\r\n<p>The second line contains a string s of length n, consisting of characters N, S, E, and W.</p>\r\n<p>Then m lines representing the queries follow. Each line contains four integers a, b, l and r.</p>\r\n\r\n<h2>Output</h2>\r\n<p>For each query print Y if the drone reaches the point (a, b) while executing the command described by s, but with the commands from l to r reversed. Otherwise print N.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= n, m &lt;= 2*10^5</code></li>\r\n    <li><code>-n &lt;= a, b &lt;= n</code></li>\r\n    <li><code>1 &lt;= l, r &lt;= n</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n8 3\r\nESWWNNEN\r\n-1 2 1 7\r\n0 0 3 4\r\n0 1 7 8\r\nOutput:\r\nY\r\nY\r\nN</code></pre>\r\n<p><strong>Explanation:</strong> For 1st query.</p>\r\n<p>The new sequence of commands becomes: ENNWWWSEN</p>\r\n<p>The drone moves as follows:</p>\r\n<p>(0,0) -> (1,0) -> (1,1) -> (1,2) -> (0,2) -> (-1,2) -> (-1,1) -> (0,1) -> (0,2)</p>\r\n<p>Since it reaches (-1, 2). Hence, the output is Y.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Titan_27sep",
        "company_id": 532
    },
    {
        "id": 1524,
        "title": "Code Mania",
        "problem_statement": "<h1>Code Mania</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>\"Code Mania\" is a very famous coding challenge. Radha is responsible for sending our country's team to this contest. She is planning to send 2 people to the Contest. She wants them to be from different states of our country. She has a list of size p consisting of pairs of programmer ids. Each pair of programmers are from the same state.</p>\r\n<p>Please note that if programmers with id 1 and id 2 are from the same state and programmers with id 1 and id 5 are from the same state, then programmers with id 2 and id 5 will also be from the same state.</p>\r\n<p>If she has N programmer ids, then determine how many pairs of programmers from different states she can choose from.</p>\r\n\r\n<p><strong>Input Format</strong></p>\r\n<p>The first line contains two integers N and p, the number of programmers, and the number of pairs.</p>\r\n<p>Each of the next p lines contains 2 space-separated integers denoting programmers' ids of two who share the same state.</p>\r\n\r\n<p><strong>Output Format</strong></p>\r\n<p>Print the number of valid pairs.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5 3\r\n1 2\r\n3 4\r\n1 5\r\nOutput:\r\n6</code></pre>\r\n<p><strong>Explanation:</strong> Persons numbered [1,2,5] belong to one state, and those numbered [3,4] belong to another. Radha has 6 ways of choosing a pair:</p>\r\n<p>[1,3],[1,4],[2,3],[2,4],[5,3],[5,4]</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= N &lt;= 10<sup>5</sup></li>\r\n    <li>1 &lt;= p &lt;= 10<sup>4</sup></li>\r\n    <li>1 &lt;= id &lt;= N</li>\r\n</ul>\r\n\r\n<pre><code class='language-javascript'>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\nint numberOfWays(int n,int p, vector&lt;vector&lt;int&gt;&gt; programmers) {\r\n// Write your code here\r\n}\r\nint main() {\r\n    int n,p;\r\n    cin&gt;&gt;n&gt;&gt;p;\r\n    vector&lt;vector&lt;int&gt;&gt; programmers;\r\n    for (int i = 0; i &lt; p; i++) {\r\n        vector&lt;int&gt; temp(2);\r\n        cin&gt;&gt;temp[0]&gt;&gt;temp[1];\r\n        programmers.push_back(temp);\r\n    }\r\n    int result = numberOfWays(n,p, programmers);\r\n    cout &lt;&lt; result &lt;&lt; \"\\n\";\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Titan_27sep",
        "company_id": 532
    }
]