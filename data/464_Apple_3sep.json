[
    {
        "id": 1334,
        "title": "Minimum Global Latency",
        "problem_statement": "```html\r\n<h1>Minimum Global Latency</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>As the network administrator in your company, you wish to divide the data centers into optimal local regions.</p>\r\n<p>The data centers are represented by a connected graph, whose edges are bidirectional and weighted. An edge represents a network connection between two data centers. The edge weight corresponds to the latency of the connection.</p>\r\n<p>The global latency of a network is the biggest weight of its edges.</p>\r\n<p>You can remove any connections in the initial network, dividing it into isolated sub-networks, as long as the number of sub-networks does not exceed the parameter <code>k</code>.</p>\r\n<p>The global latency of a set of sub-networks is the biggest weight of all the edges of all the sub-networks.</p>\r\n<p>You must return the minimum possible value of the global latency that can be obtained, when removing connections while respecting the above constraint.</p>\r\n<p>The parameter <code>nb_nodes</code> corresponds to the total number of data centers. They are identified by an integer between 0 and <code>nb_nodes-1</code>.</p>\r\n<p>The graph is described by the parameter <code>network</code>, which is a vector. Each of its elements describes an edge and is also a vector, containing three integers:</p>\r\n<ul>\r\n    <li>the identifier of the first data center of the edge.</li>\r\n    <li>the identifier of the second data center of the edge.</li>\r\n    <li>the weight of the edge.</li>\r\n</ul>\r\n<p>When a sub-network contains only one data center, its latency is 0 by default.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: nb_nodes = 3, network = [[0, 1, 5], [1, 2, 8], [0, 2, 3]], k = 2\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong>\r\nThe initial graph has 3 nodes and 3 edges. We are allowed to have at most 2 sub-networks.\r\nIf we remove the edges with weights 8 and 5, we are left with the edge [0, 2] which has a weight of 3.\r\nThis results in two sub-networks: {0, 2} and {1}. The number of sub-networks is 2, which is less than or equal to k.\r\nThe latency of sub-network {0, 2} is 3. The latency of sub-network {1} is 0.\r\nThe global latency for this set of sub-networks is max(3, 0) = 3.\r\nIt's not possible to achieve a smaller global latency. For example, to get a latency of 0, we would need to remove all edges, resulting in 3 sub-networks, which violates the k=2 constraint.\r\n</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>It is guaranteed that the graph is initially connected.</li>\r\n    <li><code>1 &lt;= nb_nodes &lt;= 1000</code></li>\r\n    <li><code>length(network) &lt;= 1500</code></li>\r\n    <li><code>k &lt;= 1000</code></li>\r\n    <li>The weights are between 1 and 250.</li>\r\n    <li>There are never edges connecting a data center to itself.</li>\r\n    <li>There are never two edges connecting the same two data centers.</li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Apple_3sep",
        "company_id": 464
    },
    {
        "id": 1335,
        "title": "Maximum Profit from Chain Cutting",
        "problem_statement": "```html\r\n<h1>Maximum Profit from Chain Cutting</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You're a jeweller working with a chain of precious metal of a specific length. The total length of the chain is determined by the length of the input array.</p>\r\n<p>Each segment of the chain, based on its length, has a specific value. You are given a list of values where <code>arr[i]</code> is the value of a chain segment of length <code>i+1</code>.</p>\r\n<p>To maximize the profit, you can decide to cut the chain into smaller pieces and sell each segment individually at its respective value. Your task is to determine the highest value you can obtain by choosing an optimal way to cut (or not cut) the chain.</p>\r\n<p><strong>Note:</strong> Index 0 indicates a length of 1 and so on.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: arr = [3, 5, 8, 9, 10, 17, 17, 20]\r\nOutput: 24</code></pre>\r\n<p><strong>Explanation:</strong> The total length of the chain is 8 (the size of the array). The maximum obtainable value is 24 by cutting the chain into 8 pieces of length 1. The price for a piece of length 1 is <code>arr[0] = 3</code>. Therefore, the total profit is 8 * 3 = 24.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= arr.length &lt;= 10^4</li>\r\n    <li>1 &lt;= arr[i] &lt;= 1000</li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Apple_3sep",
        "company_id": 464
    }
]