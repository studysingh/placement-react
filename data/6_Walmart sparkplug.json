[
    {
        "id": 13,
        "title": "Reorder with priority",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Reorder With Priority</h2>\n\n<div class=\"problem-description\">\n        <p>John has a list of N system requests to be processed based on their priority. Each request has three fields: Priority Number (PN), Process Number (PR), and Process Request ID (ID). The system processes requests in this order:</p>\n\n<ol>\n            <li>More set bits (1s) in the Priority Number.</li>\n            <li>If equal, the larger Priority Number.</li>\n            <li>If still equal, more set bits in the Process Number.</li>\n            <li>If still equal, the larger Process Number.</li>\n            <li>If all the above are equal, the request appearing first in the list is processed, and others with the same values are rejected.</li>\n        </ol>\n\n<p>Your task is to return the \"Reorder\" which is the list of Process Request IDs in the order they are processed by the system.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains an integer N which represents the numbers of request.</p>\n        <p>The next line N contain three space separated integer representing Priority Number (PN), Process Number (PR), and Process Request ID (ID).</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print the N space separated integers which represents Process Request IDs in the order they are processed by the system.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 10<sup>2</sup></li>\n            <li>-10<sup>5</sup> ≤ PR, PN ≤ 10<sup>5</sup></li>\n            <li>1 ≤ ID ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Testcase 1</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n3\n1 1 1\n1 1 2\n1 3 3</pre>\n            <pre class=\"output\">Output:\n3 1</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p><strong>Request 1:</strong><br>\n                Priority Number (PN) = 1 (binary: 1) has 1 set bit.<br>\n                Process Number (PR) = 1 (binary: 1) has 1 set bit.<br>\n                Process Request ID (ID) = 1.</p>\n\n<p><strong>Request 2:</strong><br>\n                Priority Number (PN) = 1 (binary: 1) has 1 set bit.<br>\n                Process Number (PR) = 1 (binary: 1) has 1 set bit.<br>\n                Process Request ID (ID) = 2.</p>\n\n<p><strong>Request 3:</strong><br>\n                Priority Number (PN) = 1 (binary: 1) has 1 set bit.<br>\n                Process Number (PR) = 3 (binary: 11) has 2 set bits.<br>\n                Process Request ID (ID) = 3.</p>\n\n<p><strong>Processing Order:</strong><br>\n                All requests have the same PN, with 1 set bit.<br>\n                Since PR is considered next, Request 3 is processed first because its PR has 2 set bits.<br>\n                Request 1 and Request 2 have the same PR and PN, but since they are duplicates, only the first one (Request 1) is processed.<br>\n                Thus, the Process Request IDs are ordered as 3 1.</p>\n            </div>\n        </div>\n\n<h3>Sample Testcase 2</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n3\n7 1 1\n1 1 2\n3 3 3</pre>\n            <pre class=\"output\">Output:\n1 3 2</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p><strong>Request 1:</strong><br>\n                Priority Number (PN) = 7 (binary: 111) has 3 set bits.<br>\n                Process Number (PR) = 1 (binary: 1) has 1 set bit.<br>\n                Process Request ID (ID) = 1.</p>\n\n<p><strong>Processing Order:</strong><br>\n                Request 1 has the most set bits in PN (3 set bits), so it is processed first.<br>\n                Request 3 comes next because it has 2 set bits in PN.<br>\n                Request 2 is processed last because it has the fewest set bits in PN.<br>\n                Thus, the Process Request IDs are ordered as 1 3 2.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OA_questions/tree/main/walmart%20%20sparkplug/Reorder%20with%20priority",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 14,
        "title": "Maze Escape with limited resources ",
        "problem_statement": "<div class=\"problem-container\">\n    <h1>Maze Escape with Limited Resources</h1>\n\n<div class=\"problem-description\">\n        <p>You are given a maze represented by a 2D character array of size rows × cols, where each cell represents:</p>\n        <ul>\n            <li>Empty space as '-'</li>\n            <li>Wall as '#'</li>\n            <li>Key as 'K'</li>\n            <li>Starting position as 'S' (Sx, Sy)</li>\n            <li>Ending position as 'E' (Ex, Ey)</li>\n        </ul>\n\n<p>You are provided with a certain number of keys and torches.</p>\n        <p>When encountering a wall ('#'), you need to use a torch to enter that cell.</p>\n        <p>Your objective is to traverse from the starting position ('S') to the ending position ('E'), collecting the required number of keys and using only the given number of torches.</p>\n        <p>Return the count of all valid paths from (Sx, Sy) to (Ex, Ey), or -1 if no valid path is found.</p>\n        <p class=\"note\">Note: The valid moves within the 2D array are: UP, DOWN, LEFT, and RIGHT.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>First line: Two space-separated integers, rows and cols, indicating the number of rows and columns respectively.</li>\n            <li>Second line: Two space-separated integers, Sx and Sy, representing the coordinates of the starting position.</li>\n            <li>Third line: Two space-separated integers, Ex and Ey, representing the coordinates of the exit position.</li>\n            <li>Fourth line: A single integer, torches, indicating the number of available torches.</li>\n            <li>Fifth line: A single integer, requiredKeys, indicating the number of required keys.</li>\n            <li>Next 6 + rows - 1 lines: Each line contains a row of the maze represented as a single string without spaces.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print an integer representing count of all escape paths or -1 if no valid path exists.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ rows ≤ 8</li>\n            <li>1 ≤ cols ≤ 8</li>\n            <li>Characters in the maze can only be '-', '#', 'K', 'E', or 'S'</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Case 1</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n4 4\n0 0\n2 3\n1\n1\nS-#K\n-#--\n#K#E\n----</pre>\n            <pre class=\"output\">Output:\n4</pre>\n            <div class=\"explanation\">\n                <p>We are given starting position as (0,0) and can traverse in all 4 directions after entering a valid cell.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 15,
        "title": "Git merge",
        "problem_statement": "<div class=\"problem-container\">\n    <h2>Git Merge</h2>\n\n<div class=\"problem-description\">\n        <p>You are given two lists of commits from different branches of a version control system. Each commit in the lists consists of a commit ID, a timestamp, and a status indicating whether the commit was successful (status 1) or unsuccessful (status 0). Your task is to merge the commits from both lists into a single list, ensuring that:</p>\n        <ol>\n            <li>Only successful commits are included in the merged list.</li>\n            <li>Commits should be sorted according to their timestamp.</li>\n            <li>If two commits have the same timestamp, commits from the first list should appear first.</li>\n        </ol>\n        <p>Your task is to merge the commits according to the rules above, and print the commit IDs of the merged commits in sorted order based on their timestamps.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of the input contains an integer N1 denoting the number of commits in the first list.</li>\n            <li>The next N1 lines each contain a string commitID, an integer timestamp, and an integer status, separated by spaces.</li>\n            <li>The next line of the input contains an integer N2 denoting the number of commits in the second list.</li>\n            <li>The next N2 lines each contain a string commitID, an integer timestamp, and an integer status, separated by spaces.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print the commit IDs of merged commits one per line, in sorted order based on timestamp.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ (N1, N2) ≤ 10<sup>2</sup></li>\n            <li>1 ≤ Timestamps ≤ 10<sup>3</sup></li>\n            <li>1 ≤ |Commit IDs| < 10<sup>3</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Case 1</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n3\nb8a5gt 1000 1\ncd54yt 1500 1\nkl35nv 1500 0\n2\nv4ui6b 1000 1\npw2bud 500 1</pre>\n            <pre class=\"output\">Output:\npw2bud\nb8a5gt\nv4ui6b\ncd54yt</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>In the lists provided above, we observe one failed commit with ID kl35nv. This commit is not considered in the final list of commits.</p>\n                <p>The remaining commits are sorted based on their timestamps:</p>\n                <ul>\n                    <li>pw2bud (500) comes before b8a5gt and v4ui6b (1000)</li>\n                    <li>b8a5gt and v4ui6b precede cd54yt (1500)</li>\n                </ul>\n                <p>Between b8a5gt and v4ui6b, although they share similar timestamps, b8a5gt originates from the first list, so it is placed before v4ui6b.</p>\n            </div>\n        </div>\n\n<h3>Sample Test Case 2</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n4\nrw1ts6 900 1\ncc9n7r 1200 1\nkp0zw3 700 0\ny5bnm8 2000 1\n4\nrzq3dx 700 1\nu521nc 1200 0\nb8po89 4000 1\nrw6cvz 800 1</pre>\n            <pre class=\"output\">Output:\nrzq3dx\nrw6cvz\nrw1ts6\ncc9n7r\ny5bnm8\nb8po89</pre>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 16,
        "title": "Building a structure ",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Building a Structure</h2>\n\n<div class=\"problem-description\">\n        <p>You need to construct a structure using various types of building blocks. Each block type is represented by a specific integer value, has some weight associated with them, and each block available in limited quantity.</p>\n        <p>Your objective is to find the minimum number of blocks required to exactly achieve a specified target value for the structure. Additionally, the total weight of the blocks used must not exceed a given weight capacity.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains a single integer N, representing the number of different types of building blocks.</li>\n            <li>The second line contains N space-separated integers, where the i-th integer represents the value of the i-th block.</li>\n            <li>The third line contains N space-separated integers, where the i-th integer represents the maximum quantity of the i-th block that can be used.</li>\n            <li>The fourth line contains N space-separated integers, where the i-th integer represents the weight of the i-th block.</li>\n            <li>The fifth line contains a single integer target, representing the target value needed to complete the structure.</li>\n            <li>The sixth line contains a single integer maxWeight, representing the maximum total weight of the blocks used.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print a single integer representing the minimum number of blocks required to reach the target value without exceeding the maximum weight.</p>\n        <p>If it is not possible to achieve the target, print -1.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 50</li>\n            <li>1 ≤ value[i] ≤ 100</li>\n            <li>0 ≤ maxQuantity[i] ≤ 100</li>\n            <li>1 ≤ weight[i] ≤ 50</li>\n            <li>1 ≤ target ≤ 10³</li>\n            <li>1 ≤ maxWeight ≤ 10³</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Test Case 1:</h4>\n            <pre class=\"input\">Input:\n3\n2 4 6\n3 1 1\n2 4 6\n8\n6</pre>\n            <pre class=\"output\">Output:\n-1</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>To reach the target value of 8 without exceeding the weight limit of 6:</p>\n                <ul>\n                    <li>Consider block with value 6:\n                        <ul>\n                            <li>Using this block once gives: Value: 6 and Weight: 6</li>\n                            <li>Remaining value needed: 8 - 6 = 2</li>\n                            <li>However, adding any other block would exceed the weight limit of 6.</li>\n                        </ul>\n                    </li>\n                    <li>Consider block with value 4:\n                        <ul>\n                            <li>Using this block once gives: Value: 4 and Weight: 4</li>\n                            <li>Remaining value needed: 8 - 4 = 4</li>\n                            <li>Using any other block to sum up to the remaining value will exceed the weight limit of 6.</li>\n                        </ul>\n                    </li>\n                    <li>Consider block with value 2:\n                        <ul>\n                            <li>Using up to 3 of these blocks gives: Value: 2+2+2 = 6 and Weight",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 17,
        "title": "Collecting Stones",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Collecting Stones</h2>\n\n<div class=\"problem-description\">\n        <p>Alex has a collection of n stones with ai numbers engraved on each stone. One day, he created his own game called \"good collection\". In this game, a collection of stones is considered good if the difference between the highest and the lowest numbers engraved on the stone is equal to the total number of stones in the collection.</p>\n        <p>Given the list of 'n' stones with distinct numbers engraved on each one of them, help Alex determine how many good collections he can make from the given list.</p>\n        <p class=\"note\"><strong>Note:</strong> A collection of stones is created by removing some or none of the stones from the list of stones.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of input contains an integer 'n' representing the total number of stones in the list.</li>\n            <li>The second line of input contains 'n' space separated integers representing the list of stones ai.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print the maximum number of good collections that can be formed from the given list of stones.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ n ≤ 10<sup>6</sup></li>\n            <li>1 ≤ ai ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Testcase 1</h4>\n            <pre class=\"input\">Input:\n3\n3 1 2</pre>\n            <pre class=\"output\">Output:\n1</pre>\n            <div class=\"explanation\">\n                <p>There will be 1 good collection that can be formed from the given list of stones.</p>\n                <p>Collection [3,1]: max([3,1])-min([3,1])= 3-1= 2 = total number of stones in the collection. Therefore, there is only one good collection.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Testcase 2</h4>\n            <pre class=\"input\">Input:\n2\n1 2</pre>\n            <pre class=\"output\">Output:\n0</",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 18,
        "title": "Clash of Cities",
        "problem_statement": "<div class=\"problem-container\">\n    <h1 class=\"problem-title\">Clash of Cities</h1>\n\n<div class=\"problem-description\">\n        <h3>Problem Statement</h3>\n        <p>In the game \"Clash of Cities,\" John aims to conquer cities numbered from 0 to N-1, starting from city I. The goal is to determine the minimum distance John must cover to conquer every city. After each conquest, John must return to his initial city to regroup. However, it's possible that not all cities can be conquered or that some cities are unreachable.</p>\n        <p>Total cities N, initial city I, and the total number of paths M.<br>\n        Each path specifies the starting city, destination city, and the distance between them.<br>\n        The minimum total distance John needs to cover to conquer every city, or -1 if it's not possible.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains three integers where N is the total number of cities, I is the city that John holds and M is the total ways between cities.</p>\n        <p>The next M lines contains X,Y,D where X, Y denotes there is a way between X and Y with distance D.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Display single integer minimum total distance John has to cover if he is able to conquer every city otherwise -1.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 100</li>\n            <li>0 ≤ I ≤ N-1</li>\n            <li>0 ≤ M ≤ 10^4</li>\n            <li>0 ≤ X,Y ≤ N-1</li>\n            <li>1 ≤ D ≤ 10^3</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Testcase 1:</h4>\n            <pre class=\"input\">Input:\n100 0 0</pre>\n            <pre class=\"output\">Output:\n-1</pre>\n            <div class=\"explanation\">\n                <p>There are total 100 city numbered from 0 to 99.<br>\n                John is currently at city number: 0<br>\n                But we can see that there is no way from any city to any city. So, John can't go to anywhere. Hence he can't conquer every cities.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Testcase 2:</h4>\n            <pre class=\"input\">Input:\n7 2 7\n0 1 20\n1 2 22\n2 4 10\n2 5 20\n2 6 40\n0 6 35\n3 6 70</pre>\n            <pre class=\"output\">Output:\n378</pre>\n            <div class=\"explanation\">\n                <table class=\"conquest-table\">\n                    <tr>\n                        <th>Conquer City</th>\n                        <th>Round Trip Distance</th>\n                        <th>Cumulative</th>\n                    </tr>\n                    <tr>\n                        <td>5</td>\n                        <td>40 (20 each way)</td>\n                        <td>40</td>\n                    </tr>\n                    <tr>\n                        <td>4</td>\n                        <td>20 (10 each way)</td>\n                        <td>60</td>\n                    </tr>\n                    <tr>\n                        <td>1</td>\n                        <td>44 (22 each way)</td>\n                        <td>104</td>\n                    </tr>\n                    <tr>\n                        <td>0</td>\n                        <td>84 (22 to 1, 20 to 0, return same way)</td>\n                        <td>188</td>\n                    </tr>\n                    <tr>\n                        <td>6</td>\n                        <td>80 (40 each way)</td>\n                        <td>268</td>\n                    </tr>\n                </table>\n                <p>Conquer city 3:<br>\n                One way to 6: 40 (via path to 6)<br>\n                One way from 6 to 3: 70<br>\n                One way trip to 3: 70 + 40 = 110<br>\n                Cumulative: 268 + 110 = 378</p>\n                <p>Thus, the final total distance traveled to conquer all cities is 378.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 19,
        "title": "Optimized Postfix Evaluation",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Optimized Postfix Evaluation</h2>\n\n<div class=\"problem-description\">\n        <p>You're given a mathematical expression represented as a string in postfix notation. The expression contains operands (single-digit numbers) and operators (+, -, *, /). You need to evaluate the expression while considering an additional cost associated with each operation. You also have the option to \"optimize\" any single operation exactly once at a fixed cost, reducing the cost of that operation to zero and replacing it with the optimization cost.</p>\n\n<div class=\"operation-costs\">\n            <ul>\n                <li>Addition (+): Cost <var>a</var></li>\n                <li>Subtraction (-): Cost <var>b</var></li>\n                <li>Multiplication (*): Cost <var>c</var></li>\n                <li>Division (/): Cost <var>d</var></li>\n                <li>Optimization cost: Cost <var>e</var> (the fixed cost to reduce any single operation's cost to zero and replacing it with the cost <var>e</var>)</li>\n            </ul>\n            <p class=\"note\">(where <var>a</var>, <var>b</var>, <var>c</var>, <var>d</var>, and <var>e</var> are positive integers)</p>\n        </div>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains a string representing the postfix expression.</p>\n        <p>The second line contains five space-separated integers representing the costs <var>a</var>, <var>b</var>, <var>c</var>, <var>d</var>, and <var>e</var>.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print two space-separated integers which represent the minimum total cost required to evaluate the expression and the result of the evaluated postfix expression.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ length(postfix exp.) ≤ 10<sup>2</sup></li>\n            <li>1 ≤ <var>a</var>,<var>b</var>,<var>c</var>,<var>d</var>,<var>e</var> ≤ 10<sup>2</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Testcase 1</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n34+2*7/\n5 6 7 8 4</pre>\n            <pre class=\"output\">Output:\n16 2</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>The postfix expression 34+2*7/ can be evaluated as follows:</p>\n                <ol>\n                    <li>3 + 4; (Cost = 5, no optimization, Result = 7)</li>\n                    <li>(result of previous step = 7) * 2; (Cost = 7, no optimization, Result = 14)</li>\n                    <li>(result of previous step = 14) / 7; (Cost = 4, optimized, originally 8, Result = 2)</li>\n                </ol>\n                <p>Total cost = 5 + 7 + 4 (optimized) = 16.</p>\n                <p>Result of postfix expression = 2.</p>\n            </div>\n        </div>\n\n<h3>Sample Testcase 2</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n563*-4*\n1 2 3 4 1</pre>\n            <pre class=\"output\">Output:\n6 -52</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>The postfix expression 563*-4* can be evaluated as follows:</p>\n                <ol>\n                    <li>3 * 6; (Cost = 1, optimized, originally 3, Result = 18)</li>\n                    <li>5 - (result of previous step = 18); (Cost = 2, no optimization, Result = -13)</li>\n                    <li>(result of previous step = -13) * 4; (Cost = 3, no optimization as it can be done only once, Result = -52)</li>\n                </ol>\n                <p>Total cost = 1 + 2 + 3 = 6.</p>\n                <p>Result of postfix expression = -52.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 20,
        "title": "SandwichString",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">SandwichString</h2>\n\n<div class=\"problem-description\">\n        <p>Given a string S. Your task is to determine the number of \"sandwich substrings\" found in S. A \"sandwich substring\" must meet the following criteria:</p>\n        <ol>\n            <li>The substring begins and ends with the same character.</li>\n            <li>The structure of the middle part must satisfy:\n                <ul>\n                    <li>If the length of the substring is odd, the exact middle character is a vowel.</li>\n                    <li>If the length of the substring is even, the two middle characters are both vowels.</li>\n                </ul>\n            </li>\n            <li>All characters between the outermost characters and the middle character(s) (if any) must be consonants.</li>\n            <li>The minimum length of a sandwich substring is 3.</li>\n        </ol>\n        <p class=\"note\">Note: The string consists only of lowercase letters from 'a' to 'z'.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains an integer N representing the length of string.</p>\n        <p>The second line contains string S of length N.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print a single integer representing the number of \"sandwich substrings\" found in the given string.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>3≤ N ≤ 25</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Testcase 1:</h4>\n            <pre class=\"input\">Input:\n10\nabcdcefgea</pre>\n            <pre class=\"output\">Output:\n1</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>Possible substring that starts and ends with the same character in String s are: abca, abcdcefgea, cdc</p>\n                <ol>\n                    <li>Checking substring: abca\n                        <br>The length of substring is 4 and middle character i is vowel and other than substring 2 same character and middle character, all other character is are consonants.</li>\n                    <li>Checking substring: abcdcefgea\n                        <br>The length of substring is 10 but middle character is vowel but is not vowel.</li>\n                    <li>Checking substring: adgfea\n                        <br>The length of substring is 6 but middle character g and f, are not vowels.</li>\n                </ol>\n                <p>Number of valid sandwich substrings: 1</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Testcase 2:</h4>\n            <pre class=\"input\">Input:\n6\nbanana</pre>\n            <pre class=\"output\">Output:\n2</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>Possible substring that starts and ends with the same character in String s are: ana, anana, nan, ana</p>\n                <ol>\n                    <li>Checking substring: ana\n                        <br>The length of substring is 3 and the middle character n is not vowel.</li>\n                    <li>Checking substring: anana (valid)\n                        <br>The length of substring is 5 and the middle character a is vowel and other letters are consonants.</li>\n                    <li>Checking substring: nan (valid)\n                        <br>The length of substring is 3 and the middle character a is a vowel.</li>\n                </ol>\n                <p>Valid sandwich substrings found: anana, nan</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 21,
        "title": "Thief and Police",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Thief and Police</h2>\n\n<div class=\"problem-description\">\n        <p>There are N buildings numbered from 0 to N-1. Among them there is a thief hiding in one of the building and there is a police in one of the building. You have to find if it's possible to catch the thief.</p>\n\n<p>Thief can only escape from the police if:</p>\n        <ul>\n            <li>Thief is a part of a cycle length 4 or more</li>\n            <li>If there is no path from a police to the thief</li>\n            <li>If there is a cycle in the graph with a length of 4 or more and thief can reach the cycle quicker than a police.</li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains four space-separated integers N, T, P and M denoting:</p>\n        <ul>\n            <li>N: the number of buildings</li>\n            <li>T: the starting position of thief</li>\n            <li>P: the starting position of police</li>\n            <li>M: the number of connections between buildings</li>\n        </ul>\n        <p>The next M lines contain X and Y where X and Y defines there is connection between building X and Y.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>If police is able to catch the thief output \"YES\", Otherwise \"NO\".</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>0 ≤ X, Y < N</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Case 1</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n4 0 2 4\n0 1\n1 2\n2 3\n3 0</pre>\n            <pre class=\"output\">Output:\nNO</pre>\n            <div class=\"explanation\">\n                <p>The graph forms a cycle of length 4 where:</p>\n                <ul>\n                    <li>Buildings are connected in the order: 0-1-2-3-0</li>\n                    <li>Thief is at position 0</li>\n                    <li>Police is at position 2</li>\n                </ul>\n                <div class=\"graph-visualization\">\n                    <!-- Graph visualization can be added here using SVG or Canvas -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 26,
        "title": "Chemical Combination Analysis",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <h2>Chemical Combination Analysis</h2>\n    </div>\n\n<div class=\"problem-description\">\n        <p>Dr. Evelyn aims to prepare an exact chemical solution with a mass of M grams by choosing from N distinct chemical substances, each with a known mass W[i] in grams. Her goals are:</p>\n        <ol>\n            <li>Determine whether a subset of these substances can be selected such that their combined mass precisely equals M grams.</li>\n            <li>From any subset whose total mass equals M grams, identify all possible smaller masses that can be achieved by forming different combinations from the same substances.</li>\n        </ol>\n        <p class=\"note\">Note: All mass values are positive integers, and it's guaranteed that at least one combination of substances has a total mass of M grams.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line consists of two integers N and M representing the number of accessible chemical substances and the required mass.</p>\n        <p>The second line contains N space-separated integers W[1], W[2],..., W[N] representing weight of the i-th chemical substance available.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>In the first line, print a positive integer representing the number of distinct values of T that can be formed.</p>\n        <p>On the second line, list all such distinct values of T in non-decreasing order, separated by spaces.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ M ≤ 500</li>\n            <li>1 ≤ W[i] ≤ 10^4</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Test Case 1</h4>\n            <pre class=\"input\">Input:\n4 4\n1 2 3 4</pre>\n            <pre class=\"output\">Output:\n4\n0 1 3 4</pre>\n            <div class=\"explanation\">\n                <p>Here she can take out combinations [1 3] and [4] for 4 grams. So she can use these combinations now to make solutions of 0, 1, 3 and 4 grams.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Test Case 2</h4>\n            <pre class=\"input\">Input:\n3 5\n3 1 2</pre>\n            <pre class=\"output\">Output:\n4\n0 2 3 5</pre>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 29,
        "title": "Water down",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Water Down</h2>\n\n<div class=\"problem-description\">\n        <p>You are operating a watering tractor on a farm with a row of plants, each having a specific water requirement represented by an array P. You also have a set of buckets, each with a certain amount of water, given in an array W. Your objective is to maximize the number of plants whose water requirements can be fully met.</p>\n\n<h4>Here's how the watering works:</h4>\n        <ul>\n            <li>Each bucket's entire water content must be used to water exactly 2 plants, even if one of them doesn't require any water</li>\n            <li>It gets empty irrespective of how much water it holds in the duration of time you take to move over 2 plants</li>\n            <li>You may select any two consecutive plants to water with each bucket, but you must follow the sequence of buckets in order</li>\n            <li>You cannot skip buckets, though you can skip plants if you're not using a bucket at that moment</li>\n            <li>There may be empty buckets with you</li>\n            <li>There also may be plants who do not need any water at all</li>\n            <li>If you reach the last plant, any remaining water from a bucket must be fully poured on that plant, as there are no further plants</li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of input contains two space-separated integers, N denotes the number of plants and M denotes the number of buckets</li>\n            <li>The second line of input contains N space-separated integers which denote the water need of each plant</li>\n            <li>The third line of input contains M space-separated integers which denote the water in each bucket you have</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print an integer which is the maximum number of plants you can satisfy water needs of.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N,M ≤ 10³</li>\n            <li>0 ≤ P[i],W[i] ≤ 10⁴</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Test Case 1:</h4>\n            <pre class=\"input\">Input:\n1 1\n1\n1</pre>\n            <pre class=\"output\">Output:\n1</pre>\n            <div class=\"explanation\">\n                <p>You can choose the first plant and water it satisfying its water needs. Since there is no plant after it, the tractor stops and you don't have to water another plant with the same bucket.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Test Case 2:</h4>\n            <pre class=\"input\">Input:\n5 3\n2 4 6 8 5\n5 6 7</pre>\n            <pre class=\"output\">Output:\n3</pre>\n            <div class=\"explanation\">\n                <p><strong>Bucket 1 (5 liters):</strong> Use the full 5 liters to satisfy Plant 1 fully. Since Plant 1 only needed 2 liters, 3 liters are left, which can be poured on Plant 2.</p>\n                <p><strong>Bucket 2 (6 liters):</strong> Pour 6 liters on Plant 3 (which needs 6 liters) and Plant 4 (which needs 8 liters). Use the 6 liters to fully satisfy Plant 3.</p>\n                <p><strong>Bucket 3 (7 liters):</strong> Pour the remaining 7 liters on Plant 5 (which needs 5 liters). Use the 7 liters to fully satisfy Plant 5.</p>\n                <p><strong>Plants fully satisfied so far: 3</strong></p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 30,
        "title": "Kingdom of Strings",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Kingdom of Strings</h2>\n\n<div class=\"problem-description\">\n        <p>In the Kingdom of Strings, King Lexicon has issued a challenge. Given a string S \n        of lowercase English characters, your task is to find the number of all possible \n        distinct, nonempty substrings (other than \"a\") that can be used to partition the \n        string S into segments, where each segment is either the substring or \"a\".</p>\n\n<p>For a substring to qualify:</p>\n        <ol>\n            <li>It must appear at least once in S.</li>\n            <li>It must not be equal to \"a\".</li>\n        </ol>\n\n<p>Additionally, for a substring to be considered valid, at least one segment in the \n        partition must be the chosen substring.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line contains a single string S of lowercase English characters.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print a single integer representing the number of valid substrings that satisfy \n        the given conditions.</p>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <pre class=\"input\">Input:\nbaba</pre>\n            <pre class=\"output\">Output:\n4</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>The valid substrings that can partition the string \"baba\" are:</p>\n                <ol>\n                    <li>\"b\": The string \"baba\" can be split as \"b\" + \"a\" + \"b\" + \"a\", where each segment is either \"b\" or \"a\".</li>\n                    <li>\"ba\": The string \"baba\" can be split as \"ba\" + \"ba\", where each segment is either \"ba\" or \"a\".</li>\n                    <li>\"bab\": The string \"baba\" can be split as \"bab\" + \"a\", where each segment is either \"bab\" or \"a\".</li>\n                    <li>\"baba\": The entire string is \"baba\" and can be split as just \"baba\", where each segment is either \"baba\" or \"a\".</li>\n                </ol>\n                <p>There are 4 distinct non-\"a\" substrings that satisfy the criteria, which are \"b\", \"ba\", \"bab\", and \"baba\".</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 31,
        "title": "Critical Infrastructure Nodes",
        "problem_statement": "<div class=\"problem-container\">\n    <h2>Critical Infrastructure Nodes</h2>\n\n<div class=\"problem-description\">\n        <p>The city's infrastructure is represented as a graph consisting of N nodes and M edges.</p>\n\n<p>Each node corresponds to a crucial infrastructure element, such as a power station or water supply point, and is assigned an importance score (S[i]).</p>\n        <p>Each edge indicates a connection between these infrastructure components.</p>\n\n<p>A node is considered 'critical' if it meets both of the following conditions:</p>\n        <ol>\n            <li>Removing the node would lead to the formation of an additional disconnected component in the graph</li>\n            <li>The node's importance score is higher than a specified threshold T</li>\n        </ol>\n\n<p>Your task is to identify and list all nodes that qualify as critical infrastructure based on these conditions.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains two integers N, M representing the number of nodes and the number of edges respectively.</li>\n            <li>The next line contains N elements separated by spaces, where each element denotes the importance score S[i] of node i.</li>\n            <li>The next M lines contains each pair of integers u and v representing the edges between nodes u and v.</li>\n            <li>The last line contains a single integer T representing the threshold.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Print all nodes that are critical infrastructure nodes, sorted in ascending order in new lines.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 10<sup>5</sup></li>\n            <li>1 ≤ M ≤ 10<sup>5</sup></li>\n            <li>0 ≤ S[i] ≤ 10<sup>3</sup></li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example 1</h3>\n        <div class=\"example\">\n            <div class=\"example-visualization\">\n                <img src=\"path/to/example1-graph.png\" alt=\"Graph with 5 nodes showing S values: S=2,2,3,3,3\" class=\"graph-image\">\n            </div>\n            <div class=\"explanation\">\n                <p>Threshold T = 2</p>\n                <p>In this graph, nodes 2 and 3 are critical because removing either of them would lead to a disconnected component AND all their importance scores (S=3) are greater than the threshold of 2.</p>\n            </div>\n        </div>\n\n<h3>Example 2</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\n6 7\n5 1 6 7 5 10\n1 2\n1 3\n2 4\n3 4\n1 5\n4 5\n5 6</pre>\n            <pre class=\"output\">Output:\n4</pre>\n            <div class=\"example-visualization\">\n                <img src=\"path/to/example2-graph.png\" alt=\"Graph with 6 nodes showing connections and S values\" class=\"graph-image\">\n            </div>\n            <div class=\"explanation\">\n                <p>Node 4 is critical because removing it disconnects nodes 3 and 5, leading to multiple disconnected components. Its importance score (6) is also greater than the threshold of 5.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1iDdExxDi3qq5QiWhD2ZVf0BGR2HYeAB_4kB9o8d3JxU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 45,
        "title": "Box in a box",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Box in a Box</h2>\n\n<div class=\"problem-description\">\n        <p>A person wants to gift a ring box to his friend. He has N boxes of different dimensions (L[i], B[i], H[i]). A box can fit into another box if its volume and all its dimensions (length, breadth, height) are greater than those of the other box.</p>\n\n<p>Determine the maximum number of boxes that can be nested one inside another and return the dimensions of the ring box that can fit the maximum number of other boxes. If multiple boxes can fit the same number of boxes, choose the one with the least volume. If volumes are identical, choose based on the smallest dimensions in the order of length, breadth, and height. Rotation of the boxes is not allowed.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of input contains an integer 'T' denoting the number of test cases.</li>\n            <li>The second line of each test case contains an integer 'N', representing the number of boxes.</li>\n            <li>The third line of the test case contains 'N' space-separated integers representing elements of the array 'L'.</li>\n            <li>The fourth line of the test case contains 'N' space-separated integers representing elements of the array 'B'.</li>\n            <li>The fifth line of the test case contains 'N' space-separated integers representing elements of the array 'H'.</li>\n        </ul>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>For each test case:</p>\n        <p>Print an integer representing maximum number of boxes that can be put one in another.</p>\n    </div>\n\n<div class=\"starter-code\">\n        <h3>Starter Code</h3>\n        <pre class=\"code-block cpp\">\n#include &lt;math.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint main() {\n    /* Enter your code here. Read input from STDIN. Print output to STDOUT */\n    return 0;\n}\n        </pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1qEdRT1fVLCJgXjXmr8XlkzQAtydaeWmOEBkifaR54lM/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 82,
        "title": "Botanical Garden Entry System",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <span class=\"problem-number\">26</span>\n        <h2>Botanical Garden Entry System</h2>\n    </div>\n\n<div class=\"problem-description\">\n        <p>In a botanical garden, people can book tickets online as well as at the ticket counter directly. Each ticket has a ticket number and a slot number. The security in-charge allows people to enter according to their ticket numbers. The people who have time slot 1 can enter the garden before anyone with time slot 2. If more than one person from the same time slot comes, they will be allowed to enter according to their ticket numbers.</p>\n        <p>Write a program to print the ticket numbers of N people in the order in which they will be allowed to enter the garden.</p>\n        <p>You must read the input from STDIN (standard input) and write the output to STDOUT (standard output). Do not print arbitrary strings while reading the input or printing the output as those would be counted as wrong answers.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 1000</li>\n            <li>The ticket numbers of people in any slot are unique.</li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains the number of tickets, N.</p>\n        <p>The next N lines contain two integers separated by single white space, where the first integer is the ticket number and the second integer is the time slot.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>The output contains N integers separated by a single white space, which are ticket numbers of the people in the order in which they are allowed to enter the garden.</p>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Example 1:</h4>\n            <pre class=\"input\">Input:\n7\n2 3\n4 1\n6 4\n5 2\n1 3\n7 3\n3 2</pre>\n            <pre class=\"output\">Output:\n4 3 5 1 2 7 6</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>N = 7</p>\n                <ul>\n                    <li>There is only one person from time slot 1 and he gets to enter first. His ticket number is 4, which is printed first.</li>\n                    <li>There are two people from time slot 2: 3 and 5. Printing according to ticket numbers gives 3 and 5 as the next entries in the output.</li>\n                    <li>There are three people from time slot 3: 2, 1 and 7. Printing according to ticket numbers gives 1, 2, and 7 as the next entries in the output.</li>\n                    <li>There is only one person from time slot 4: 6 and he is the last person allowed to enter the garden.</li>\n                </ul>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Example 2:</h4>\n            <pre class=\"input\">Input:\n5\n6 5\n8 2\n1 5\n6 4\n6 1</pre>\n            <pre class=\"output\">Output:\n6 8 6 1 6</pre>\n            <div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>N = 5</p>\n                <ul>\n                    <li>There is only one person from time slot 1 and he gets to enter first. His ticket number is 6, which is printed first.</li>\n                    <li>There is only one person from time slot 2 and he gets to enter as the second person. His ticket number is 8, which is printed next.</li>\n                    <li>There is no one from time slot 3.</li>\n                    <li>There is only one person from time slot 4 and he gets to enter as the third person. His ticket number is 6, which is printed next.</li>\n                    <li>There are two people from time slot 5: 6 and 1. Printing according to ticket numbers gives 1 and 6 as the next entries in the output.</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1uObU5zkuxJudOznMA_cKGwuIAz7joWQwZeCG0P9YG3A/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    },
    {
        "id": 83,
        "title": "Network Station Combinations",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <span class=\"problem-number\">26</span>\n        <h2>Network Station Combinations</h2>\n    </div>\n\n<div class=\"problem-description\">\n        <p>Two stations A and B are connected to a network. Both stations have N number of addresses each. The network brings the first address X of station A followed by the largest address Y from station B, where X&lt;Y. The possible path includes a combination of the addresses of both stations A and B with the condition that the first address is picked from station A and ends with an address value of station B.</p>\n\n<div class=\"example-explanation\">\n            <h4>For example:</h4>\n            <p>Addresses of Station A: {11, 9, 21}<br>\n            Addresses of Station B: {5, 18, 32}</p>\n            <p>Now, initially, 11 is picked from A. Next 18 is picked from B as 18>11. The first combination is (11,18).<br>\n            Next, again 11 and 18 are picked. Now, as 21>18, thus 21 is picked from A. As the path cannot end with an address from A, 32 is also picked from B as 32>21.<br>\n            Similarly, for all addresses, the combinations are to be found.</p>\n        </div>\n    </div>\n\n<div class=\"task\">\n        <p>Let there be Z combinations formed. Find the sum of all the addresses in each combination, thus Z sums are calculated.<br>\n        Write a program to find out the maximum Max and minimum Min sums. Max is the maximum sum of all the elements of combinations and Min is the minimum sum of the elements.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains N, the total number of address values of Station A and Station B.<br>\n        The second line of input contains N integers, which are the address values of Station A, separated by a single white space.<br>\n        The third line of input contains N integers, which are the address values of Station B, separated by a single white space.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>The output contains Max and Min separated by a single white space.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 13</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Test Cases</h3>\n\n<div class=\"example\">\n            <h4>Sample Input 1:</h4>\n            <pre>3\n10 15 25\n5 20 30</pre>\n\n<h4>Sample Output 1:</h4>\n            <pre>90 30</pre>\n\n<div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>The various combinations are:</p>\n                <ul>\n                    <li>10 20, Sum = 30</li>\n                    <li>10 20 25 30, Sum = 85</li>\n                    <li>10 30, Sum = 40</li>\n                    <li>15 20, Sum = 35</li>\n                    <li>15 20 25 30, Sum = 90</li>\n                    <li>15 30, Sum = 45</li>\n                    <li>25 30, Sum = 55</li>\n                </ul>\n                <p>The Max is 90 and the Min is 30.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Input 2:</h4>\n            <pre>5\n5 17 9 23 31\n12 5 2 27 18</pre>\n\n<h4>Sample Output 2:</h4>\n            <pre>71 17</pre>\n\n<div class=\"explanation\">\n                <h4>Explanation:</h4>\n                <p>The various combinations are:</p>\n                <ul>\n                    <li>5 12, Sum = 17</li>\n                    <li>5 12 17 27, Sum = 61</li>\n                    <li>5 12 17 18, Sum = 52</li>\n                    <li>5 12 23 27, Sum = 67</li>\n                    <li>23 27, Sum = 50</li>\n                </ul>\n                <p>The Max is 71 and the Min is 17.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1RrneqW85r0v8btjCLCFNdL6g58HDLhYxOX2ouF0Yjto/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Walmart sparkplug",
        "company_id": 6
    }
]