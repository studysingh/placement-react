[
    {
        "id": 295,
        "title": "Black and White Tree",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h1>Black and White Tree</h1>\n        <div class=\\\"score\\\">Max score: 20.00</div>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>Given a tree with N vertices labeled from 1 to N, rooted at vertex 1. The tree is an undirected graph with N - 1 edges. Each edge i connects two vertices, a<sub>i</sub> and b<sub>i</sub>. Each vertex i is colored either white (represented by \\'0\\') or black (represented by \\'1\\').</p>\n\n        <p>The beauty of a vertex i is the number of paths in its subtree that have end vertices of the opposite color.</p>\n\n        <p>Find the beauty of all N vertices.</p>\n\n        <div class=\\\"note\\\">\n            <h4>Note:</h4>\n            <p>A subtree of a vertex i is a connected sub-graph consisting of all the descendants of i including i.</p>\n        </div>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>solve</code>. This function takes the following 3 parameters:</p>\n        <ul>\n            <li><code>N</code>: Represents the number of vertices</li>\n            <li><code>Color</code>: Represents the color of the vertices</li>\n            <li><code>Edges</code>: Represents the elements denoting the edge connecting two vertices</li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains a single integer N denoting the number of vertices in the tree.</li>\n            <li>The second line contains the string Color of size N consisting of characters \\'0\\' and \\'1\\'.</li>\n            <li>The next N - 1 lines describe elements of Edges. Edges<sub>i</sub> contains two integers a<sub>i</sub> and b<sub>i</sub> denoting an undirected edge between the vertices numbered a<sub>i</sub> and b<sub>i</sub>.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print N space-separated integers denoting the beauty of the vertices.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ N ≤ 10<sup>5</sup></li>\n            <li>Color<sub>i</sub> ∈ {0, 1} ∀ i ∈ [1, N]</li>\n            <li>1 ≤ a<sub>i</sub>, b<sub>i</sub> ≤ N ∀ i ∈ [1, N - 1]</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n11110\n3 1\n4 3\n5 3\n2 4</pre>\n            <pre class=\\\"output\\\">Output:\n4 0 3 0 0</pre>\n            \n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <p>Given:</p>\n                <ul>\n                    <li>N = 5</li>\n                    <li>Color = \\\"11110\\\"</li>\n                    <li>Edges = [[3, 1], [4, 3], [5, 3], [2, 4]]</li>\n                </ul>\n                <p>For vertex 1, there are 4 simple paths (5 - 3 - 1, 5 - 3, 5 - 3 - 4, 5 - 3 - 4 - 2)</p>\n                <div class=\\\"tree-visualization\\\">\n                    <!-- Tree visualization could be added here -->\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"code-template\\\">\n        <h3>Function Template</h3>\n        <pre class=\\\"cpp\\\"><code>vector&lt;long long&gt; solve(int N, string Color, vector&lt;vector&lt;int&gt; &gt; Edges) {\n    // Write your code here\n    return {0};\n}</code></pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1VZqEaPMt4vFIS5Dsl7NBbBuI4iow0p-dxxgnV9Z8gro/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Bolt.earth",
        "company_id": 87
    },
    {
        "id": 296,
        "title": "Interesting Numbers",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h1>Interesting Numbers</h1>\n        <div class=\\\"score\\\">Max score: 20.00</div>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>An interesting number is a positive number whose digits form an alternating even-odd sequence. In this sequence, the even digits occupy the odd indices, and the odd digits occupy the even indices.</p>\n        \n        <p>For example, 232 or 4 is an interesting number whereas 3 or 34 or 344 is not.</p>\n\n        <p>You are given an integer K. Find the Kth smallest interesting number. The answer should not have any leading zeros. Additionally, note that the sequence follows 1-based indexing.</p>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>solve()</code>. This function takes the following parameter and returns the required answer:</p>\n        <ul>\n            <li><code>K</code>: Represents the K<sup>th</sup> number</li>\n        </ul>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The input contains a single integer K.</p>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each test case in a new line, print the answer.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ K ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n2\n5\n6</pre>\n            <pre class=\\\"output\\\">Output:\n21\n23</pre>\n        </div>\n    </div>\n\n    <div class=\\\"code-template\\\">\n        <h3>Function Template</h3>\n        <pre class=\\\"cpp\\\"><code>long long solve(int K) {\n    // Write your code here\n    return 0;\n}</code></pre>\n    </div>\n\n    <div class=\\\"notes\\\">\n        <p class=\\\"note\\\"><i>Note: The answer should not have any leading zeros and follows 1-based indexing.</i></p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1EgHantijw4oVvBH5H7Kl_Si_8HfxNQq27D9xXH-8EuA/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Bolt.earth",
        "company_id": 87
    },
    {
        "id": 1386,
        "title": "Black and white tree",
        "problem_statement": "<h1>Black and white tree</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given a tree with N vertices labeled from 1 to N, rooted at vertex 1. The tree is an undirected graph with N - 1 edges. Each edge i connects two vertices, a_i and b_i. Each vertex i is colored either white (represented by '0') or black (represented by '1').</p>\r\n<p>The beauty of a vertex i is the number of paths in its subtree that have end vertices of the opposite color.</p>\r\n<p>Find the beauty of all N vertices.</p>\r\n\r\n<h3>Note</h3>\r\n<ul>\r\n    <li>A subtree of a vertex i is a connected sub graph consisting of all the descendants of i including i.</li>\r\n</ul>\r\n\r\n<h3>Function description</h3>\r\n<p>Complete the function <code>solve</code>. This function takes the following 3 parameters:</p>\r\n<ul>\r\n    <li><strong>N:</strong> Represents the number of vertices</li>\r\n    <li><strong>Color:</strong> Represents the color of the vertices</li>\r\n    <li><strong>Edges:</strong> Represents the elements denoting the edge connecting two vertices</li>\r\n</ul>\r\n<p>The function signature is:</p>\r\n<pre><code class='language-javascript'>vector&lt;long long&gt; solve (int N, string Color, vector&lt;vector&lt;int&gt;&gt; Edges)</code></pre>\r\n\r\n<h3>Input format for custom testing</h3>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line contains a single integer N denoting the number of vertices in the tree.</li>\r\n    <li>The second line contains the string Color of size N consisting of characters '0' and '1'.</li>\r\n    <li>The next N - 1 lines describe elements of Edges. Edges contains two integers a_i and b_i denoting an undirected edge between the vertices numbered a_i and b_i.</li>\r\n</ul>\r\n\r\n<h3>Output format</h3>\r\n<p>N space-separated integers denoting the beauty of the vertices.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt; N &lt;= 10^5</code></li>\r\n    <li><code>Color_i ∈ {0, 1} ∀ i ∈ [1, N]</code></li>\r\n    <li><code>1 &lt;= a_i, b_i &lt;= N ∀ i ∈ [1, N-1]</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n11010\r\n3 1\r\n4 3\r\n5 3\r\n2 4\r\nOutput:\r\n4 0 3 0 0</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li><code>N = 5</code></li>\r\n    <li><code>Color = \"11010\"</code></li>\r\n    <li><code>Edges = [[3,1], [4,3], [5,3], [2,4]]</code></li>\r\n</ul>\r\n<p>The given tree is shown below:</p>\r\n<p>(Image of tree structure not reproducible in text, but it shows vertex 1 as root, with 3 as child, 4 and 5 as children of 3, and 2 as child of 4.)</p>\r\n<p><strong>Approach:</strong></p>\r\n<ul>\r\n    <li>For vertex 1, there are 4 simple paths (5 - 3 - 1, 5 - 3 - 4 - 2, 4 - 3 - 1, 2 - 4 - 3 - 1).</li>\r\n    <li>For vertex 3, there are 3 simple paths (5 - 3 - 4, 5 - 3 - 4 - 2, 4 - 3 - 2).</li>\r\n    <li>For vertices 2, 4 and 5, there are no such simple paths.</li>\r\n    <li>So, answer = [4, 0, 3, 0, 0].</li>\r\n</ul>\r\n\r\n<h2>Follow-up</h2>\r\n<h3>Note</h3>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h3>Limits</h3>\r\n<ul>\r\n    <li><strong>Time Limit:</strong> 10 secs for each input file</li>\r\n    <li><strong>Memory Limit:</strong> 256 MB</li>\r\n    <li><strong>Source Limit:</strong> 1024 KB</li>\r\n</ul>\r\n\r\n<h3>Scoring</h3>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h3>Allowed Languages</h3>\r\n<p>Bash, C, C++, C#, Clojure, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, JavaScript/Node.js, Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, R, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Bolt.earth",
        "company_id": 87
    }
]