[
    {
        "id": 1716,
        "title": "Stupid AI Robot",
        "problem_statement": "<h1>Stupid AI Robot</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>AI products are extremely popular in people's daily life, now it can even help us with creative work. You are wondering how these AI products were designed.</p>\r\n<p>So you decided to simulate them to generate a simple application (The AI robot) to respond to people's questions. You have designed the responses to the different cases as below.</p>\r\n<p>Your task is to implement the <code>answer</code> function for this 'Stupid AI' robot so it can handle these different kinds of questions according to the specified rules.</p>\r\n<pre><code class='language-javascript'>import java.io.*;\r\nimport java.math.*;\r\nimport java.security.*;\r\nimport java.text.*;\r\nimport java.util.*;\r\nimport java.util.concurrent.*;\r\nimport java.util.function.*;\r\nimport java.util.regex.*;\r\nimport java.util.stream.*;\r\nimport static java.util.stream.Collectors.joining;\r\nimport static java.util.stream.Collectors.toList;\r\n\r\nclass Result {\r\n\r\n    /*\r\n     * Complete the 'answer' function below.\r\n     *\r\n     * The function is expected to return a STRING.\r\n     * The function accepts STRING question as parameter.\r\n     */\r\n\r\n    public static String answer(String question) {\r\n        // Write your code here\r\n\r\n    }\r\n\r\n}\r\n\r\npublic class Solution {\r\n    // ... main method and other boilerplate\r\n}\r\n</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: What's your name?\r\nOutput: I'm Stupid AI.</code></pre>\r\n<p><strong>Explanation:</strong> If the question is exactly \"What's your name?\", the robot responds with its name.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: Can you tell me what is AI products, why them are smart and can help people?\r\nOutput: Please make it simple.</code></pre>\r\n<p><strong>Explanation:</strong> If the question contains more than 10 words, the robot asks the user to simplify it.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: Should I XXXX?\r\nOutput: You should follow your heart.</code></pre>\r\n<p><strong>Explanation:</strong> If the question starts with \"Should I\", the robot gives an encouraging response.</p>\r\n\r\n<h3>Example 4:</h3>\r\n<pre><code class='language-text'>Input: Can you tell me more about the sky?\r\nOutput: Sorry, I don't know about the question \"c y t m m a t s\".</code></pre>\r\n<p><strong>Explanation:</strong> For any other question that does not match the above rules, the robot admits it's stupid and returns a specific default message, which includes a garbled version of the input question.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "thoughtworks_9oct",
        "company_id": 603
    },
    {
        "id": 1717,
        "title": "Warped Spell",
        "problem_statement": "<h1>Warped Spell</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are a part of the World of Wizards - a global society of magicians. It's your task to create a \"warped-spell\" that helps the society ensure the authenticity and secrecy of its members.</p>\r\n<p>All members meet once a month at a secret club. To ensure authenticity, each member is sent a \"secret\" number of 1-7 digits, 10 days before the meeting.</p>\r\n<p>On the day of the meeting, each member has to present a new \"warped\" number, which is made by casting a warped-spell on the \"secret\" number received 10 days ago.</p>\r\n<p>The \"warped\" number must have the following magical attributes:</p>\r\n<ol>\r\n    <li>Must be strictly of 4 - 7 digits in length (i.e., numbers from 1000 to 9999999).</li>\r\n    <li>Must always be greater than the secret itself.</li>\r\n    <li>Must have mirror-like characteristics as shown below.</li>\r\n</ol>\r\n<p>The World of Wizards needs you to come up with the exact workings of the spell. They already have a magic wand that can do this, but they need your help to upload the spell to get warped numbers from any secret number.</p>\r\n<p>Write a method <code>warpedSpell</code> that takes the secret number as input and spits out the warped number!</p>\r\n\r\n<h2>Examples</h2>\r\n<p>Numbers with mirror-like characteristics (palindromes):</p>\r\n<pre><code class='language-text'>1001\r\n1111\r\n1331\r\n1343431</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>The input <strong>secret</strong> number will be an integer with 1 to 7 digits.</li>\r\n    <li>The output \"warped\" number must be an integer strictly between 1000 and 9999999 (inclusive).</li>\r\n    <li>The output \"warped\" number must be greater than the input <strong>secret</strong> number.</li>\r\n    <li>The output \"warped\" number must have mirror-like characteristics (i.e., be a palindrome).</li>\r\n</ul>\r\n\r\n<h2>Follow-up</h2>\r\n<p>Write the most efficient program for this!</p>\r\n\r\n<p>The function signature is provided below:</p>\r\n<pre><code class='language-java'>import java.io.*;\r\n\r\nclass Result {\r\n    /*\r\n     * Complete the 'warpedSpell' function below.\r\n     *\r\n     * The function is expected to return an INTEGER.\r\n     * The function accepts INTEGER secret as parameter.\r\n     */\r\n    public static int warpedSpell(int secret) {\r\n        // Write your code here\r\n        return 0; // Placeholder\r\n    }\r\n}\r\npublic class Solution {\r\n    // Other parts of the solution class\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "thoughtworks_9oct",
        "company_id": 603
    },
    {
        "id": 1718,
        "title": "Plan Activity",
        "problem_statement": "<h1>Plan Activity</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In ThoughWorks, various communities exist, including a tennis club. As an active participant in the tennis club, you are responsible for regularly organizing matches to train people, attract more colleagues, and keep the club vibrant.</p>\r\n<p>To plan the match for the upcoming month, you need to consider two main pieces of information:</p>\r\n<ol>\r\n    <li>The number of days the match requires (it could be 1, 2, 3, or more days).</li>\r\n    <li>The company's digital calendar, which shows the dates that are not possible for all contestants.</li>\r\n</ol>\r\n<p>For example, if you are planning next month's (July) match, and after checking related information, you get a list of contestants and their busy days as follows:</p>\r\n<pre><code class='language-text'>Contestants:\r\nA: busy at 1, 20\r\nB: busy at 1, 5, 7\r\nC: busy at 11, 18, 19\r\nK: busy at 26\r\n\r\nThe dates which be occupied:\r\n1-5-7-11-18-19-20-22-26\r\n\r\nmatch days:\r\n5</code></pre>\r\n<p>You will then arrange the match into the available date ranges. This step involves developing an application to help you plan for the July match.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: calendar = \"1-5-7-11-18-19-20-22-26\", activityDuration = 5\r\nOutput: \"1-5-7-11-X-18-19-20-22-26-X\"</code></pre>\r\n<p><strong>Explanation:</strong>\r\nThe input `calendar` string represents the days that are already occupied: 1, 5, 7, 11, 18, 19, 20, 22, 26.\r\nThe `activityDuration` is 5, meaning a contiguous block of 5 days is required for the match.</p>\r\n<p>Considering a month with 31 days (like July):</p>\r\n<ul>\r\n    <li>Between day 11 and day 18, the available days are 12, 13, 14, 15, 16, 17. This is a block of 6 consecutive days, which is sufficient for a 5-day activity.</li>\r\n    <li>After day 26, the available days are 27, 28, 29, 30, 31. This is a block of 5 consecutive days, which is also sufficient for a 5-day activity.</li>\r\n</ul>\r\n<p>These suitable available slots are marked with an 'X' in the output string, indicating where the match can be planned.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>The `calendar` string will be a hyphen-separated list of integers representing occupied days in ascending order.</li>\r\n    <li>Each integer in the `calendar` string represents a day of the month (e.g., from 1 to 31).</li>\r\n    <li>`activityDuration` will be a positive integer.</li>\r\n    <li>The month is assumed to have 31 days for calculating available slots, especially at the end of the month.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "thoughtworks_9oct",
        "company_id": 603
    },
    {
        "id": 1719,
        "title": "Class Performance Assessment",
        "problem_statement": "<h1>Class Performance Assessment</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>We've been asked to build the world's first fully-automated classroom. We're working on the software to determine how well each class has performed.</p>\r\n<p>The class uses a novel system where the success of an individual is assigned to a symbol. These symbols have the following precedence:</p>\r\n<pre><code class='language-text'>A > B > C > D > E > F</code></pre>\r\n<p>The symbols are collected and fed into the assessment robot. The success of the class is determined by the following rules:</p>\r\n<ol>\r\n    <li>The robot counts the occurrences of each symbol.</li>\r\n    <li>The symbol with the highest frequency is chosen as the class's overall score.</li>\r\n    <li>If multiple symbols have the same highest frequency, the assessment robot observes the precedence and chooses the symbol with the highest precedence among them.</li>\r\n</ol>\r\n<p>Write a function for the assessment robot. Given the scores of the class as a string of symbols, it should output the class's overall score.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: symbols = \"AAABBCCDDEFF\"\r\nOutput: \"A\"</code></pre>\r\n<p><strong>Explanation:</strong>\r\nThe counts of symbols are: A:3, B:2, C:2, D:2, E:2, F:2.\r\nThe symbol 'A' has the highest frequency (3). Therefore, 'A' is the overall score.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: symbols = \"AAABCCCDEE\"\r\nOutput: \"A\"</code></pre>\r\n<p><strong>Explanation:</strong>\r\nThe counts of symbols are: A:3, B:1, C:3, D:1, E:2.\r\nBoth 'A' and 'C' have the highest frequency (3).\r\nAccording to the precedence (A > B > C > D > E > F), 'A' has higher precedence than 'C'. Therefore, 'A' is the overall score.</p>\r\n\r\n<h2>Function Signature</h2>\r\n<p>The function is expected to return a <code>STRING</code>.</p>\r\n<p>The function accepts <code>STRING symbols</code> as parameter.</p>\r\n<pre><code class='language-java'>public static String performance(String symbols) {\r\n    // Function implementation\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "thoughtworks_9oct",
        "company_id": 603
    }
]