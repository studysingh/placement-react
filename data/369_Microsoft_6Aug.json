[
    {
        "id": 1121,
        "title": "Maximum Operations on String",
        "problem_statement": "<h1>Maximum Operations on String</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given a string `s` of lowercase English characters, the following operation can be performed any number of times:</p>\r\n<p>Choose three consecutive characters `s[i], s[i+1], s[i+2]` (0-based indexing) where `0 <= i <= |s| - 3`. If `s[i] == s[i+1]` and `s[i] != s[i+2]`, replace `s[i+2]` with `s[i]`.</p>\r\n<p>Find the maximum number of operations that can be applied to `s`.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: s = \"accept\"\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The following operations are performed (bold indicates changed character):</p>\r\n<ol>\r\n    <li>Start at `i = 1` (0-based), substring \"cce\". `s[1] = 'c'`, `s[2] = 'c'`, `s[3] = 'e'`. Since `s[1] == s[2]` and `s[1] != s[3]`, replace `s[3]` with `s[1]`. The new string `s = \"acccpt\"`.</li>\r\n    <li>Start at `i = 2` (0-based), substring \"ccp\". `s[2] = 'c'`, `s[3] = 'c'`, `s[4] = 'p'`. Since `s[2] == s[3]` and `s[2] != s[4]`, replace `s[4]` with `s[2]`. The new string `s = \"acccct\"`.</li>\r\n    <li>Start at `i = 3` (0-based), substring \"cct\". `s[3] = 'c'`, `s[4] = 'c'`, `s[5] = 't'`. Since `s[3] == s[4]` and `s[3] != s[5]`, replace `s[5]` with `s[3]`. The new string `s = \"accccc\"`.</li>\r\n</ol>\r\n<p>No other selections are available. The operation can be applied a maximum of 3 times.</p>\r\n\r\n<h3>Example 2 (Sample Case 0):</h3>\r\n<pre><code class='language-text'>Input: s = \"aabaab\"\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Start at `i = 0` (0-based), substring \"aab\". `s[0] = 'a'`, `s[1] = 'a'`, `s[2] = 'b'`. Replace `s[2]` with `s[0]`. New string `s = \"aaaaab\"`.</li>\r\n    <li>Start at `i = 3` (0-based), substring \"aab\". `s[3] = 'a'`, `s[4] = 'a'`, `s[5] = 'b'`. Replace `s[5]` with `s[3]`. New string `s = \"aaaaaa\"`.</li>\r\n</ul>\r\n\r\n<h3>Example 3 (Sample Case 1):</h3>\r\n<pre><code class='language-text'>Input: s = \"aabba\"\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>`i = 2` (0-based), `s = \"aabbb\"`. (Original `s[2]s[3]s[4]` is \"bba\", `s[4]` becomes `s[2]`)</li>\r\n    <li>`i = 0` (0-based), `s = \"aaabb\"`. (Original `s[0]s[1]s[2]` is \"aab\", `s[2]` becomes `s[0]`)</li>\r\n    <li>`i = 1` (0-based), `s = \"aaaab\"`. (Original `s[1]s[2]s[3]` is \"aab\", `s[3]` becomes `s[1]`)</li>\r\n    <li>`i = 2` (0-based), `s = \"aaaaa\"`. (Original `s[2]s[3]s[4]` is \"aab\", `s[4]` becomes `s[2]`)</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`3 <= length of s <= 2 * 10^5`</li>\r\n    <li>The string `s` only contains lowercase English letters.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Microsoft_6Aug",
        "company_id": 369
    }
]