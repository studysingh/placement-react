[
    {
        "id": 204,
        "title": "Christmas Celebration",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Christmas Celebration</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Today is Christmas, and as a teacher, you need to distribute gifts among your students. You have n boxes of chocolates and there are x number of students in the class. You need to distribute gifts among the students in such a way that each gift consist of exactly two boxes in such a way that the count of chocolates in a gift can be uniformly distributed among all the students i.e. count of chocolates in the gift is divisible by the number of students in the class. Your task is to find the total number of chocolate boxes their teacher can take to form the gifts.</p>\n        <p class=\\\"note\\\"><strong>Note:</strong> Each box cannot be a part of more than one gift and also the teacher cannot use a box partially.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>First line: T (Number of test cases)</li>\n            <li>The first line of each test case consists of n number of chocolate boxes and x number of students in the class</li>\n            <li>The second line of each test case contains n integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>(1 ≤ a<sub>i</sub> ≤ 10<sup>5</sup>) where a<sub>i</sub> represent the count of chocolates in the ith box.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each test case, print one integer – the maximum number of the chocolate boxes teacher can give as gifts.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ T ≤ 10</li>\n            <li>1 ≤ n, x ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n1\n5 4\n10 7 6 5 1</pre>\n            <pre class=\\\"output\\\">Output:\n4</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation</h4>\n                <p>In the given test case teacher can at most use 4 boxes i.e. either he can make gifts by using boxes with count of chocolates as 10, 7, 6, 5 {(10, 6), (7, 1)}</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1CR4oC8FeErHCvcVSkrOiypRylf4nhKmWuQEm64msT20/edit?usp=sharing",
        "solution_code": "#include <bits/stdc++.h>\\nusing namespace std;\\n\\nint main() {\\n    ios::sync_with_stdio(false);\\n    cin.tie(NULL);\\n    int T;\\n    cin >> T;\\n    while(T--) {\\n        int n, x;\\n        cin >> n >> x;\\n        vector<int> freq(x, 0);\\n        \\n        for(int i = 0; i < n; i++) {\\n            int a;\\n            cin >> a;\\n            freq[a % x]++;\\n        }\\n        \\n        long long pairs = 0;\\n        pairs += freq[0] / 2;\\n        \\n        for(int r = 1; r <= x/2; r++) {\\n            if(r != x - r) {\\n                pairs += min(1LL * freq[r], 1LL * freq[x-r]);\\n            }\\n            else {\\n                pairs += freq[r] / 2;\\n            }\\n        }\\n        cout << pairs * 2 << \\\"\\\\n\\\";\\n    }\\n    return 0;\\n}",
        "company_name": "MAQ",
        "company_id": 49
    },
    {
        "id": 205,
        "title": "Hari and Palindrome",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Hari and Palindrome</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Hari is an intelligent village student. He is a topper in all the subjects except English. Hari\\'s class teacher is very kind and wants him to be topper in all subjects. So she arranges a small Retest for him.</p>\n        <p>The teacher gives Hari a string S. Hari has to find the largest palindrome that can be formed using the characters of the string S. If many such palindromes exist, the teacher asks Hari to output the lexicographically smallest.</p>\n        <p>Help Hari to be the topper.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains a single integer T, denoting the number of test cases.</li>\n            <li>The next T lines consist of a string S of lowercase English alphabets.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each test case, print the largest palindrome that can be formed using the characters of the string S.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ T ≤ 100</li>\n            <li>1 ≤ |S| ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Sample Test Cases</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n3\nadskassda\ntalent\ndecrypt</pre>\n            <pre class=\\\"output\\\">Output:\nadsasda\ntat\nc</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <p>dasasad and adsssda are some other palindromes that can be formed using characters of string given in 1st test case. But adsasda is the lexicographically smallest palindrome.</p>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\\\"starter-code\\\">\n        <h3>Starter Code</h3>\n        <pre class=\\\"cpp-code\\\">\n#include&lt;bits/stdc++.h&gt;\nusing namespace std;\n\nstring solve(string s) {\n    // Write your code here\n}\n\nint main() {\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    \n    int T;\n    cin >> T;\n    for(int t_i=0; t_i<T; t_i++) {\n        string s;\n        cin >> s;\n        \n        string out_;\n        out_ = solve(s);\n        cout << out_;\n    }\n}</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1oyuZlY6k7MCXPwBkMR13QgijftftLq-ZCceNRoUyJS4/edit?usp=sharing",
        "solution_code": "#include <bits/stdc++.h>\\nusing namespace std;\\n\\nstring solve(string s) {\\n    int freq[26] = {0};\\n    for(char c : s){\\n        freq[c - \\'a\\']++;\\n    }\\n    \\n    string first_half = \\\"\\\";\\n    char middle_char = 0;\\n    \\n    for(int i = 0; i < 26; ++i){\\n        if(freq[i] % 2 != 0){\\n            if(middle_char == 0){\\n                middle_char = \\'a\\' + i;\\n            }\\n        }\\n        first_half += string(freq[i] / 2, \\'a\\' + i);\\n    }\\n    \\n    for(int i = 0; i < 26; ++i){\\n        if(freq[i] % 2 != 0){\\n            if(middle_char == 0 || (\\'a\\' + i) < middle_char){\\n                middle_char = \\'a\\' + i;\\n            }\\n        }\\n    }\\n    \\n    string second_half = first_half;\\n    reverse(second_half.begin(), second_half.end());\\n    \\n    if(middle_char != 0){\\n        return first_half + string(1, middle_char) + second_half;\\n    }\\n    else{\\n        return first_half + second_half;\\n    }\\n}",
        "company_name": "MAQ",
        "company_id": 49
    }
]