[
    {
        "id": 549,
        "title": "Maximum Light Intensity Sections",
        "problem_statement": "<h1>Maximum Light Intensity Sections</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Write an algorithm for the stage management team to find the sections which have maximum light intensity but not more than the scene light intensity.</p>\r\n<p>A stage management company was hired by a group who are performing a play. The director of the play wants to have specific light intensity in different parts of the stage called scene lights. The director is working to a tight budget, so they don't want to add new lights. The director gave the stage management company a list of how much light is present on a particular section of the stage and gave the desired scene light intensity. The data of the current light intensity is given in an N x M matrix in which each cell represents a section of stage, and its value represents the light intensity present in that section. The light intensity of a section can be positive or negative. A negative value denotes a dark spot and a positive value denotes a bright spot. The stage management company must find the sections which currently have the maximum sum of light intensity that is not more than the scene light intensity.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of the input consists of two space-separated integers - <code>numRows</code> & <code>numColumns</code>, representing the number of rows (N) and number of columns (M) of the matrix in which each cell represents a section of stage and its value represents the light intensity present in that section.</p>\r\n<p>The next N lines consist of M space separated integers - <code>presentIntensity</code>, representing the present intensity of that section of the stage.</p>\r\n<p>The next line consists of an integer- <code>sceneLight</code>, representing the scene light intensity.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the sections which have maximum intensity but not more than scene light intensity.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= numRows, numColumns</code></li>\r\n    <li><code>-10<sup>6</sup> <= presentIntensity<sub>ij</sub> <= 10<sup>6</sup></code></li>\r\n    <li><code>-10<sup>3</sup> <= sceneLight <= 10<sup>3</sup></code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2 2\r\n-1 0\r\n1 1\r\n1\r\nOutput:\r\n1</code></pre>\r\n<p><strong>Explanation:</strong> The input matrix is:</p>\r\n<pre><code class='language-text'>-1  0\r\n 1  1</code></pre>\r\n<p>And the <code>sceneLight</code> is 1.</p>\r\n<p>We need to find the maximum sum of a contiguous section (sub-matrix) whose sum is not more than <code>sceneLight</code> (1).</p>\r\n<ul>\r\n    <li>Consider the section formed by the second column: <code>[0, 1]</code>. Its sum is <code>0 + 1 = 1</code>. This sum is less than or equal to <code>sceneLight</code> (1).</li>\r\n    <li>Consider the section formed by the entire matrix: <code>[-1, 0, 1, 1]</code>. Its sum is <code>-1 + 0 + 1 + 1 = 1</code>. This sum is less than or equal to <code>sceneLight</code> (1).</li>\r\n    <li>The maximum sum found among all such valid contiguous sections is <code>1</code>.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_21feb",
        "company_id": 184
    },
    {
        "id": 550,
        "title": "Critical Priority Batch",
        "problem_statement": "<h1>Critical Priority Batch</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In a batch operating system resources are identified by a unique letter from the English alphabet. The most highly demanded resources are identified by one of five characters (a,e,i,o,u). The requests from the processes are concatenated in a string in the same order in which they are received. A pre-defined algorithm forms batches, assigns priority and stores all this information in the system. A batch contains a sequence of consecutive process requests. The critical priority batch is the longest sequence of requests for highly demanded resources where no resources in the consecutive requests are the same. The algorithm must store the number of requests in the critical priority batch.</p>\r\n<p>Write an algorithm to find the number of requests in the critical priority batch.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The input consists of a string â€“ resourceIDs, representing the resource IDs requested by the processes in order.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the number of requests in the critical priority batch.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>0 &lt; length of resourceIDs</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: resourceIDs = stiouiucbeabv\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong> The sequence of received requests is: stiouiucbeabv. The critical priority batch is as highlighted; stiouiucbeabv. The critical priority batch \"iouiu\" contains 5 requests. So, the output is 5.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_21feb",
        "company_id": 184
    },
    {
        "id": 551,
        "title": "Prime Factor Decryption",
        "problem_statement": "<h1>Prime Factor Decryption</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A network security company encrypts and decrypts sensitive data for various organisations. They are currently focusing on new technology through which they will automate all their encryption and decryption processes. To test this new automation technology, the team has N numbers in an encrypted format. To decrypt the data, the automation technology will first take these N numbers and then multiply all these numbers. In the further process, automation technology represents the result of multiplication of all the numbers in the form of the product of prime numbers. After that, the automation process will display only those numbers which are distinct in the product as these numbers are the decrypted message from the sensitive data.</p>\r\n<p>Write an algorithm for the new automation technology to decrypt the sensitive data provided.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of input consists of an integer - data_size, representing the number of pieces of data in the list (N).</p>\r\n<p>The next line consists of N space-separated integers representing the encrypted data.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print space-separated integers in ascending order representing the decrypted data from the sensitive data provided.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>A number greater than 1 is prime if it is divisible by only 1 and itself.</li>\r\n    <li>An integer A is a factor of another integer B if B/A is an integer.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n3 7 11 17\r\nOutput:\r\n3 7 11 17</code></pre>\r\n<p><strong>Explanation:</strong> The product of all the elements is 3 * 7 * 11 * 17 = 3927 = 3^1 * 7^1 * 11^1 * 17^1. There are 4 distinct prime factors, [3, 7, 11, 17].</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_21feb",
        "company_id": 184
    }
]