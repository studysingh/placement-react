[
    {
        "id": 900,
        "title": "Fruit Crush",
        "problem_statement": "<h1>Fruit Crush</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Amazon recently launched a new game, Fruit Crush! In this game, you are allowed to choose two dissimilar fruits and crush them. Each type of fruit is represented as an integer in an array. Formally you can choose any two unequal integers in the array and delete them.</p>\r\n<p>Given an array <code>fruits</code> of size <code>n</code>, return the minimum possible number of fruits left after the given operation is performed any number of times.</p>\r\n<p>Complete the function <code>getMinFruits</code> in the editor below.</p>\r\n<p><code>getMinFruits</code> has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>int fruits[n]</code>: array of n fruits</li>\r\n</ul>\r\n<p><strong>Returns</strong></p>\r\n<ul>\r\n    <li><code>int</code>: the minimum possible count of fruits left</li>\r\n</ul>\r\n<pre><code class='language-javascript'>int getMinFruits(vector<int> fruits) {\r\n    // Function body will be implemented here\r\n}</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 5, fruits = [3, 3, 1, 1, 2]\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> Fruits 1 (banana) and 2 (pineapple) can be crushed first, followed by numbers 1 (banana) and 3 (orange). Only 3 (orange) remains in the array, hence the answer is 1.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 4, fruits = [1, 2, 5, 6]\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> Fruits 1 and 2 can be taken and fruits 5 and 6 can be taken. Hence no numbers are left.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: n = 6, fruits = [2, 2, 2, 5, 1, 2]\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> Fruits 2 and 5 can be taken and fruits 2 and 1 can be taken and hence 2 fruits are left.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10^5</code></li>\r\n    <li><code>1 <= fruits[i] <= 10^9</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Nvidia_7feb",
        "company_id": 278
    },
    {
        "id": 901,
        "title": "Calculate Pending Orders",
        "problem_statement": "<h1>Calculate Pending Orders</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Suppose Amazon is handling a set of customer orders that need to be processed. These orders are represented by <code>orderProcessTime[i]</code>, where <code>i</code> represents the index of the order. Amazon processes the orders sequentially, completing one order before moving on to the next.</p>\r\n<p>Amazon operates in shifts, with each shift having a specific duration, <code>shiftDuration[i]</code>, where <code>i</code> is the shift number. If an order is not fully processed by the end of a shift, it will be continued in the next shift. After all the orders in the current shift are processed, Amazon starts again from the first order at the beginning of the next shift.</p>\r\n<p>Your task is to determine the remaining pending orders at the end of each shift.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>calculatePendingOrders</code> in the editor below.</p>\r\n<p><code>calculatePendingOrders</code> has the following parameters:</p>\r\n<ul>\r\n<li><code>int orderProcessTime[]</code>: the processing time for each order.</li>\r\n<li><code>int shiftDuration[]</code>: the duration of each shift in Amazon.</li>\r\n</ul>\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n<li><code>int[]</code>: an array of integers representing the remaining pending orders after each shift.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 5\r\norderProcessTime = [1, 2, 4, 1, 2]\r\nm = 5\r\nshiftDuration = [3, 10, 1, 1, 1]\r\nOutput: [3, 0, 4, 4, 3]</code></pre>\r\n<p><strong>Explanation:</strong> The processing details for each shift are as follows:</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Shift</th>\r\n<th>Explanation</th>\r\n<th>Remaining Processing times</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>The first two orders are fully processed</td>\r\n<td>[0, 0, 4, 1, 2]</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>All of the remaining orders are fully processed</td>\r\n<td>[0, 0, 0, 0, 0]</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>Amazon restarts processing from the first order again. Only the first order gets completed</td>\r\n<td>[0, 2, 4, 1, 2]</td>\r\n</tr>\r\n<tr>\r\n<td>4</td>\r\n<td>The second order gets partially processed</td>\r\n<td>[0, 0, 4, 1, 2]</td>\r\n</tr>\r\n<tr>\r\n<td>5</td>\r\n<td>The second order gets fully processed</td>\r\n<td>[0, 0, 4, 1, 2]</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Hence, the number of pending orders left after every shift would be [3, 0, 4, 4, 3].</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 3\r\norderProcessTime = [1, 4, 4]\r\nm = 3\r\nshiftDuration = [9, 1, 4]\r\nOutput: [0, 2, 1]</code></pre>\r\n<p><strong>Explanation:</strong> The processing details for each shift are as follows:</p>\r\n<table>\r\n<thead>\r\n<tr>\r\n<th>Shift</th>\r\n<th>Explanation</th>\r\n<th>Remaining Processing times</th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr>\r\n<td>1</td>\r\n<td>All of the orders are fully processed</td>\r\n<td>[0, 0, 0]</td>\r\n</tr>\r\n<tr>\r\n<td>2</td>\r\n<td>Amazon starts processing the first order again. Only the first order gets fully processed</td>\r\n<td>[0, 4, 4]</td>\r\n</tr>\r\n<tr>\r\n<td>3</td>\r\n<td>The second order is fully processed</td>\r\n<td>[0, 0, 4]</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>Hence, the number of pending orders left after every shift would be [0, 2, 1].</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li><code>1 &lt;= n, m &lt;= 2 * 10<sup>5</sup></code></li>\r\n<li><code>1 &lt;= orderProcessTime[i], shiftDuration[i] &lt;= 10<sup>9</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Nvidia_7feb",
        "company_id": 278
    }
]