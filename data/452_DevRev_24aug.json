[
    {
        "id": 1308,
        "title": "Crayon Removal Scoring Game",
        "problem_statement": "<h1>Crayon Removal Scoring Game</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have a container filled with crayons of various colors, where each color is represented by a different alphabet letter. In each move, you can eliminate a sequence of adjacent crayons that share the same color. You may repeat this process multiple times until the container becomes empty. For each move, you must select a continuous group of identical colored crayons (group of x crayons, where x >= 1). Upon removing them, you earn x*x points.</p>\r\n<p>You are provided with an integer N representing the total count of crayons in the container. You also receive an array colors containing the N colors in the container, where each color is denoted by an English alphabet letter.</p>\r\n<p>Calculate the maximum points you can achieve in this scenario.</p>\r\n<p>Function description</p>\r\n<p>Complete the <code>solve()</code> function. This function takes the following 2 arguments and returns the answer.</p>\r\n<p>Parameters:</p>\r\n<ul>\r\n    <li><strong>N:</strong> Represents the total crayons in the box</li>\r\n    <li><strong>colors[]:</strong> Represents the array of colors of crayons in the box. Each color is represented by an English alphabet.</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line contains an integer N denoting the total number of crayons in the box.</li>\r\n    <li>The second line contains N space-separated characters denoting the color of the crayons in the box.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return the maximum number of points you can get in the given scenario.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; N &le; 60</li>\r\n    <li>colors contain only lowercase English letters.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n7\r\na a b b a a c\r\nOutput:\r\n21</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Initially, Points = 0.</li>\r\n    <li>In operation 1, remove the segment of 'b' crayons (2 crayons). Points = 0 + 2*2 = 4. The remaining colors are <code>[a, a, a, a, c]</code>.</li>\r\n    <li>In operation 2, remove the segment of 'c' crayons (1 crayon). Points = 4 + 1*1 = 5. The remaining colors are <code>[a, a, a, a]</code>.</li>\r\n    <li>In operation 3, remove the segment of 'a' crayons (4 crayons). Points = 5 + 4*4 = 21. The remaining colors are <code>[]</code>.</li>\r\n    <li>Hence, the maximum point is 21.</li>\r\n</ul>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 5.0 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, JavaScript(Node.js), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Perl, PHP, Python, Python 3, Python 3.8, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "DevRev_24aug",
        "company_id": 452
    },
    {
        "id": 1309,
        "title": "Dominant Subarrays",
        "problem_statement": "<h1>Dominant Subarrays</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an array of <code>N</code> integers. A subarray is called <strong>dominant</strong> if at least one number appears <code>K</code> times or more within it.</p>\r\n<p>Your task is to count the number of such <strong>dominant subarrays</strong> in the given array.</p>\r\n<ul>\r\n<li>You have an array of size <code>N</code>.</li>\r\n<li>A subarray is a continuous part of the array (it cannot skip elements).</li>\r\n<li>A <strong>dominant subarray</strong> is one where at least one number appears <code>K</code> times or more.</li>\r\n<li>Your goal is to count how many such <strong>dominant subarrays</strong> exist.</li>\r\n</ul>\r\n\r\n<p><strong>Function Description:</strong></p>\r\n<p>You must implement the function <code>countDominantSubarrays</code>.</p>\r\n\r\n<p><strong>Parameters:</strong></p>\r\n<ul>\r\n<li><code>int N</code>: The number of elements in the array.</li>\r\n<li><code>int K</code>: The minimum required frequency for a number to make a subarray dominant.</li>\r\n<li><code>int[] arr</code>: An array of size <code>N</code>, containing the elements.</li>\r\n</ul>\r\n\r\n<p><strong>Returns:</strong></p>\r\n<p><code>int</code>: The total number of <strong>dominant subarrays</strong> in the given array.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: N = 5, K = 2, arr = [1, 2, 1, 2, 1]\r\nOutput: 6</code></pre>\r\n<p><strong>Explanation:</strong> We need to count all subarrays where at least one number appears 2 times or more. Valid dominant subarrays are:</p>\r\n<ol>\r\n<li><code>[1,2,1]</code> (1 appears twice)</li>\r\n<li><code>[2,1,2]</code> (2 appears twice)</li>\r\n<li><code>[1,2,1]</code> (1 appears twice)</li>\r\n<li><code>[1,2,1,2]</code> (1 and 2 both appear twice)</li>\r\n<li><code>[2,1,2,1]</code> (1 and 2 both appear twice)</li>\r\n<li><code>[2,1,2,1,2]</code> (2 appears 3 times)</li>\r\n</ol>\r\n<p>Thus, the correct output is 6.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "DevRev_24aug",
        "company_id": 452
    }
]