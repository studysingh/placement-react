[
    {
        "id": 1254,
        "title": "Script Execution with Nested Loops and Overflow Detection",
        "problem_statement": "<h1>Script Execution with Nested Loops and Overflow Detection</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have a script built in a simple programming language which performs operations on a variable <code>y</code>. Initially <code>y</code> is set to zero and <code>y</code> can hold values ranging from 0 to 2<sup>32</sup> - 1. The script features three types of commands:</p>\r\n<ul>\r\n    <li><strong><code>foreach m</code></strong>: Corresponds to a looping structure. The commands within this loop will be executed <code>m</code> times.</li>\r\n    <li><strong><code>terminate</code></strong>: Ends the loop initiated by the nearest preceding <code>foreach m</code> command.</li>\r\n    <li><strong><code>increment</code></strong>: Increases <code>y</code> by 1.</li>\r\n</ul>\r\n<p>Once all commands are executed, the script returns the resultant <code>y</code>. All <code>foreach m</code> structures are properly paired with a <code>terminate</code>, ensuring valid script formation. Importantly, <code>foreach m</code> may immediately precede <code>terminate</code>, and <code>increment</code> can be outside any loops. Be aware that repeated 'increment' actions might cause <code>y</code> to surpass its maximum allowable limit!</p>\r\n<p>Your task is to execute the script initiated with <code>y = 0</code> and confirm whether the final value of <code>y</code> is valid or if an overflow error occurred. If the final value of <code>y</code> exceeds 2<sup>32</sup> - 1, print 'OVERFLOW!!!', otherwise, output the final value of <code>y</code>.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The input begins with one integer <code>p</code> (1 &le; p &le; 100000) representing the count of lines in the script. Each subsequent line contains one of the following commands:</p>\r\n<ul>\r\n    <li><strong><code>foreach m</code></strong> (1 &le; m &le; 100) - loop structure.</li>\r\n    <li><strong><code>terminate</code></strong> - ends the loop initiated by the nearest 'foreach m'.</li>\r\n    <li><strong><code>increment</code></strong> - increases <code>y</code> by 1.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Output 'OVERFLOW!!!' if an overflow occurs during the script execution starting with <code>y = 0</code> (i.e., <code>y</code> exceeds 2<sup>32</sup> - 1 at any point). Otherwise, output the final value of <code>y</code>.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\nfor 100\r\nfor 5000000\r\nend\r\nend\r\nOutput:\r\n0</code></pre>\r\n<p><strong>Explanation:</strong> The script defines two nested loops. The outer loop iterates 100 times, and the inner loop iterates 5,000,000 times. However, there is no <code>increment</code> command within either loop's body. Therefore, <code>y</code> remains 0 throughout the execution.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; p &le; 100000</code></li>\r\n    <li><code>1 &le; m &le; 100</code> for <code>foreach m</code> commands.</li>\r\n    <li>The value of <code>y</code> must not exceed <code>2^32 - 1</code> at any point during execution.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Visa_29Aug",
        "company_id": 427
    },
    {
        "id": 1256,
        "title": "Garden Sprinklers",
        "problem_statement": "<h1>Garden Sprinklers</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are in charge of a large garden with various irrigation sprinklers arranged across different sections. The garden has a water requirement, measured in units of <strong>water supply</strong>, that you need to meet to keep the plants healthy.</p>\r\n<p>You have <code>n</code> sprinklers in the garden. Each sprinkler <code>i</code> can provide <code>w_i</code> units of water before it needs to be <strong>refilled</strong>. The refill process takes <code>r_i</code> days to complete, during which the sprinkler cannot supply water. On each day, you can use all sprinklers that are not currently being refilled. If all sprinklers are being refilled on a given day, no water is supplied to the garden for that day.</p>\r\n<p>Initially, all sprinklers are filled and ready to use. Your task is to calculate the minimum number of days required to meet or exceed the garden's water requirement.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line contains two integers <code>W</code> and <code>n</code> (1 &le; W, n &le; 20*5) &mdash; the total water requirement and the number of sprinklers in the garden.</p>\r\n<p>The second line contains <code>n</code> integers <code>w1, w2, ..., wn</code> (1 &le; wi &le; 20*5) &mdash; the amount of water each sprinkler can provide before needing a refill.</p>\r\n<p>The third line contains <code>n</code> integers <code>r1, r2, ..., rn</code> (1 &le; ri &le; 20*5) &mdash; the number of days each sprinkler takes to refill after providing water.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Output a single integer &mdash; the minimum number of days required to meet or exceed the garden's water requirement.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; W, n &le; 20*5</code></li>\r\n    <li><code>1 &le; wi &le; 20*5</code></li>\r\n    <li><code>1 &le; ri &le; 20*5</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n24 6\r\n3 3 2 1 2 3\r\n9 10 2 8 6 9\r\nOutput:\r\n9</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Visa_29Aug",
        "company_id": 427
    },
    {
        "id": 1257,
        "title": "Maximize Minimum Hotspot Distance",
        "problem_statement": "<h1>Maximize Minimum Hotspot Distance</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In a bustling city, the city council is planning to set up free Wi-Fi hotspots along the main boulevard to ensure maximum coverage for residents. Due to building constraints and potential signal interference, each Wi-Fi hotspot must be placed within a specific interval along the street. The city has identified n potential installation zones, and the goal is to space the hotspots as far apart as possible to reduce interference and optimize coverage.</p>\r\n<p>You are given n intervals along the boulevard, where each interval [a_i, b_i] represents the range within which a Wi-Fi hotspot can be installed. Your task is to determine the locations of the hotspots within their respective intervals such that the minimum distance between any two hotspots is maximized.</p>\r\n\r\n<p><strong>Input Format:</strong></p>\r\n<p>The first line contains an integer n, the number of installation zones.</p>\r\n<p>The next n lines each contain two integers a_i and b_i, representing the start and end of the i-th installation zone.</p>\r\n\r\n<p><strong>Output Format:</strong></p>\r\n<p>A single integer representing the maximum possible minimum distance between any two hotspots.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n7 10\r\n15 20\r\n25 30\r\nOutput:\r\n9</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>2 &lt;= n &lt;= 10^5</code></li>\r\n    <li><code>0 &lt;= a_i &lt;= b_i &lt;= 10^14</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Visa_29Aug",
        "company_id": 427
    }
]