[
    {
        "id": 243,
        "title": "James Sequence",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">James Sequence</h2>\n\n    <div class=\\\"problem-description\\\">\n        <p>Let X be a sequence of integers, and p a positive integer. We define the <em>score</em> of X to be the sum of the elements of X modulo p.</p>\n\n        <p>James is given a sequence A that consists of N integers and also given integers k and p. James\\' goal is to split A into k parts such that:</p>\n        <ul>\n            <li>Each part contains at least 1 element of A, and</li>\n            <li>Each part consists of contiguous elements of A,</li>\n            <li>No two parts overlap,</li>\n            <li>The total sum S of the scores of those parts is maximized.</li>\n        </ul>\n\n        <p>Output the sum S.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of input contains an integer k, representing the number of parts A should be split into.</li>\n            <li>The second line of input contains an integer p, representing the modulo for computing scores.</li>\n            <li>The third line of input contains an integer N, representing the number of elements in A.</li>\n            <li>The fourth line of input contains N space-separated integers, representing the sequence A.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print a single integer representing the maximum possible sum S of the scores of all parts.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ p ≤ 100</li>\n            <li>k ≤ N ≤ 20000</li>\n            <li>1 ≤ element of A ≤ 10<sup>5</sup></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\" id=\\\"example1\\\">\n            <h4>Example #1</h4>\n            <pre class=\\\"input\\\">Input:\n3\n10\n4\n3 4 7 2</pre>\n            <pre class=\\\"output\\\">Output:\n16</pre>\n            <div class=\\\"explanation\\\">\n                <p>In the first example, if the input sequence is split as (3, 4), (7), (2), the total score would be (3 + 4 mod 10) + (7 mod 10) + (2 mod 10) = 7 + 7 + 2 = 16. It is easy to see that this score is maximum.</p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\" id=\\\"example2\\\">\n            <h4>Example #2</h4>\n            <pre class=\\\"input\\\">Input:\n2\n7\n3\n1 2 3</pre>\n            <pre class=\\\"output\\\">Output:\n7</pre>\n            <div class=\\\"explanation\\\">\n                <p>The optimal split would be (1, 2), (3) giving scores of 3 and 4 respectively, summing to 7.</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"function-signature\\\">\n        <h3>Function Signature</h3>\n        <pre class=\\\"cpp\\\"><code>int solve(int k, int p, vector&lt;int&gt; A)</code></pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1qtlbzBCCHUt2Ktv3skJsF8sVyAlok8Vvg1goQ0eN5n0/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Emerson ",
        "company_id": 65
    }
]