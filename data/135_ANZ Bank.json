[
    {
        "id": 465,
        "title": "Subsequence Sort",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Subsequence Sort</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Given a binary string <code>binary</code> consisting of characters \\'0\\' and \\'1\\' only, perform the following <strong>0</strong> or more times:</p>\n        <ul>\n            <li>Choose any subsequence, sort the subsequence, and replace the original subsequence with the sorted sequence.</li>\n        </ul>\n        <p>Next, there is an array of strings, <code>arr</code>, of length <code>n</code>, where each string has length <code>binary</code> and consists of characters \\'0\\', \\'1\\', and \\'?\\'. Each \\'?\\' character can be replaced with either \\'0\\' or \\'1\\' arbitrarily. For each string in <code>arr</code>, after replacing each \\'?\\' character with either \\'0\\' or \\'1\\', determine if it is possible to rearrange <code>binary</code> using the operation described any number of times. If it is possible, store \\\"YES\\\" as the corresponding answer; otherwise, store \\\"NO\\\", both without quotes.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line contains a binary string <code>binary</code>.</li>\n            <li>The second line contains an integer <code>n</code> - the number of strings in <code>arr</code>.</li>\n            <li>The next <code>n</code> lines each contain a string from <code>arr</code>.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>For each string in <code>arr</code>, print \\\"YES\\\" or \\\"NO\\\" based on whether it can be rearranged to match <code>binary</code>.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ |binary| ≤ 1000</code></li>\n            <li><code>1 ≤ n ≤ 100</code></li>\n            <li><code>1 ≤ |arr[i]| = |binary|</code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n110100\n2\n?10100\n111??0</pre>\n            <pre class=\\\"output\\\">Output:\nYES\nNO</pre>\n            <div class=\\\"explanation\\\">\n                <p>In the first case, the \\'?\\' can be replaced to form \\'110100\\'. In the second case, it cannot be rearranged to match \\'110100\\'.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1ZWoqBkYk6ogG3TL4CjGiC3NVhmTkymBaDIKZM1YqHNA/edit?usp=sharing",
        "solution_code": "",
        "company_name": "ANZ Bank",
        "company_id": 135
    }
]