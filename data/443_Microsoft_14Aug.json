[
    {
        "id": 1286,
        "title": "Array Range Negation",
        "problem_statement": "<h1>Array Range Negation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A data analyst is given an array representing data for <code>n</code> days. The analyst performs <code>k</code> updates on the data, where each update is of the form <code>[l, r]</code>. This indicates that the elements of the array from index <code>l</code> to index <code>r</code> (inclusive) are negated.</p>\r\n<p><strong>Note:</strong> 1-based indexing is used for the update ranges.</p>\r\n<p>Given the initial data array and <code>k</code> updates, return the final data array after all updates.</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the function <code>getFinalData</code> in the editor with the following parameters:</p>\r\n<ul>\r\n    <li><code>int data[n]</code>: the initial data array.</li>\r\n    <li><code>int updates[k][2]</code>: updates in the form of <code>[[l, r]]</code>.</li>\r\n</ul>\r\n\r\n<h3>Returns</h3>\r\n<ul>\r\n    <li><code>int[n]</code>: the final data array after all updates.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\ndata = [1, -4, -5, 2]\r\nk = 2\r\nupdates = [[2, 4], [1, 2]]\r\nOutput: [-1, -4, 5, -2]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Initial data: <code>[1, -4, -5, 2]</code> (Here, <code>n</code> is implicitly 4)</p>\r\n<ol>\r\n    <li>After the first update <code>[2, 4]</code> (negate elements at 1-based indices 2, 3, 4):<br>\r\n    <code>data</code> becomes <code>[1, 4, 5, -2]</code></li>\r\n    <li>After the second update <code>[1, 2]</code> (negate elements at 1-based indices 1, 2):<br>\r\n    <code>data</code> becomes <code>[-1, -4, 5, -2]</code></li>\r\n</ol>\r\n<p>The final answer is <code>[-1, -4, 5, -2]</code>.</p>\r\n\r\n<h3>Example 2 (Sample Case 0):</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 5\r\ndata = [3, 1, 3, 0, 7]\r\nk = 5\r\nupdates = [[1, 4], [3, 5], [1, 4], [3, 5], [2, 3]]\r\nOutput: [3, -1, -3, 0, 7]</code></pre>\r\n<p><strong>Explanation:</strong> The updates are performed as follows (all indices are 1-based):</p>\r\n<ol>\r\n    <li>After the first update <code>[1, 4]</code>: <code>data = [-3, -1, -3, 0, 7]</code></li>\r\n    <li>After the second update <code>[3, 5]</code>: <code>data = [-3, -1, -3, 0, -7]</code></li>\r\n    <li>After the third update <code>[1, 4]</code>: <code>data = [3, 1, 3, 0, -7]</code></li>\r\n    <li>After the fourth update <code>[3, 5]</code>: <code>data = [3, 1, 3, 0, 7]</code></li>\r\n    <li>After the fifth update <code>[2, 3]</code>: <code>data = [3, -1, -3, 0, 7]</code></li>\r\n</ol>\r\n\r\n<h3>Example 3 (Sample Case 1):</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 5\r\ndata = [9, 3, 3, 9, 3]\r\nk = 2\r\nupdates = [[1, 2], [2, 4]]\r\nOutput: [-9, 3, -3, -9, 3]</code></pre>\r\n<p><strong>Explanation:</strong> The updates are performed as follows (all indices are 1-based):</p>\r\n<ol>\r\n    <li>After the first update <code>[1, 2]</code>: <code>data = [-9, -3, 3, 9, 3]</code></li>\r\n    <li>After the second update <code>[2, 4]</code>: <code>data = [-9, 3, -3, -9, 3]</code></li>\r\n</ol>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10^5</code></li>\r\n    <li><code>1 <= k <= 10^5</code></li>\r\n    <li><code>|data[i]| <= 10^9</code> (interpreted from \"length of data[i] <= 10^9\")</li>\r\n    <li><code>1 <= updates[i][0] <= updates[i][1] <= n</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Microsoft_14Aug",
        "company_id": 443
    }
]