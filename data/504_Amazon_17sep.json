[
    {
        "id": 1430,
        "title": "Minimum Unique Processing Facilities",
        "problem_statement": "<h1>Minimum Unique Processing Facilities</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>An e-commerce partner on Amazon's platform faces an operational challenge due to fluctuations in daily processing needs. To solve this, Amazon allocates a set of processing facilities, each identified by a unique integer. Your task is to determine the minimum number of unique processing facilities that Amazon needs to use to handle the given processing volumes over <code>n</code> days.</p>\r\n<p>Amazon selects which processing facility to activate based on comparisons between consecutive days' processing volumes:</p>\r\n<ul>\r\n    <li>If the processing volume increases",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_17sep",
        "company_id": 504
    },
    {
        "id": 1431,
        "title": "Minimum Removals to Stay within Budget",
        "problem_statement": "<h1>Minimum Removals to Stay within Budget</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Amazon developers are building a prototype feature that helps customers manage their cart within a given budget.</p>\r\n\r\n<p>You are given:</p>\r\n<ul>\r\n    <li><strong>An integer</strong> <code>budget</code>, representing the budget of the customer.</li>\r\n    <li><strong>An integer array</strong> <code>cart_items</code> of length <code>n</code>, where <code>cart_items[j]</code> represents the price of the <code>j</code>th item.</li>\r\n</ul>\r\n\r\n<p>For each index <code>i</code> (<code>0 &le; i &lt; n</code>), consider the sub-cart containing items from index 0 to <code>i</code> (inclusive), i.e., <code>sub-cart = cart_items[0...i]</code>.</p>\r\n<ul>\r\n    <li>For this sub-cart, determine the minimum number of items required to remove so that the total price of cart items does not exceed the <code>budget</code>.</li>\r\n    <li><strong>Note:</strong> The item at index <code>i</code> cannot be removed.</li>\r\n</ul>\r\n\r\n<p>The task is to return an array of length <code>n</code>, where the value at index <code>i</code> is the minimum number of items to remove for the sub-cart ending at <code>i</code>.</p>\r\n\r\n<h3>Function Description:</h3>\r\n<p>Complete the function <code>getMinRemovals</code> in the editor below.</p>\r\n<p>The function is expected to return an <code>INTEGER_ARRAY</code>.</p>\r\n<p>The function accepts the following parameters:</p>\r\n<ol>\r\n    <li><code>INTEGER_ARRAY cart_items</code></li>\r\n    <li><code>INTEGER budget</code></li>\r\n</ol>\r\n\r\n<h3>Returns:</h3>\r\n<p><code>int[n]</code>: the minimum number of items to be removed for each index.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 3, cart_items = [2, 3, 7], budget = 8\r\nOutput: [0, 0, 2]</code></pre>\r\n<p><strong>Explanation:</strong>\r\n<ul>\r\n    <li><strong>Index 0:</strong> Sub-cart is <code>[2]</code>. Total price = 2. Since <code>2 &le; 8</code>, no items need to be removed. Result for index 0 is 0.</li>\r\n    <li><strong>Index 1:</strong> Sub-cart is <code>[2, 3]</code>. Total price = 5. Since <code>5 &le; 8</code>, no items need to be removed. Result for index 1 is 0.</li>\r\n    <li><strong>Index 2:</strong> Sub-cart is <code>[2, 3, 7]</code>. Total price = 12. Since <code>12 &gt; 8</code>, items must be removed. The item at index 2 (<code>7</code>) cannot be removed. We consider items <code>[2, 3]</code>. To make the total <code>&le; 8</code>, we must remove both <code>2</code> and <code>3</code> (leaving only <code>7</code>, total 7). This requires removing 2 items. Result for index 2 is 2.</li>\r\n</ul>\r\nHence, the answer is <code>[0, 0, 2]</code>.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; n &le; 10<sup>5</sup></code></li>\r\n    <li><code>1 &le; cart_items[i] &le; budget &le; 10<sup>9</sup></code></li>\r\n    <li><code>1 &le; total &le; 10<sup>9</sup></code></li>\r\n</ul>\r\n\r\n<h2>Input Format For Custom Testing</h2>\r\n<p>The first line contains an integer, <code>n</code>, the size of <code>cart_items</code>.</p>\r\n<p>Each of the next <code>n</code> lines contains an integer, <code>cart_items[i]</code>.</p>\r\n<p>The last line contains an integer, <code>budget</code>.</p>\r\n\r\n<h3>Sample Case 0:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 4\r\ncart_items = [1, 2, 3, 4]\r\nbudget = 5\r\n\r\nOutput:\r\n0\r\n0\r\n1\r\n2</code></pre>\r\n<p><strong>Explanation:</strong>\r\n<ul>\r\n    <li><strong>Index i = 0:</strong> <code>[1]</code>, <code>1 &le; 5</code>, remove 0</li>\r\n    <li><strong>Index i = 1:</strong> <code>[1, 2]</code>, <code>1 + 2 = 3 &le; 5</code>, remove 0</li>\r\n    <li><strong>Index i = 2:</strong> <code>1 + 2 + 3 = 6</code>, remove any 1</li>\r\n    <li><strong>Index i = 3:</strong> <code>1 + 2 + 3 + 4 = 10</code>, remove <code>[3, 2]</code></li>\r\n</ul></p>\r\n\r\n<h3>Sample Case 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 4\r\ncart_items = [6, 1, 4, 5]\r\nbudget = 6\r\n\r\nOutput:\r\n0\r\n1\r\n1\r\n2</code></pre>\r\n<p><strong>Explanation:</strong>\r\n<ul>\r\n    <li><strong>Index i = 0:</strong> <code>[6]</code>, <code>6 &le; 6</code>, remove 0</li>\r\n    <li><strong>Index i = 1:</strong> <code>[6, 1]</code>, <code>6 + 1 = 7</code>, remove either 1</li>\r\n    <li><strong>Index i = 2:</strong> <code>6 + 1 + 4 = 11</code>, remove <code>[6]</code>, 1</li>\r\n    <li><strong>Index i = 3:</strong> <code>6 + 1 + 4 + 5 = 16</code>, remove <code>[6, 4]</code>, 2</li>\r\n</ul></p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_17sep",
        "company_id": 504
    }
]