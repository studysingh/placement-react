[
    {
        "id": 1543,
        "title": "Medians",
        "problem_statement": "<h1>Medians</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A new Amazon intern encountered a challenging task.</p>\r\n<p>Currently, the intern has <code>n</code> integers, where the value of the i<sup>th</sup> element is represented by the array element <code>values[i]</code>.</p>\r\n<p>The intern is curious to play with arrays and subsequences and thus asks you to join him.</p>\r\n<p>Given <code>n</code> integer, array <code>values</code>, and an integer <code>k</code>, the intern needs to find the maximum and minimum median overall subsequences of length <code>k</code>.</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the function <code>medians</code> in the editor below.</p>\r\n<p><code>medians</code> has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>int values[n]</code>: the value of integers.</li>\r\n    <li><code>int k</code>: the given integer.</li>\r\n</ul>\r\n\r\n<h3>Returns</h3>\r\n<p><code>int[]</code>: the maximum and minimum overall subsequences of length <code>k</code> in the form <code>[maximum median, minimum median]</code>.</p>\r\n\r\n<pre><code class='language-cpp'>vector<int> medians(vector<int> values, int k) {\r\n\r\n}</code></pre>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 3, values = [1, 2, 3], k = 2\r\nOutput: [2, 1]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Subsequences of length k</th>\r\n            <th>median</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>[1, 2]</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>[1, 3]</td>\r\n            <td>1</td>\r\n        </tr>\r\n        <tr>\r\n            <td>[2, 3]</td>\r\n            <td>2</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>Here, the maximum median present is 2 and the minimum median in the subsequence present is 1.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 2, values = [56, 21], k = 1\r\nOutput: [56, 21]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Subsequences of length k</th>\r\n            <th>median</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>[56]</td>\r\n            <td>56</td>\r\n        </tr>\r\n        <tr>\r\n            <td>[21]</td>\r\n            <td>21</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>The maximum median present is 56 and the minimum median in the subsequence present is 21.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: n = 5, values = [16, 21, 9, 2, 78], k = 5\r\nOutput: [16, 16]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Subsequences of length k</th>\r\n            <th>median</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>[16, 21, 9, 2, 78]</td>\r\n            <td>16</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<p>There is only one subsequence of length 5, hence the maximum median and minimum median are 16.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; n &le; 10<sup>6</sup></code></li>\r\n    <li><code>0 &le; values[i] &le; 10<sup>9</sup></code></li>\r\n    <li><code>1 &le; k &le; n</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_29sep",
        "company_id": 540
    },
    {
        "id": 1544,
        "title": "Code Question 2",
        "problem_statement": "<h1>Code Question 2</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Software developed these days is subject to frequent cyber attacks.</p>\r\n<p>To prevent the attacks from succeeding, the security team at Amazon ensures the security of its systems by running tests against <code>n</code> files, where the <code>i<sup>th</sup></code> file has size <code>fileSize[i]</code> and there are <code>n</code> viruses.</p>\r\n<p>The <code>i<sup>th</sup></code> virus attacks the <code>i<sup>th</sup></code> file and is only effective against a file with size <code>affinity[i]</code>. To minimize the damage caused, the team performs certain operations.</p>\r\n<p>In one operation, the team can choose 2 files, <code>i</code> and <code>j</code>, and swap their sizes, i.e., <code>fileSize[i]</code> and <code>fileSize[j]</code>.</p>\r\n<p>Given the sizes of files and the virus' affinities, find the minimum number of operations performed such that <code>fileSize[i] != affinity[i]</code> for each file from <code>0</code> to <code>n-1</code>. If it is not possible to do so after any number of operations, return <code>-1</code>.</p>\r\n<p>Complete the function <code>calculateMinimumSwaps</code> in the editor below.</p>\r\n<p><code>calculateMinimumSwaps</code> has the following parameters:</p>\r\n<ul>\r\n    <li><code>int fileSize[n]</code>: the file sizes</li>\r\n    <li><code>int affinity[n]</code>: the affinities</li>\r\n</ul>\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n    <li><code>int</code>: the minimum number of operations, or <code>-1</code> if it is impossible</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 5, fileSize = [2, 2, 1, 1, 2], affinity = [2, 1, 1, 1, 2]\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong>\r\nInitially, we have <code>fileSize = [2, 2, 1, 1, 2]</code> and <code>affinity = [2, 1, 1, 1, 2]</code>.</p>\r\n<ul>\r\n    <li><code>fileSize[0] == affinity[0]</code> (both 2)</li>\r\n    <li><code>fileSize[2] == affinity[2]</code> (both 1)</li>\r\n    <li><code>fileSize[4] == affinity[4]</code> (both 2)</li>\r\n</ul>\r\n<p>One possible solution to achieve <code>fileSize[i] != affinity[i]</code> for all <code>i</code>:</p>\r\n<ul>\r\n    <li><strong>Operation 1:</strong> Swap <code>fileSize[0]</code> with <code>fileSize[2]</code>.\r\n        <br><code>fileSize</code> becomes <code>[1, 2, 2, 1, 2]</code>.\r\n        <br>Now, <code>fileSize[2] == affinity[2]</code> (both 2) and <code>fileSize[4] == affinity[4]</code> (both 2) are still matching.</li>\r\n    <li><strong>Operation 2:</strong> Swap <code>fileSize[3]</code> with <code>fileSize[4]</code>.\r\n        <br><code>fileSize</code> becomes <code>[1, 2, 2, 2, 1]</code>.\r\n        <br>In this modified file size array, none of the file sizes match the corresponding affinity.</li>\r\n</ul>\r\n<p>The minimum number of operations required is 2.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 5, fileSize = [1, 2, 3, 2, 3], affinity = [1, 2, 3, 2, 3]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong>\r\nGiven, <code>n = 5</code>, <code>fileSize = [1, 2, 3, 2, 3]</code>, <code>affinity = [1, 2, 3, 2, 3]</code>.\r\nInitially, <code>fileSize[i]</code> is equal to <code>affinity[i]</code> for all <code>i = 0, 1, 2, 3, 4</code>.</p>\r\n<p>One solution to make all <code>fileSize[i] != affinity[i]</code> involves 3 swaps:</p>\r\n<ul>\r\n    <li>Swap <code>fileSize[0]</code> with <code>fileSize[2]</code>. <code>fileSize</code> becomes <code>[3, 2, 1, 2, 3]</code>.</li>\r\n    <li>Swap <code>fileSize[0]</code> with <code>fileSize[1]</code>. <code>fileSize</code> becomes <code>[2, 3, 1, 2, 3]</code>.</li>\r\n    <li>Swap <code>fileSize[3]</code> with <code>fileSize[4]</code>. <code>fileSize</code> becomes <code>[2, 3, 1, 3, 2]</code>.</li>\r\n</ul>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: n = 5, fileSize = [2, 2, 2, 1, 1], affinity = [1, 1, 1, 1, 2]\r\nOutput: -1</code></pre>\r\n<p><strong>Explanation:</strong>\r\nGiven, <code>n = 5</code>, <code>fileSize = [2, 2, 2, 1, 1]</code>, <code>affinity = [1, 1, 1, 1, 2]</code>.\r\nIt is impossible to swap the elements of <code>fileSize</code> in such a way that <code>fileSize[i] != affinity[i]</code> for all files.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10<sup>5</sup></code></li>\r\n    <li><code>1 <= fileSize[i], affinity[i] <= 10<sup>9</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_29sep",
        "company_id": 540
    }
]