[
    {
        "id": 1203,
        "title": "Maximum of Subarray Minimums",
        "problem_statement": "<h1>Maximum of Subarray Minimums</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Implement a function that, for an array of integers <code>arr</code> and a subarray of size <code>k</code>, determines the maximum among all minimums of all contiguous subarrays of size <code>k</code>.</p>\r\n<p>The function <code>maximumSubarrayMinimum</code> takes the following input:</p>\r\n<ul>\r\n    <li><code>int arr</code>: an array of integers</li>\r\n    <li><code>int k</code>: the subarray length</li>\r\n</ul>\r\n<p>The function should return an integer, the largest value amongst all minimums of subarrays of size <code>k</code>.</p>\r\n<p><strong>Note:</strong> A subarray is an array obtained by deleting several (possibly zero) elements from the beginning and end of the original array.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: arr = [1,2,3,4,5], k = 2\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong> For subarray size k = 2, the subarrays are [1, 2], [2, 3], [3, 4], and [4, 5], and their minimums are 1, 2, 3, 4. The final answer is 4, the maximum of these.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: arr = [1,1,1], k = 2\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> The two subarrays of size k = 2 are [1, 1], [1, 1]. Their minimums are 1 and 1, and the maximum of these is 1.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n    <li><code>1 &lt;= arr[i] &lt;= 10^9</code></li>\r\n    <li><code>1 &lt;= k &lt;= n</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_9aug",
        "company_id": 408
    },
    {
        "id": 1204,
        "title": "Valid keys",
        "problem_statement": "<h1>Valid keys</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A cyber security firm has discovered a new type of encryption being used by a group of hackers. The encryption key will be a valid key, which is a number that has exactly 3 factors for divisors. For example, 4 is a valid key because it has exactly 3 factors: 1, 2, and 4. But 6 is not a valid key because it has 4 factors: 1, 2, 3, and 6.</p>\r\n<p>Given an array `keys` of length `n`, find the number of valid keys in the range `[1, keys[i]]` both inclusive, for each `0 <= i < n`.</p>\r\n<p><strong>Note:</strong></p>\r\n<ul>\r\n    <li>`a` is called a divisor of `b` if there is an integer `c` such that `a * c = b`.</li>\r\n    <li>Only positive integers are taken into account for counting divisors.</li>\r\n</ul>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the function `getValidKeyCount` in the editor below.</p>\r\n<p>`getValidKeyCount` has the following parameter:</p>\r\n<ul>\r\n    <li>`vector<long> keys`: an array of integers.</li>\r\n</ul>\r\n<p>Returns:</p>\r\n<ul>\r\n    <li>`vector<int>`: an array of integers containing the answer for each query.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 2, keys = [5, 11]\r\nOutput: [1, 2]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>For `keys[0] = 5`, the only valid key in the range `[1, 5]` is 4 (factors: 1, 2, 4). So the count is 1.</li>\r\n    <li>For `keys[1] = 11`, the valid keys in the range `[1, 11]` are 4 (factors: 1, 2, 4) and 9 (factors: 1, 3, 9). So the count is 2.</li>\r\n</ul>\r\n\r\n<h3>Example 2: (Sample Case 0)</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n5 11\r\nOutput:\r\n1\r\n2</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Given `n = 2`, `keys = [5, 11]`.</li>\r\n    <li>For `i = 0`, `keys[0] = 5`, the valid key is 4.</li>\r\n    <li>For `i = 1`, `keys[1] = 11`, the valid keys are 4 and 9.</li>\r\n</ul>\r\n\r\n<h3>Example 3: (Sample Case 1)</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n100\r\nOutput:\r\n4</code></pre>\r\n<p><strong>Explanation:</strong> There are 4 valid keys in the range `[1, 100]` (which are 4, 9, 25, 49). </p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`1 <= n <= 10^5`</li>\r\n    <li>`1 <= keys[i] <= 2.5 * 10^12`</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_9aug",
        "company_id": 408
    }
]