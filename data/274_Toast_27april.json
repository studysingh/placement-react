[
    {
        "id": 892,
        "title": "Republic day parade",
        "problem_statement": "<h1>Republic day parade</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Senior commander John is preparing for the Republic Day parade and wants to select three officers to lead the parade. He asks all his officers to stand in a line. All the officers are of distinct height. John follows a strict selection rule:</p>\r\n<ol>\r\n    <li>He starts from the first officer in the line and decides whether to select him or not. He does so for every officer in the line as he moves forward.</li>\r\n    <li>If he selects an officer, then every next selected officer must be shorter than the previously selected one.</li>\r\n    <li>He makes sure he has selected exactly three officers by the time he has reached the end of the line.</li>\r\n</ol>\r\n<p>Given that there are N officers in the line, your task is to determine the number of ways he can select three officers following the above rule.</p>\r\n<p>Complete the function <code>solve()</code> provided in the editor. The function takes the following two parameters and returns an integer.</p>\r\n<ul>\r\n    <li><strong>N</strong>: Representing the number of officers.</li>\r\n    <li><strong>Height</strong>: Representing an array of heights (in cm) of the officers, where the i<sup>th</sup> number represents the height of the i<sup>th</sup> officer in the line.</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line contains a single integer N, denoting the number of officers.</li>\r\n    <li>The next line contains N space-separated integers, denoting the height of each officer.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print the number of ways John can select three officers.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>3 &lt;= N &lt;= 5 * 10<sup>5</sup></li>\r\n    <li>1 &lt;= Height[i] &lt;= 10<sup>9</sup></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Toast_27april",
        "company_id": 274
    },
    {
        "id": 893,
        "title": "Binary string game",
        "problem_statement": "<h1>Binary string game</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Alice is playing a game starting with a binary string B of length 3<sup>N</sup>. She repeatedly performs the following operations:</p>\r\n<ol>\r\n    <li>Partition the current string into contiguous groups of 3 characters each.</li>\r\n    <li>From each group, she picks the majority character (0 or 1) to form a new string.</li>\r\n</ol>\r\n<p>For a binary string B = B<sub>1</sub>B<sub>2</sub>...B<sub>3<sup>N</sup></sub> of length 3<sup>N</sup>, we define an operation to obtain a binary string C = C<sub>1</sub>C<sub>2</sub>...C<sub>3<sup>(N-1)</sup></sub> of length 3<sup>(N-1)</sup>. This means that for i = 1, 2, ..., 3<sup>(N-1)</sup>, let C<sub>i</sub> be the value that appears most frequently among B<sub>3i-2</sub>, B<sub>3i-1</sub>, and B<sub>3i</sub>. This process continues until Alice is left with a single character. You are provided with:</p>\r\n<ul>\r\n    <li>An integer n such that the starting string length is 3<sup>N</sup>.</li>\r\n    <li>A final character (0 or 1) that represents the last remaining character after all the operations are done.</li>\r\n</ul>\r\n<p>You need to determine how many different binary strings (modulo 10<sup>9</sup>+7) of length 3<sup>N</sup> would ultimately yield the final character after performing all the operations.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>solve(n, fin)</code> provided in the editor. The function takes the following two parameters and returns an integer.</p>\r\n<ul>\r\n    <li><code>n</code>: Representing the number of operations done.</li>\r\n    <li><code>fin</code>: Representing a character (0 or 1), which is the final result after all the operations.</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first and only line of input contains an integer <code>n</code> and the character <code>fin</code> separated by a space.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print the number of binary strings (modulo 10<sup>9</sup>+7) of size 3<sup>n</sup> that result in <code>fin</code> after all the operations.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>0 &le; <code>n</code> &le; 13</li>\r\n    <li>0 &le; <code>fin</code> &le; 1</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: 1 1\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Given</p>\r\n<pre><code class='language-text'>1 1</code></pre>\r\n<p>Approach</p>\r\n<ul>\r\n    <li>Here, n=1 and fin=1.</li>\r\n    <li>The initial string size must be 3<sup>1</sup>. The strings that result in 1 are \"111\", \"110\", \"101\", \"011\".</li>\r\n    <li>Hence, there are 4 strings in total.</li>\r\n</ul>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 5.0 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<p>Java 8, Java 14, Java 17, Python, Python 3, Python 3.8</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Toast_27april",
        "company_id": 274
    }
]