[
    {
        "id": 461,
        "title": "Deliver Pizzas",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2><div class=\\\"problem-container\\\">\n    <h2>Deliver Pizzas</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Sanket is delivering pizzas today and has destinations along a straight line. He starts at point 0, with each destination located at a unique distance given by an array of non-negative integers (<code>a[i]</code> is the distance of the <i>i-th</i> destination from the start).</p>\n        <p>Sanket will visit each destination only once in any order he chooses, and must explicitly stop at each to deliver. The distance between two destinations <code>a[i]</code> and <code>a[j]</code> is calculated as <code>|a[i] - a[j]|</code>. Sanket ends his route at the final destination.</p>\n        <p>Curious about the total distance he would travel on all possible routes, he wants to know the average distance per route. Since he\\'s busy with deliveries, can you help calculate this?</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains a single integer <code>n</code> - the number of destinations.</p>\n        <p>The second line of input contains <code>n</code> space-separated integers <code>a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub></code> - the distance of the <i>i-th</i> destination from the starting point.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print in a single line two space-separated integers - the numerator and the denominator of the fraction of the average distance he would travel by choosing a route. The fraction must be irreducible.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>2 ≤ n ≤ 10<sup>5</sup></code></li>\n            <li><code>1 ≤ a<sub>i</sub> ≤ 10<sup>7</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n3 3842 288 199 334</pre>\n            <pre class=\\\"output\\\">Output:\n[Sample output]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation of the output if necessary.</p>\n            </div>\n        </div>\n    </div>\n</div></h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Sanket is delivering pizzas today and has destinations along a straight line. He starts at point 0, with each destination located at a unique distance given by an array of non-negative integers (<code>a[i]</code> is the distance of the <i>i-th</i> destination from the start).</p>\n        <p>Sanket will visit each destination only once in any order he chooses, and must explicitly stop at each to deliver. The distance between two destinations <code>a[i]</code> and <code>a[j]</code> is calculated as <code>|a[i] - a[j]|</code>. Sanket ends his route at the final destination.</p>\n        <p>Curious about the total distance he would travel on all possible routes, he wants to know the average distance per route. Since he\\'s busy with deliveries, can you help calculate this?</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line of input contains a single integer <code>n</code> - the number of destinations.</p>\n        <p>The second line of input contains <code>n</code> space-separated integers <code>a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub></code> - the distance of the <i>i-th</i> destination from the starting point.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print in a single line two space-separated integers - the numerator and the denominator of the fraction of the average distance he would travel by choosing a route. The fraction must be irreducible.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>2 ≤ n ≤ 10<sup>5</sup></code></li>\n            <li><code>1 ≤ a<sub>i</sub> ≤ 10<sup>7</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n3 3842 288 199 334</pre>\n            <pre class=\\\"output\\\">Output:\n[Sample output]</pre>\n            <div class=\\\"explanation\\\">\n                <p>Explanation of the output if necessary.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/16XcfJU_LYsU95qw4_-wU1zG2cC6yXp85AeMlyMEdErs/edit?usp=sharing",
        "solution_code": "import math\\nimport sys\\n\\ndef average_distance(n, a):\\n    a_sorted = sorted(a)\\n    sum_a = sum(a_sorted)\\n    sum_diff = 0\\n    prefix_sum = 0\\n    \\n    for i in range(n):\\n        sum_diff += a_sorted[i] * i - prefix_sum\\n        prefix_sum += a_sorted[i]\\n    \\n    numerator = sum_a + 2 * sum_diff\\n    denominator = n\\n    gcd = math.gcd(numerator, denominator)\\n    \\n    return (numerator // gcd, denominator // gcd)\\n\\ndef main():\\n    input = sys.stdin.read\\n    data = input().split()\\n    n = int(data[0])\\n    a = list(map(int, data[1:n+1]))\\n    result = average_distance(n, a)\\n    print(result[0], result[1])\\n\\nif name == \\\"main\\\":\\n    main()",
        "company_name": "Epam",
        "company_id": 133
    },
    {
        "id": 462,
        "title": "Short Message Service",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Short Message Service</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are tasked with creating a short message system that will help simplify long messages. Specifically, you need to shorten words in a message while preserving the overall meaning and readability. You are allowed to shorten each word by keeping its first and last character, replacing the middle part with the number of characters removed.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>A single string, <code>message</code>, containing multiple words separated by spaces.</li>\n            <li>The string consists of words made up of alphabets (both uppercase and lowercase) and spaces.</li>\n            <li>Words will only contain alphabetic characters, and there are no leading or trailing spaces.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>A single string, where each word in the message is shortened if it has more than 3 characters, according to the rules given.</p>\n        <p>Words with 3 or fewer characters should remain unchanged.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>The length of the input string will be between 1 and 1000.</li>\n            <li>Each word in the message will have a length between 1 and 100.</li>\n            <li>The message will have at most 200 words.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n\\\"Communication is essential for development\\\"</pre>\n            <pre class=\\\"output\\\">Output:\n\\\"C11n is e8l for d10t\\\"</pre>\n            <div class=\\\"explanation\\\">\n                <p>In the output, words longer than 3 characters are shortened according to the specified rules.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1Lijx6AW3kPwLDPLywNK-ouVyxCpM8EBH5ngC7OOOeKM/edit?usp=sharing",
        "solution_code": "def shorten_message(message):\\n    words = message.split()\\n    shortened_words = []\\n    \\n    for word in words:\\n        if len(word) > 3:\\n            shortened_word = f\\\"{word[0]}{len(word) - 2}{word[-1]}\\\"\\n        else:\\n            shortened_word = word\\n        \\n        shortened_words.append(shortened_word)\\n    \\n    return \\\" \\\".join(shortened_words)\\n\\nif name == \\\"main\\\":\\n    message = input().strip()\\n    shortened_message = shorten_message(message)\\n    print(shortened_message)",
        "company_name": "Epam",
        "company_id": 133
    }
]