[
    {
        "id": 753,
        "title": "Minimum contrast",
        "problem_statement": "```html\r\n<h1>Minimum contrast</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given a set of <code>n</code> strings <code>S_1, S_2, ..., S_n</code> and <code>q</code> queries <code>Q_1, Q_2, ..., Q_q</code>. In each query, you are given a string (which may or may not be present in the previous input). You have to print that string from the set of <code>n</code> strings which is at the minimum distance from the string given in the query. Distance between two strings is the minimum number of insertion, deletion, and replacement operations required to make one string exactly equal to the other string.</p>\r\n<p>In case there are 2 strings that have the same distance to the string given in the query, print the string that is earlier in the input.</p>\r\n<p>For each query, print that string from the set of <code>n</code> strings which is at the minimum distance from the string given in the query.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>MinimumContrast</code>. This function takes the following 4 parameters and returns a vector of strings:</p>\r\n<ul>\r\n    <li><code>n</code>: Represents the number of strings</li>\r\n    <li><code>S</code>: Represents the array of strings of size <code>n</code></li>\r\n    <li><code>q</code>: Represents the number of queries</li>\r\n    <li><code>Q</code>: Represents the array of strings of size <code>q</code> denoting the queries</li>\r\n</ul>\r\n\r\n<h2>Input Format for Custom Testing</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line of input contains an integer <code>n</code>, representing the number of strings given initially.</li>\r\n    <li>The next <code>n</code> lines contain <code>n</code> lowercase strings.</li>\r\n    <li>The next line contains an integer <code>q</code>, the number of queries asked.</li>\r\n    <li>The next <code>q</code> lines contain <code>q</code> lowercase strings.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>For each query in a new line, output <code>q</code> strings.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n, q <= 50</code></li>\r\n    <li><code>1 <= |S_i|, |Q_i| <= 50</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\nabc\r\ndfr\r\nqwe\r\n2\r\nac\r\nqwe\r\nOutput:\r\nabc\r\nqwe</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>For each query string:</p>\r\n<p>1. For the query \"ac\", we calculate the edit distance to each of the strings in the list (\"abc\", \"dfr\", \"qwe\"):</p>\r\n<ul>\r\n    <li>Distance to \"abc\" - 1 (e.g., by deleting 'b' from \"abc\" to make \"ac\")</li>\r\n    <li>Distance to \"dfr\" - 3 (e.g., by replacing 'a' with 'd', 'c' with 'f', and inserting 'r' to make \"dfr\")</li>\r\n    <li>Distance to \"qwe\" - 3 (e.g., by replacing 'a' with 'q', 'c' with 'w', and inserting 'e' to make \"qwe\")</li>\r\n</ul>\r\n<p>The minimum distance is 1, corresponding to \"abc\". So, the output for this query is \"abc\".</p>\r\n\r\n<p>2. For the query \"qwe\", we calculate the edit distance to each of the strings in the list (\"abc\", \"dfr\", \"qwe\"):</p>\r\n<ul>\r\n    <li>Distance to \"abc\" - 3 (e.g., by replacing 'q' with 'a', 'w' with 'b', and 'e' with 'c' to make \"abc\")</li>\r\n    <li>Distance to \"dfr\" - 3 (e.g., by replacing 'q' with 'd', 'w' with 'f', and 'e' with 'r' to make \"dfr\")</li>\r\n    <li>Distance to \"qwe\" - 0 (since the string is identical to the query)</li>\r\n</ul>\r\n<p>The minimum distance is 0, corresponding to \"qwe\". So, the output for this query is \"qwe\".</p>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 10 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, Java 17, JavaScript(NodeJS), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, Python 3.8, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Meesho_23july",
        "company_id": 238
    }
]