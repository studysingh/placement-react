[
    {
        "id": 1737,
        "title": "Class Score Calculation",
        "problem_statement": "<h1>Class Score Calculation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>We have decided to hold a class-based integer battle at our high school.</p>\r\n<p>Students will write down their favorite numbers on a piece of paper. The class's score is determined by how many times the product of the integers written by the students in the class can be evenly divided by the integer K.</p>\r\n<p>You are the homeroom teacher for class 1-1. There are N students in your class, and the i-th student wrote down A<sub>i</sub>.</p>\r\n<p>Please create a program to calculate your class's score.</p>\r\n<p>Please be mindful of overflow.</p>\r\n\r\n<h2>Input Rules</h2>\r\n<p>The program will be executed as follows:</p>\r\n<pre><code class='language-text'>./myApp &lt; Input.In</code></pre>\r\n<p>This program will receive standard input in the following format:</p>\r\n<pre><code class='language-text'>N K\r\nA1 ... AN</code></pre>\r\n\r\n<h2>Output Rules</h2>\r\n<p>Please output the answer in the following format to standard output:</p>\r\n<pre><code class='language-text'>ans</code></pre>\r\n<p>Output the answer on the first line.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; N &le; 10^6</code>, integer</li>\r\n    <li><code>2 &le; K &le; 10^9</code>, integer</li>\r\n    <li><code>1 &le; A<sub>i</sub> &le; 10^9</code>, integer</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3 5\r\n10 100 50\r\nOutput:\r\n5</code></pre>\r\n<p><strong>Explanation:</strong> The product of the three numbers, 50000, can be divided by 5 exactly 5 times.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5 10\r\n100000 100000 100000 100000 100000</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <numeric>\n#include <algorithm>\n\nclass Solution {\npublic:\n    long long calculateScore(int N, long long K, const std::vector<long long>& A) {\n        // Core logic to calculate the class score goes here.\n        return 0;\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    int N;\n    long long K;\n    std::cin >> N >> K;\n\n    std::vector<long long> A(N);\n    for (int i = 0; i < N; ++i) {\n        std::cin >> A[i];\n    }\n\n    Solution solution;\n    long long result = solution.calculateScore(N, K, A);\n\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accenture Japan",
        "company_id": 610
    },
    {
        "id": 1738,
        "title": "Valid Puzzle",
        "problem_statement": "<h1>Valid Puzzle</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Takashi is playing a puzzle game. The puzzle involves placing multiple puzzle pieces on a square board and filling in all of the gaps of the board.</p>\r\n\r\n<p>The board and the pieces are characterized as follows:</p>\r\n<ul>\r\n    <li>The board is a square of size <code>N &times; N</code>, divided into squares of size <code>1 &times; 1</code>.</li>\r\n    <li>The pieces consist of one or more tiles of size <code>1 &times; 1</code>, with the tiles in a piece being connected by sharing an entire side.</li>\r\n</ul>\r\n\r\n<p>The rules of the game are as follows:</p>\r\n<ul>\r\n    <li>Pieces can only be placed so that each tile exactly overlaps a square on the board.</li>\r\n    <li>Pieces can be rotated, but not turned over.</li>\r\n    <li>Multiple pieces must not overlap on one square of the board.</li>\r\n    <li>A piece must not extend beyond the edge of the board.</li>\r\n    <li>All pieces must be used.</li>\r\n    <li>If a board cannot contain all of the pieces or contains any gaps after all of the pieces are placed, the puzzle is not considered a valid puzzle.</li>\r\n</ul>\r\n\r\n<p>In the example above (referring to an image showing piece shapes), the left side of the puzzle meets the requirements for a piece, but the right side does not.</p>\r\n\r\n<p>Takashi has a board and some pieces, but he is not sure if they form a valid puzzle. Your task is to write a program to check whether the board and the pieces that Takashi has form a valid puzzle.</p>\r\n\r\n<p>The puzzle Takashi holds consists of a board of <code>N &times; N</code> and <code>M</code> pieces. The shape and size of each piece is given as how it would appear if it were placed at an arbitrary location on the board. Specifically, for each piece, <code>N</code> strings with <code>N</code> characters each are given. The strings consist of only the characters <code>.</code> and <code>#</code>; the character <code>.</code> indicates a square without a tile and the character <code>#</code> indicates a square with a tile. The <code>j</code>-th line of the <code>i</code>-th piece is denoted by <code>S<sub>i,j</sub></code>. Note that in the input the pieces are not necessarily placed in the location they will occupy in the finished puzzle.</p>\r\n\r\n<p>Your CLI application should run with the following command:</p>\r\n<pre><code class='language-text'>./myApp &lt; input.in</code></pre>\r\n\r\n<p>The format of <code>input.in</code> is as follows:</p>\r\n<pre><code class='language-text'>N M\r\nS_1,1\r\n...\r\nS_1,N\r\n...\r\nS_M,1\r\n...\r\nS_M,N</code></pre>\r\n\r\n<p><strong>Output Rules:</strong></p>\r\n<p>Output <code>yes</code> if the board can be filled exactly with all of the given pieces, or <code>no</code> if it is not possible.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<p>Standard input (<code>00_sample1.in</code>)</p>\r\n<pre><code class='language-text'>2 3\r\n##\r\n..\r\n.#\r\n..\r\n.#\r\n..</code></pre>\r\n<p>Standard output</p>\r\n<pre><code class='language-text'>yes</code></pre>\r\n<p><strong>Explanation:</strong> Since the three pieces given are as above (referring to an image showing the pieces and their placement), we can complete the puzzle by placing them as shown in the figure below.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<p>Standard input (<code>00_sample2.in</code>)</p>\r\n<pre><code class='language-text'>3 3\r\n.#.\r\n.#.\r\n.#.\r\n##.\r\n.##\r\n...\r\n.##\r\n.##\r\n...</code></pre>\r\n<p>Standard output</p>\r\n<pre><code class='language-text'>no</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; N &le; 4</code>, integer</li>\r\n    <li><code>1 &le; M &le; N<sup>2</sup></code>, integer</li>\r\n    <li><code>S<sub>i,j</sub></code> is a string of length <code>N</code> consisting of <code>.</code> or <code>#</code>.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n\nclass Solution {\npublic:\n    std::string solve(int N, int M, const std::vector<std::vector<std::string>>& pieces) {\n        // TODO: Implement the solution logic\n        return \"\";\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    int N, M;\n    std::cin >> N >> M;\n\n    std::vector<std::vector<std::string>> pieces(M, std::vector<std::string>(N));\n    for (int i = 0; i < M; ++i) {\n        for (int j = 0; j < N; ++j) {\n            std::cin >> pieces[i][j];\n        }\n    }\n\n    Solution solution;\n    std::string result = solution.solve(N, M, pieces);\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accenture Japan",
        "company_id": 610
    },
    {
        "id": 1739,
        "title": "Pseudocode Counter Value",
        "problem_statement": "```html\r\n<h1>Pseudocode Counter Value</h1>\r\n<h2>Problem Description</h2>\r\n<p>In the following pseudocode, what is the counter's value at the end? Answer in half-width numbers.</p>\r\n<pre><code class='language-text'>int n = 10;\r\nint counter = 0;\r\n\r\nfor i in [0 to n]\r\n  for j in [i to n]\r\n    counter++;</code></pre>\r\n\r\n<h1>SQL Injection Description</h1>\r\n<h2>Problem Description</h2>\r\n<p>Choose the statement that correctly describes SQL injection.</p>\r\n<ul>\r\n    <li>Numerous requests or data are sent from numerous computers to a single service to cause the service to be unavailable.</li>\r\n    <li>Malicious code is injected into the SQL query of the input data in the form of a web application to tamper with the database.</li>\r\n    <li>A large amount of log data output from various pieces of software and devices such as the OS, databases, applications, and network devices is analyzed.</li>\r\n    <li>A suspicious program is run in a special region in order to prevent something bad from happening in other regions.</li>\r\n</ul>\r\n\r\n<h1>Memory Crash Resolution</h1>\r\n<h2>Problem Description</h2>\r\n<p>A binary program failed to run because it crashed due to lack of memory. Which of the following is <strong>NOT</strong> an appropriate action to solve this issue?</p>\r\n<ul>\r\n    <li>Use garbage collection to prevent certain kinds of memory leaks.</li>\r\n    <li>Terminate other processes running at the same time.</li>\r\n    <li>Shorten the binary filename to save memory usage.</li>\r\n    <li>Consider running the program on a device with more RAM capacity.</li>\r\n</ul>\r\n\r\n<h1>Microservice Architecture Advantages</h1>\r\n<h2>Problem Description</h2>\r\n<p>Microservice architecture provides many benefits over monolithic architecture. Which is/are the advantage(s) of microservice architecture? Select all correct options.</p>\r\n<ul>\r\n    <li>Deployment in a microservice architecture is simpler because a microservice can be deployed for each service.</li>\r\n    <li>Microservice architecture can reduce learning costs because it has a smaller codebase than monolithic systems.</li>\r\n    <li>Microservice architecture can reduce single points of failure (SPOFs) because each service is loosely coupled.</li>\r\n    <li>Microservice architecture can improve the total computational efficiency of the product because each service is minimal.</li>\r\n</ul>\r\n\r\n<h1>Minimum Exchanges for Sorting</h1>\r\n<h2>Problem Description</h2>\r\n<p>Fill in the blanks of the following sentences with half-width digits.</p>\r\n<p>I want to sort the sequence a = [5, 2, 8, 3, 1, 6, 7, 9] in ascending order by exchanging adjacent numbers. In this case, it is necessary to exchange at least ___ times.</p>\r\n\r\n<h1>Prompt Injection Description</h1>\r\n<h2>Problem Description</h2>\r\n<p>Choose the correct description of prompt injection from the following.</p>\r\n<ul>\r\n    <li>Using a prompt to attack a machine learning model by maliciously altering the learning rate or other hyperparameters used by the machine learning model during training.</li>\r\n    <li>A malicious third party tampering with a normal user's prompt to intentionally display distorted output to the user.</li>\r\n    <li>Creating a prompt that causes the application to ignore instructions previously given to it.</li>\r\n    <li>Providing false or expedient information to the LLM by means of prompts in order to attack the machine learning model that has learned this information.</li>\r\n</ul>\r\n\r\n<h1>Incorrect REST API Description</h1>\r\n<h2>Problem Description</h2>\r\n<p>Which of the following is an incorrect description of REST API (Representational State Transfer Application Program Interface)?</p>\r\n<ul>\r\n    <li>All resources have a unique URI (Universal Resource Identifier).</li>\r\n    <li>Perform stateless communication between servers and clients.</li>\r\n    <li>Attach tags such as GET and POST to URI by an operation.</li>\r\n    <li>The return result is notified by HTTP (HyperText Transfer Protocol) status code.</li>\r\n</ul>\r\n\r\n<h1>Incorrect Serverless Architecture Description</h1>\r\n<h2>Problem Description</h2>\r\n<p>Choose the description that is incorrect regarding serverless architecture.</p>\r\n<ul>\r\n    <li>Applications deployed in serverless architecture start only when needed, automatically scale down during idle periods, and can reduce costs.</li>\r\n    <li>Billing in serverless architecture typically adjusts automatically based on factors like the number of requests, and in some cases, there may be no charges when there are no requests.</li>\r\n    <li>Even when instances scale up, serverless architecture has the feature of zero-second initialization, allowing the application to start processing requests instantly.</li>\r\n    <li>While serverless architecture allows you to be server-agnostic, fine tuning low-level settings below the OS layer on the servers where applications run is often more challenging than using IaaS.</li>\r\n</ul>\r\n\r\n<h1>UNIX chmod Command Meaning</h1>\r\n<h2>Problem Description</h2>\r\n<p>In UNIX-like OS, which is the correct meaning of the command <code>chmod u+x foo</code>?</p>\r\n<ul>\r\n    <li>Give execute permission to owner of the file named foo.</li>\r\n    <li>Give the group that the file named foo belongs to, execute permission of foo.</li>\r\n    <li>Give execute permission to all users who use the file foo.</li>\r\n    <li>Give execute permission to the owner of the file named foo and removes execute permission of all other users.</li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n\nclass Solution {\npublic:\n    long long solve(int n) {\n        // Core logic to calculate the final value of the counter goes here.\n        // The pseudocode is:\n        // int counter = 0;\n        // for i in [0 to n]\n        //   for j in [i to n]\n        //     counter++;\n        return 0; // Placeholder\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    // The value of n is given in the problem statement.\n    int n = 10;\n\n    Solution solution;\n    long long result = solution.solve(n);\n\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accenture Japan",
        "company_id": 610
    },
    {
        "id": 1740,
        "title": "Purpose of Database Indexes",
        "problem_statement": "<h1>Purpose of Database Indexes</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Which of the following is the purpose for using indexes in relational database?</p>\r\n<ul>\r\n    <li>A. By arranging storage locations of relational tables close to each other, search and update are performed faster.</li>\r\n    <li>B. Search speed is improved due to efficient access to the storage data.</li>\r\n    <li>C. In the other tables involved, restrictions are kept to maintain referential consistency between records.</li>\r\n    <li>D. Saving disk capacity when distributing large single tables in multiple drives.</li>\r\n</ul>\r\n\r\n<h1>Different Logical Expression</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There are boolean variables a and b that take true or false values. Which of the following is a different logical expression?</p>\r\n<ul>\r\n    <li>A. (a and b) or ((not a) and (not b))</li>\r\n    <li>B. a xor b</li>\r\n    <li>C. ((not a) and b) or (a and (not b))</li>\r\n    <li>D. (a or b) and ((not a) or (not b))</li>\r\n</ul>\r\n\r\n<h1>Inappropriate Statement about Generative AI</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Choose the most <strong>inappropriate</strong> statement about Generative AI.</p>\r\n<ul>\r\n    <li>A. Generative AI is an AI system that can generate text, images, or other media.</li>\r\n    <li>B. Typical Generative AI systems include ChatGPT, which was built by OpenAI using GPT-3 and GPT-4.</li>\r\n    <li>C. Generative AI is built on a reinforcement learning framework that aims to maximize long-term value based on input.</li>\r\n    <li>D. Generative AI can perform automatic program generation if programs are included in the training data.</li>\r\n</ul>\r\n\r\n<h1>Select SQL Query for Sales Data</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The <code>sales</code> table holds all logs of sales. Every log of sales has an ID, a date, and a sales volume. Select an SQL query to list the dates and the total sales volumes for each date in which the total sales volume is more than 100000, in descending order of the total sales volumes.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Query A:</h3>\r\n<pre><code class='language-javascript'>SELECT date, SUM(sales) AS total_sales\r\nFROM Sales\r\nGROUP BY date\r\nIN (total_sales > 100000)\r\nORDER BY total_sales DESC;</code></pre>\r\n\r\n<h3>Query B:</h3>\r\n<pre><code class='language-javascript'>SELECT date, SUM(sales) AS total_sales\r\nFROM Sales\r\nGROUP BY date\r\nWHERE total_sales > 100000\r\nORDER BY total_sales DESC;</code></pre>\r\n\r\n<h3>Query C:</h3>\r\n<pre><code class='language-javascript'>SELECT date, SUM(sales) AS total_sales\r\nFROM Sales\r\nORDER BY total_sales\r\nFROM Sales\r\nWHERE total_sales > 100000;</code></pre>\r\n\r\n<h3>Query D:</h3>\r\n<pre><code class='language-javascript'>SELECT date, SUM(sales) AS total_sales\r\nFROM Sales\r\nGROUP BY date\r\nHAVING total_sales > 100000\r\nORDER BY total_sales DESC;</code></pre>\r\n\r\n<h2>Follow-up</h2>\r\n<p>Choose the correct query:</p>\r\n<ul>\r\n    <li>A. Query A</li>\r\n    <li>B. Query B</li>\r\n    <li>C. Query C</li>\r\n    <li>D. Query D</li>\r\n</ul>\r\n\r\n<h1>Print ASCII Art Square Pattern</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>I want to create a program that outputs ASCII art of size <code>n x n</code> (<code>3 &lt;= n &lt;= 100</code>) where character <code>.</code> is surrounded by the character <code>#</code>. For example, the program should output the following pattern when given <code>n = 7</code>.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>#######\r\n#.....#\r\n#.....#\r\n#.....#\r\n#.....#\r\n#.....#\r\n#######</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>3 &lt;= n &lt;= 100</code></li>\r\n</ul>\r\n\r\n<h2>Follow-up</h2>\r\n<p>This C++ implementation receives an input of integer <code>n</code> and should return the corresponding pattern.</p>\r\n<pre><code class='language-javascript'>void printSquare(int n) {\r\n    for (int i = 0; i &lt; n; i++) {\r\n        for (int j = 0; j &lt; n; j++) {\r\n            if ([ A ]) {\r\n                cout &lt;&lt; \"#\";\r\n            } else {\r\n                cout &lt;&lt; \".\";\r\n            }\r\n        }\r\n        cout &lt;&lt; endl;\r\n    }\r\n}</code></pre>\r\n<p>Choose the appropriate formula to enter into <code>[ A ]</code>.</p>\r\n<ul>\r\n    <li>A. <code>i == 0 || j == 0</code></li>\r\n    <li>B. <code>i == n || j == n</code></li>\r\n    <li>C. <code>i == 0 || j == 0 || i == n-1 || j == n-1</code></li>\r\n    <li>D. <code>i == 0 || j == 0 || i == n || j == n</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n\nclass Solution {\npublic:\n    std::vector<std::string> solve(int n) {\n        // Your implementation here\n        return {};\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    int n;\n    std::cin >> n;\n\n    Solution solver;\n    std::vector<std::string> result = solver.solve(n);\n\n    for (const std::string& line : result) {\n        std::cout << line << std::endl;\n    }\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accenture Japan",
        "company_id": 610
    },
    {
        "id": 1741,
        "title": "Regression Testing Definition",
        "problem_statement": "<h1>Regression Testing Definition</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>What is regression testing?</p>\r\n<p>A. Testing backwards.</p>\r\n<p>B. Verifying that a technical change or enhancement did not create to ensure that previously developed and tested software still performs after a change</p>\r\n<p>C. Testing in order to bring back a former client</p>\r\n<p>D. None of the above</p>\r\n\r\n<h1>Variable Value After Procedure</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>For the two variables x and y, execute the following procedure from 1 to 4. What is the value of x when processing is over?</p>\r\n<ol>\r\n    <li>Assign 2 to x and assign 3 to y.</li>\r\n    <li>Assign y by y minus 1.</li>\r\n    <li>Assign the sum of the value of x and the value of y into x.</li>\r\n    <li>If y &#x2260; 0, return to step 2. If y = 0, the process is terminated.</li>\r\n</ol>\r\n<p>Fill in the blanks of the following sentences with half-width numbers:</p>\r\n<p>When processing is finished, the value of x becomes</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: Initial x = 2, y = 3\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong>\r\nInitial: x = 2, y = 3</p>\r\n<p><strong>Iteration 1:</strong></p>\r\n<ul>\r\n    <li>Step 1: (Already done) x = 2, y = 3</li>\r\n    <li>Step 2: y = y - 1 &#x21D2; y = 3 - 1 = 2</li>\r\n    <li>Step 3: x = x + y &#x21D2; x = 2 + 2 = 4</li>\r\n    <li>Step 4: y &#x2260; 0 (2 &#x2260; 0) is true, return to step 2.</li>\r\n</ul>\r\n<p><strong>Iteration 2:</strong></p>\r\n<ul>\r\n    <li>Step 2: y = y - 1 &#x21D2; y = 2 - 1 = 1</li>\r\n    <li>Step 3: x = x + y &#x21D2; x = 4 + 1 = 5</li>\r\n    <li>Step 4: y &#x2260; 0 (1 &#x2260; 0) is true, return to step 2.</li>\r\n</ul>\r\n<p><strong>Iteration 3:</strong></p>\r\n<ul>\r\n    <li>Step 2: y = y - 1 &#x21D2; y = 1 - 1 = 0</li>\r\n    <li>Step 3: x = x + y &#x21D2; x = 5 + 0 = 5</li>\r\n    <li>Step 4: y &#x2260; 0 (0 &#x2260; 0) is false. The process is terminated.</li>\r\n</ul>\r\n<p>The final value of x is 5.</p>\r\n\r\n<h1>Public-Key Cryptosystem Complexity</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Choose the public-key cryptosystem that utilizes the fact that the complexity does not fit within polynomial time.</p>\r\n<p>A. RSA</p>\r\n<p>B. IDEA</p>\r\n<p>C. DSA</p>\r\n<p>D. AES</p>\r\n\r\n<h1>Analyze Java Sum Function</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The below Java function receives an input of integer <code>n</code> and outputs the sum of <code>1 + 2 + &#x2022;&#x2022;&#x2022; + n</code>.</p>\r\n<pre><code class='language-javascript'>static int sum(int n) {\r\n    int answer = 0;\r\n    for (int i = 0; i &lt; n; i++) {\r\n        answer += i + 1;\r\n    }\r\n    return answer;\r\n}</code></pre>\r\n<p>Choose the incorrect statement from below.</p>\r\n<p><code>int</code> is a signed 32 bit integer.</p>\r\n<p>A. If this function is given an input of negative n, it will loop infinitely.</p>\r\n<p>B. <code>int</code> is not a multi-precision integer type, so an overflow will occur if you enter a large value.</p>\r\n<p>C. <code>sum(0)</code> will return <code>0</code>.</p>\r\n<p>D. All of the above is correct.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1: Statement A Analysis</h3>\r\n<pre><code class='language-text'>Input: n = -5\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> If <code>n</code> is negative (e.g., <code>-5</code>), the loop condition <code>i &lt; n</code> (e.g., <code>0 &lt; -5</code>) is initially false. The loop body will not execute at all. The function will immediately return the initial value of <code>answer</code>, which is <code>0</code>. Therefore, the statement \"If this function is given an input of negative n, it will loop infinitely\" is <strong>incorrect</strong>.</p>\r\n\r\n<h3>Example 2: Statement B Analysis</h3>\r\n<pre><code class='language-text'>Input: n = 100000\r\nOutput: 5000050000 (if int could hold it)</code></pre>\r\n<p><strong>Explanation:</strong> The sum of 1 to 100,000 is <code>(100000 * 100001) / 2 = 5,000,050,000</code>. A standard 32-bit signed <code>int</code> in Java has a maximum value of <code>2,147,483,647</code>. Since <code>5,000,050,000</code> exceeds this limit, an overflow will occur. Therefore, the statement \"<code>int</code> is not a multi-precision integer type, so an overflow will occur if you enter a large value\" is <strong>correct</strong>.</p>\r\n\r\n<h3>Example 3: Statement C Analysis</h3>\r\n<pre><code class='language-text'>Input: n = 0\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> If <code>n</code> is <code>0</code>, the loop condition <code>i &lt; n</code> (i.e., <code>0 &lt; 0</code>) is false. The loop body will not execute. The function will return the initial value of <code>answer</code>, which is <code>0</code>. Therefore, the statement \"<code>sum(0)</code> will return <code>0</code>\" is <strong>correct</strong>.</p>\r\n\r\n<h1>Social Engineering in Information Security</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Which of the following is an example of social engineering in the context of information security?</p>\r\n<p>A. While out of the office, a third party stole a peek at the password written in your notebook and they illegally logged into your account with it.</p>\r\n<p>B. Your SNS password was set using a set of consecutive numbers and a third party was able to discover it by brute force attack.</p>\r\n<p>C. You accidentally entered your password into a phishing site similar to the SNS you use and the password was leaked.</p>\r\n<p>D. Your SNS password was leaked due to its vulnerability and this allowed an illegal login to an other SNS where you had the same password set.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n#include <numeric>\n#include <algorithm>\n\nclass Solution {\npublic:\n    /**\n     * This problem statement is a collection of multiple-choice questions.\n     * The most suitable part for a coding solution is the \"Variable Value After Procedure\" section.\n     * The procedure is as follows:\n     * 1. Assign 2 to x and assign 3 to y.\n     * 2. Assign y by y minus 1.\n     * 3. Assign the sum of the value of x and the value of y into x.\n     * 4. If y != 0, return to step 2. If y = 0, the process is terminated.\n     * The task is to find the final value of x.\n     * Since the initial values are fixed, the solve method does not require any parameters.\n     */\n    int solve() {\n        // Core logic to simulate the procedure will go here.\n        return 0;\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    // The problem statement does not specify any input to be read from standard input.\n    // The \"Variable Value After Procedure\" problem has fixed initial values.\n    // Therefore, we directly call the solution method without reading any input.\n    // No loop for multiple test cases is needed.\n\n    Solution solution;\n    int result = solution.solve();\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accenture Japan",
        "company_id": 610
    }
]