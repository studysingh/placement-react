[
    {
        "id": 1769,
        "title": "Mini-Markdown Renderer",
        "problem_statement": "<h1>Mini-Markdown Renderer</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You're building a tiny Markdown-to-HTML renderer for a note-taking app. Given a document as lines of text, convert it to HTML using the simplified rules below. Focus on correctness and clean handling of edge cases.</p>\r\n\r\n<h2>Input</h2>\r\n<ul>\r\n    <li>A list of <code>n</code> lines (<code>0 &lt;= n &lt;= 1000</code>).</li>\r\n    <li>Each line is UTF-8 text (<code>len &lt;= 10^3</code> chars per line).</li>\r\n    <li>Lines may be empty.</li>\r\n</ul>\r\n\r\n<h2>Output</h2>\r\n<p>A single string containing the HTML of the rendered document (only the fragment, no <code>&lt;html&gt;</code> or <code>&lt;body&gt;</code> tags).</p>\r\n\r\n<h2>Rendering Rules</h2>\r\n<h3>1. Headings</h3>\r\n<ul>\r\n    <li>Lines starting with <code>#</code>, <code>##</code>, or <code>###</code> become <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code> respectively.</li>\r\n    <li>Only 1-3 leading <code>#</code> followed by one space count.</li>\r\n    <li>Preserve internal spaces.</li>\r\n</ul>\r\n<p><strong>Examples:</strong></p>\r\n<ul>\r\n    <li><code># Title</code> &rarr; <code>&lt;h1&gt;Title&lt;/h1&gt;</code></li>\r\n    <li><code>## Section Name</code> &rarr; <code>&lt;h2&gt;Section Name&lt;/h2&gt;</code></li>\r\n    <li><code>### Subsection</code> &rarr; <code>&lt;h3&gt;Subsection&lt;/h3&gt;</code></li>\r\n</ul>\r\n\r\n<h3>2. Paragraphs</h3>\r\n<ul>\r\n    <li>Any non-empty line that is not a heading becomes part of a paragraph.</li>\r\n    <li>Consecutive lines are joined with a single space inside <code>&lt;p&gt;...&lt;/p&gt;</code>.</li>\r\n    <li>A blank line ends the current paragraph.</li>\r\n</ul>\r\n<p><strong>Examples:</strong></p>\r\n<h4>Input:</h4>\r\n<pre><code class='language-text'>Hello world</code></pre>\r\n<h4>Output:</h4>\r\n<pre><code class='language-text'>&lt;p&gt;Hello world&lt;/p&gt;</code></pre>\r\n\r\n<h4>Input:</h4>\r\n<pre><code class='language-text'>This is line one\r\nThis is line two</code></pre>\r\n<h4>Output:</h4>\r\n<pre><code class='language-text'>&lt;p&gt;This is line one This is line two&lt;/p&gt;</code></pre>\r\n\r\n<h4>Input:</h4>\r\n<pre><code class='language-text'>First paragraph\r\n\r\nSecond paragraph</code></pre>\r\n<h4>Output:</h4>\r\n<pre><code class='language-text'>&lt;p&gt;First paragraph&lt;/p&gt;&lt;p&gt;Second paragraph&lt;/p&gt;</code></pre>\r\n\r\n<h3>3. Bold</h3>\r\n<ul>\r\n    <li><code>**text**</code> &rarr; <code>&lt;b&gt;text&lt;/b&gt;</code></li>\r\n    <li>Must have matching <code>**</code> pairs, non-empty, not spanning lines.</li>\r\n</ul>\r\n<p><strong>Examples:</strong></p>\r\n<ul>\r\n    <li><code>This is **bold** text.</code> &rarr; <code>&lt;p&gt;This is &lt;b&gt;bold&lt;/b&gt; text.&lt;/p&gt;</code></li>\r\n    <li><code>**Hello** world</code> &rarr; <code>&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt; world&lt;/p&gt;</code></li>\r\n    <li><code>Mixing **bold** and **again**</code> &rarr; <code>&lt;p&gt;Mixing &lt;b&gt;bold&lt;/b&gt; and &lt;b&gt;again&lt;/b&gt;&lt;/p&gt;</code></li>\r\n</ul>\r\n\r\n<h3>4. Italic</h3>\r\n<ul>\r\n    <li><code>_text_</code> &rarr; <code>&lt;i&gt;text&lt;/i&gt;</code></li>\r\n    <li>Must have matching <code>_</code> pairs, non-empty, not spanning lines.</li>\r\n    <li>Underscores inside words (e.g., <code>foo_bar</code>) are not italics.</li>\r\n</ul>\r\n<p><strong>Examples:</strong></p>\r\n<ul>\r\n    <li><code>This is _italic_ text.</code> &rarr; <code>&lt;p&gt;This is &lt;i&gt;italic&lt;/i&gt; text.&lt;/p&gt;</code></li>\r\n    <li><code>_Hello_ world</code> &rarr; <code>&lt;p&gt;&lt;i&gt;Hello&lt;/i&gt; world&lt;/p&gt;</code></li>\r\n    <li><code>Mixing _one_ and _two_.</code> &rarr; <code>&lt;p&gt;Mixing &lt;i&gt;one&lt;/i&gt; and &lt;i&gt;two&lt;/i&gt;.&lt;/p&gt;</code></li>\r\n</ul>\r\n\r\n<h3>5. Links</h3>\r\n<ul>\r\n    <li><code>[label](url)</code> &rarr; <code>&lt;a href=\"url\"&gt;label&lt;/a&gt;</code></li>\r\n    <li>No nesting allowed.</li>\r\n    <li>If malformed, leave literal.</li>\r\n</ul>\r\n<p><strong>Examples:</strong></p>\r\n<ul>\r\n    <li><code>[Google](https://google.com)</code> &rarr; <code>&lt;p&gt;&lt;a href=\"https://google.com\"&gt;Google&lt;/a&gt;&lt;/p&gt;</code></li>\r\n    <li><code>Search on [Bing](https://bing.com) now</code> &rarr; <code>&lt;p&gt;Search on &lt;a href=\"https://bing.com\"&gt;Bing&lt;/a&gt; now&lt;/p&gt;</code></li>\r\n    <li><code>Multiple [link.a](com) and [more](b.com)</code> &rarr; <code>&lt;p&gt;Multiple &lt;a href=\"a.com\"&gt;link&lt;/a&gt; and &lt;a href=\"b.com\"&gt;more&lt;/a&gt;&lt;/p&gt;</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n# Title\r\nThis is a note with **bold** text.\r\nAnother _italic_ word.\r\nOutput:\r\n&lt;h1&gt;Title&lt;/h1&gt;&lt;p&gt;This is a note with &lt;b&gt;bold&lt;/b&gt; text. Another &lt;i&gt;italic&lt;/i&gt; word.&lt;/p&gt;</code></pre>\r\n<p><strong>Explanation:</strong> The input starts with the number of lines (3), followed by a level 1 heading. The next two lines form a paragraph, where \"bold\" is rendered as bold and \"italic\" is rendered as italic.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n## Section\r\nHere is a paragraph with a [link](https://example.com).\r\nIt also has **bold** and _italic_ words.\r\nOutput:\r\n&lt;h2&gt;Section&lt;/h2&gt;&lt;p&gt;Here is a paragraph with a &lt;a href=\"https://example.com\"&gt;link&lt;/a&gt;. It also has &lt;b&gt;bold&lt;/b&gt; and &lt;i&gt;italic&lt;/i&gt; words.&lt;/p&gt;</code></pre>\r\n<p><strong>Explanation:</strong> This example shows a level 2 heading, followed by a paragraph containing a link, bold text, and italic text.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n# Notes\r\nThis is the first line\r\ncontinued on the second line.\r\n\r\nThis is a new paragraph.\r\nOutput:\r\n&lt;h1&gt;Notes&lt;/h1&gt;&lt;p&gt;This is the first line continued on the second line.&lt;/p&gt;&lt;p&gt;This is a new paragraph.&lt;/p&gt;</code></pre>\r\n<p><strong>Explanation:</strong> This example demonstrates a level 1 heading, followed by a two-line paragraph. A blank line then separates this from a new single-line paragraph.</p>\r\n\r\n<h2>Code Structure (C++)</h2>\r\n<pre><code class='language-cpp'>#include &lt;bits/stdc++.h&gt;\r\n\r\n// Complete the 'renderMarkdown' function below.\r\n// The function is expected to return a STRING.\r\n// The function accepts STRING ARRAY lines as parameter.\r\nstring renderMarkdown(vector&lt;string&gt; lines) {\r\n\r\n}\r\n\r\nint main() {\r\n\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n#include <numeric>\n#include <limits>\n\nclass Solution {\npublic:\n    /**\n     * @brief Renders a list of mini-markdown lines into an HTML string.\n     * @param lines A vector of strings, where each string is a line of the document.\n     * @return A single string containing the rendered HTML fragment.\n     */\n    std::string renderMarkdown(const std::vector<std::string>& lines) {\n        // Core logic to render markdown to HTML goes here.\n        // This function should process headings, paragraphs, bold, italic, and links.\n        return \"\";\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    int n;\n    std::cin >> n;\n    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\\n'); // Consume the rest of the line after reading n\n\n    std::vector<std::string> lines;\n    if (n > 0) {\n        lines.resize(n);\n        for (int i = 0; i < n; ++i) {\n            std::getline(std::cin, lines[i]);\n        }\n    }\n\n    Solution solution;\n    std::string result = solution.renderMarkdown(lines);\n\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "hackerrank",
        "company_id": 622
    }
]