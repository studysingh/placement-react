[
    {
        "id": 1131,
        "title": "Merge Networks",
        "problem_statement": "<h1>Merge Networks</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Developers are working on a new mapping library to help road planning. They are working on a new approach to minimize distances between places. Currently, there are two networks of places, <code>networkA</code> and <code>networkB</code>, in the form of two trees. The number of nodes in each network are <code>networkA_nodes</code> and <code>networkB_nodes</code> respectively. There is an undirected edge from <code>networkA_from[i]</code> to <code>networkA_to[i]</code> (1 &le; i &le; <code>networkA_nodes</code>) in <code>networkA</code>. Similarly, there is an undirected edge from <code>networkB_from[i]</code> to <code>networkB_to[i]</code> (1 &le; i &le; <code>networkB_nodes</code>) in <code>networkB</code>.</p>\r\n\r\n<p>Their goal is to add one edge that connects a node in each network to minimize the maximum distance between any two nodes. Determine that distance.</p>\r\n\r\n<p>Given that one new road (or undirected edge) connecting one of the places in <code>networkA</code> and another in <code>networkB</code> is to be added in such a way that the maximum distance between any two different places in the final network is minimised, find the minimum possible required distance.</p>\r\n\r\n<p><strong>Note:</strong> The distance between two nodes is defined as the number of edges in the simple path from one node to another. A simple path is a sequence of nodes connected by edges, and no node is used more than once in the sequence.</p>\r\n\r\n<p>For example, consider a scenario where networks A and B are joined. If network A and B are connected through A1 and B1, the maximum distance is 4 (between nodes A3 and B3). The minimum value in the \"Maximum Distance\" column across all possible connections is 3.</p>\r\n\r\n<p>Complete the function <code>calculateMin</code> in the editor below. It must return an answer to the challenge as an integer.</p>\r\n\r\n<p>The function <code>calculateMin</code> has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>int networkA_nodes</code>: the number of nodes in network A</li>\r\n    <li><code>vector&lt;int&gt; networkA_from</code>: one end of the edge in network A (array of size <code>networkA_nodes - 1</code>)</li>\r\n    <li><code>vector&lt;int&gt; networkA_to</code>: the other end of the edge in network A (array of size <code>networkA_nodes - 1</code>)</li>\r\n    <li><code>int networkB_nodes</code>: the number of nodes in network B</li>\r\n    <li><code>vector&lt;int&gt; networkB_from</code>: one end of the edge in network B (array of size <code>networkB_nodes - 1</code>)</li>\r\n    <li><code>vector&lt;int&gt; networkB_to</code>: the other end of the edge in network B (array of size <code>networkB_nodes - 1</code>)</li>\r\n</ul>\r\n\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n    <li><code>int</code>: the minimum possible maximum distance between two nodes after adding the edge as described</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nnetworkA_nodes = 2\r\nnetworkA_from = [1]\r\nnetworkA_to = [2]\r\nnetworkB_nodes = 2\r\nnetworkB_from = [1]\r\nnetworkB_to = [1]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> One way to join the networks is to add an edge between nodes 1A and 1B. The maximum distance is 3 between 2A and 2B.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nnetworkA_nodes = 4\r\nnetworkA_from = [1, 1, 1]\r\nnetworkA_to = [2, 3, 4]\r\nnetworkB_nodes = 2\r\nnetworkB_from = [1]\r\nnetworkB_to = [2]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> One way to achieve this configuration is to add an edge between nodes 1A and 1B. The maximum distance is 3 between any of nodes 1A, 2A, or 3A, and node 2B.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; networkA_nodes &le; 10^5</code></li>\r\n    <li><code>1 &le; networkA_from[i], networkA_to[i] &le; networkA_nodes</code></li>\r\n    <li><code>1 &le; networkB_nodes &le; 10^5</code></li>\r\n    <li><code>1 &le; networkB_from[i], networkB_to[i] &le; networkB_nodes</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "UBS_7aug",
        "company_id": 376
    }
]