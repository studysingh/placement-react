[
    {
        "id": 1141,
        "title": "Covid - 20",
        "problem_statement": "<h1>Covid - 20</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A lab was trying to synthesize a new virus. They had 1 cell of that virus in a vial on day 1.</p>\r\n<p>The virus starts giving birth to a new cell every day after B days and it also dies after C days.</p>\r\n<p>On a new day, the cell will die (if it is supposed to die) before it gives birth to new cells.</p>\r\n<p>Find the number of virus cells in the vial after A days.</p>\r\n<p><strong>Note:</strong> Since, the answer can be very large, output the answer modulo 10<sup>9</sup>+7</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 <= A <= 10<sup>5</sup></li>\r\n    <li>1 <= B <= A</li>\r\n    <li>B < C <= A</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first argument is the integer A.</p>\r\n<p>The second argument is the integer B.</p>\r\n<p>The third argument is the integer C.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return a single integer denoting the number of virus cells on day A.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nA = 5\r\nB = 2\r\nC = 3\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> The number of cells in the vial from day 1 to day 5 are [1, 1, 2, 1, 2]</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nA = 5\r\nB = 1\r\nC = 5\r\nOutput: 16</code></pre>\r\n<p><strong>Explanation:</strong> The number of cells in the vial from day 1 to day 5 are [1, 2, 4, 8, 16]</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1149,
        "title": "Stacking Money",
        "problem_statement": "<h1>Stacking Money</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>After a tiring fight against the Mad Titan, Wanda and Vision settle down to a normal life. Now, they have to worry about trivial things like money. One day, Vision was stacking coins. He made N different stacks of coins represented in the form of an integer array A, where each stack had A coins.</p>\r\n<p>Vision asked Wanda the following question: Find the sum of the difference of maximum and minimum number of coins over all subarrays of A.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= N &lt;= 10<sup>5</sup></code></li>\r\n    <li><code>1 &lt;= A[i] &lt;= 10<sup>9</sup></code></li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first argument is the integer array A.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return a single long integer denoting the value Vision asked for.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 2, 3]\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong> The different subarrays are with their difference in maximum and minimum are:</p>\r\n<ul>\r\n    <li><code>[1] -&gt; (1) - (1) = 0</code></li>\r\n    <li><code>[2] -&gt; (2) - (2) = 0</code></li>\r\n    <li><code>[3] -&gt; (3) - (3) = 0</code></li>\r\n    <li><code>[1, 2] -&gt; (2) - (1) = 1</code></li>\r\n    <li><code>[2, 3] -&gt; (3) - (2) = 1</code></li>\r\n    <li><code>[1, 2, 3] -&gt; (3) - (1) = 2</code></li>\r\n</ul>\r\n<p>The sum over all subarrays is 4.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 1, 1]\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> Since, all the elements are equal, the maximum and minimum over all subarrays will be equal. Hence, the answer will be 0.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1150,
        "title": "Alien invasion",
        "problem_statement": "<h1>Alien invasion</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are a space defender in charge of protecting Earth from an invasion of N alien ships. You are given a 0-indexed integer array A of size N, where A[i] is the initial distance in light-years of the ith alien ship from Earth.</p>\r\n<p>The alien ships are approaching Earth at a constant speed. The speed of each ship is given to you in an integer array B of size N, where B[i] is the speed of the ith ship in light-years per minute.</p>\r\n<p>You have a space cannon that, once fully charged, can destroy a single alien ship. However, the cannon takes one minute to charge. The cannon is fully charged at the very start.</p>\r\n<p>You lose if any alien ship reaches Earth. If a ship reaches Earth at the exact moment the cannon is fully charged, it counts as a loss, and the invasion is successful.</p>\r\n<p>Return the maximum number of alien ships that you can destroy before you lose, or N if you can destroy all the ships before they reach Earth.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>N == A.length == B.length</li>\r\n    <li>1 &lt;= N &lt;= 10<sup>5</sup></li>\r\n    <li>1 &lt;= A[i], B[i] &lt;= 10<sup>5</sup></li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>First Argument is an Integer Array A, denoting the initial distances.</p>\r\n<p>Second Argument is an Integer Array B, denoting the speed.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return an Integer, denoting the maximum number of alien ships that you can destroy before you lose.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 3, 4], B = [1, 1, 1]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>In the beginning, the distances of the alien ships are [1,3,4]. You destroy the first alien ship.</p>\r\n<p>After a minute, the distances of the alien ships are [X,2,3]. You destroy the second alien ship.</p>\r\n<p>After a minute, the distances of the alien ships are [X,X,2]. You destroy the third alien ship.</p>\r\n<p>All 3 alien ships can be destroyed.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 1, 2], B = [1, 1, 1]\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>In the beginning, the distances of the alien ships are [1,1,2]. You destroy the first alien ship.</p>\r\n<p>After a minute, the distances of the alien ships are [X,0,1], so you lose.</p>\r\n<p>You can only destroy 1 alien ship.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: A = [3, 2, 4], B = [5, 3, 2]\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>In the beginning, the distances of the alien ships are [3,2,4]. You destroy the first alien ship.</p>\r\n<p>After a minute, the distances of the alien ships are [X,0,2], so you lose.</p>\r\n<p>You can only destroy 1 alien ship.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1151,
        "title": "Notepad Editor",
        "problem_statement": "<h1>Notepad Editor</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>After years of coding on your text editor, you began to wonder about a simple problem. Initially, you have 1 line of text. And, you want A copies of that line on the text editor.</p>\r\n<p>You can use three operations:</p>\r\n<ul>\r\n    <li>Select X lines from the top which costs X energy.</li>\r\n    <li>Use CTRL + A to select all the lines present in the text editor which costs 1 energy.</li>\r\n    <li>Suppose, you already have Y lines selected from the previous operation, you can use those Y lines for 0 energy again.</li>\r\n</ul>\r\n<p>After selecting, copying and pasting (both combined) cost 1 energy.</p>\r\n<p>Since, you are running low on coffee, find out the minimum energy needed to have A lines of text on the text editor.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = 3\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> We can simply copy 1 first line then paste 2 times. Total cost is 3 energy.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = 6\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong> We can copy first line then paste. Then, copy all the lines and paste twice. This way we can have 6 lines in 5 energy. It can be proved that there is no shorter path.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= A &lt;= 1000</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1152,
        "title": "Kill the Enemy",
        "problem_statement": "<h1>Kill the Enemy</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have N weapons and the ith weapon has a damage value A[i].</p>\r\n<p>You have to face an enemy whose health value is B.</p>\r\n<p>To kill an enemy, you can perform some moves and in one move you will choose a weapon and decrease the enemy's health by its damage value. The enemy will die when his health will become less than or equal to 0.</p>\r\n<p><strong>NOTE:</strong> You can't choose the same weapon for 2 times in a row.</p>\r\n<p>What is the minimum number of times you need to use the weapons to kill the enemy?</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>First argument is an array of integers denoting the array of weapons</p>\r\n<p>Second argument is the integer B denoting health value of enemy.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Return the integer which denotes the minimum number of times you need to use the weapons to kill the enemy.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>2 &lt;= N &lt;= 10<sup>5</sup></li>\r\n    <li>1 &lt;= A[i] &lt;= 10<sup>9</sup></li>\r\n    <li>1 &lt;= B &lt;= 10<sup>9</sup></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [13, 7], B = 4\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> You can use the second weapon, making health value of the enemy equal to 4-7=-3. -3&lt;=0, so the enemy is dead, and using weapon 1 time was enough.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = [4, 2], B = 6\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> You can use the first weapon first, and then the second one. After this, the health of enemy will be 6-4-2=0, meaning he would be killed after using weapons 2 times.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1153,
        "title": "Cake Factory",
        "problem_statement": "<h1>Cake Factory</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are a manager at a cake factory, which has A orders to complete. Pam and Sam are workers at your factory. Every order needs to be worked on by both of them. On every order, Pam will work first and after that Sam.</p>\r\n<p>For the i<sup>th</sup> order (for every i from 1 to A), Pam needs to work for B[i] time and Sam needs to work for C[i] time.</p>\r\n<p>The first input is a single integer <code>A</code>, representing the number of orders. The second input is an integer array <code>B</code>, where <code>B[i]</code> is the time Pam needs for the i<sup>th</sup> order. The third input is an integer array <code>C</code>, where <code>C[i]</code> is the time Sam needs for the i<sup>th</sup> order.</p>\r\n<p>Return a single integer that is the minimum time required to complete all orders.</p>\r\n\r\n<h2>Function Signature</h2>\r\n<pre><code class='language-cpp'>long Solution::solve(int A, std::vector<int> &B, std::vector<int> &C) {\r\n    // Function body to be implemented\r\n}</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = 4, B = [3, 2, 2, 4], C = [1, 2, 3, 4]\r\nOutput: 13</code></pre>\r\n<p><strong>Explanation:</strong> First Pam will finish work on the 2nd cake which takes 2 minutes. All this time Sam has no work and sits idle. Then Sam starts working on cake 2 and Pam works on cake 3. When Sam finishes work on cake 2 Pam also finishes work on cake 3 at time 4 minutes in total. Sam starts work on cake 3 and Pam starts work on cake 4. When Sam finishes work on cake 3 at time 7 Pam takes 1 minute more on cake 4 and Sam has to sit idle. When Sam starts work on cake 4 at time 8, Pam also starts work on cake 1 at the same time. Pam finishes all his work at time 11. Sam works on cake 4 till he finishes all his work at time 13.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = 5, B = [2, 3, 4, 3, 4], C = [5, 4, 3, 2, 1]\r\nOutput: 19</code></pre>\r\n<p><strong>Explanation:</strong> Pam works on cake 1 for 2 minutes while Sam sits idle. At time 2 Pam starts work on cake 2 and Sam starts work on cake 1. At time 5 Pam starts work on cake 3. At time 7 Sam starts work on cake 2. At time 9 Pam starts work on cake 4. At time 11 Sam starts work on cake 3. At time 14 Pam starts work on cake 5 and Sam starts work on cake 4. At time 18 Sam starts work on cake 5 and finishes all work at time 19.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li><code>1 &lt;= A &lt;= 10<sup>5</sup></code></li>\r\n<li><code>1 &lt;= B[i], C[i] &lt;= 10<sup>9</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    },
    {
        "id": 1154,
        "title": "Minimum Additions for Range Coverage",
        "problem_statement": "<h1>Minimum Additions for Range Coverage</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given a sorted integer array A and an integer B, add/patch elements to the array such that any number in the range [1, B] inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.</p>\r\n\r\n<p><strong>Input Format:</strong></p>\r\n<p>First Argument is an Integer Array A, denoting the array of elements.</p>\r\n<p>Second Argument is an Integer B.</p>\r\n\r\n<p><strong>Output Format:</strong></p>\r\n<p>Return an Integer, which is the minimum number of patches required.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 3], B = 6\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Combinations of nums are [1], [3], [1,3], which form possible sums of: 1, 3, 4.</p>\r\n<p>Now if we add/patch 2 to nums, the combinations are: [1], [2], [3], [1,2], [1,3], [2,3], [1,2,3].</p>\r\n<p>Possible sums are 1, 2, 3, 4, 5, 6, which now covers the range [1, 6].</p>\r\n<p>So we only need 1 patch.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 5, 10], B = 20\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> The two patches can be [2, 4].</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 2, 2], B = 5\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> No patch is required. The sums formed by elements in [1, 2, 2] already cover the range [1, 5] (sums are 1, 2, 3, 4, 5).</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li><code>1 <= A.length <= 1000</code></li>\r\n<li><code>1 <= A[i] <= 10^4</code></li>\r\n<li><code>A is sorted in ascending order.</code></li>\r\n<li><code>1 <= B <= 2^31 - 1</code></li>\r\n</ul>\r\n\r\n<p><strong>Note:</strong> You only need to implement the given function. Do not read input; instead use the arguments to the function. Do not print the output; instead return the result.</p>\r\n\r\n<pre><code class='language-cpp'>int Solution::minAddition(vector<int> &A, int B) {\r\n    // Function implementation\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon Ml school_3aug",
        "company_id": 382
    }
]