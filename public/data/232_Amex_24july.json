[
    {
        "id": 731,
        "title": "String Transformation",
        "problem_statement": "<h1>String Transformation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>\r\n    Given two strings <code>S</code> and <code>T</code> consisting of <code>N</code> and <code>M</code> characters, respectively,\r\n    determine whether string <code>T</code> can be obtained from string <code>S</code> by at most one simple operation\r\n    from the set specified below. The function should return a string indicating the operation performed,\r\n    or \"EQUAL\" if no operation is needed, or \"IMPOSSIBLE\" if none of the operations work.\r\n</p>\r\n<pre><code class='language-javascript'>class Solution {\r\n    public String solution(String S, String T) {\r\n        // Implement your solution here\r\n    }\r\n}</code></pre>\r\n<p>The allowed operations are:</p>\r\n<ul>\r\n    <li>\r\n        <strong>\"ADD c\"</strong>: if string <code>T</code> can be obtained from string <code>S</code> by inserting a single character \"c\" at the beginning of the string.\r\n    </li>\r\n    <li>\r\n        <strong>\"REPLACE c d\"</strong>: if string <code>T</code> can be obtained from string <code>S</code> by replacing a single occurrence of character \"c\" with a single character \"d\" (these characters should be distinct).\r\n    </li>\r\n    <li>\r\n        <strong>\"MOVE c\"</strong>: if string <code>T</code> can be obtained from string <code>S</code> by moving a single occurrence of character \"c\" to the right in the string (that is, deleting it from some position and reinserting it in a later position in the string).\r\n    </li>\r\n    <li>\r\n        <strong>\"EQUAL\"</strong>: if no operation is needed (strings <code>T</code> and <code>S</code> are equal).\r\n    </li>\r\n    <li>\r\n        <strong>\"IMPOSSIBLE\"</strong>: if none of the above works.\r\n    </li>\r\n</ul>\r\n<p>\r\n    Note that by characters \"c\" and \"d\" from the operations above, we mean any English alphabet lowercase letters.\r\n</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: S = \"gain\", T = \"again\"\r\nOutput: \"ADD a\"</code></pre>\r\n<p><strong>Explanation:</strong> String \"again\" can be obtained by adding 'a' at the beginning of \"gain\".</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: S = \"test\", T = \"tent\"\r\nOutput: \"REPLACE s n\"</code></pre>\r\n<p><strong>Explanation:</strong> String \"tent\" can be obtained by replacing 's' with 'n' in \"test\".</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: S = \"beans\", T = \"banes\"\r\nOutput: \"MOVE e\"</code></pre>\r\n<p><strong>Explanation:</strong> String \"banes\" can be obtained by moving 'e' from its original position to a later position in \"beans\".</p>\r\n\r\n<h3>Example 4:</h3>\r\n<pre><code class='language-text'>Input: S = \"to\", T = \"odd\"\r\nOutput: \"IMPOSSIBLE\"</code></pre>\r\n<p><strong>Explanation:</strong> None of the specified operations can transform \"to\" into \"odd\".</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>N</code> and <code>M</code> are integers within the range <code>[1..100]</code>.</li>\r\n    <li>Strings <code>S</code> and <code>T</code> are made only of lowercase letters (a-z).</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amex_24july",
        "company_id": 232
    },
    {
        "id": 732,
        "title": "Task 3",
        "problem_statement": "<h1>Task 3</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an integer N. Create an array A consisting of exactly N integers that satisfy the following conditions:</p>\r\n<ul>\r\n    <li>The sum of all elements in A must be exactly 0.</li>\r\n    <li>All elements in A must have unique absolute values. In other words, if an element X is in A, then neither X nor -X (its opposite) may appear again elsewhere in the array.</li>\r\n    <li>The absolute value of every number in array A must not exceed the specified limits.</li>\r\n</ul>\r\n\r\n<p><strong>Scoring:</strong></p>\r\n<p>Your solution will be tested under five different constraints. To earn points in each category, the absolute value of every number in array A must not exceed the specified limit.</p>\r\n<ul>\r\n    <li>20% of the total score for limit = 1,000,000</li>\r\n    <li>20% of the total score for limit = 40·N</li>\r\n    <li>20% of the total score for limit = 5·N</li>\r\n    <li>20% of the total score for limit = 2·N</li>\r\n    <li>20% of the total score for limit = N</li>\r\n</ul>\r\n\r\n<p>Write a function:</p>\r\n<pre><code class='language-java'>class Solution { public int[] solution(int N); }</code></pre>\r\n<p>that, given an integer N, returns the described array A. If multiple valid solutions exist, return any one of them. If no valid solution exists, return an empty array.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: N = 4\r\nOutput: [0, -4, 1, 3]</code></pre>\r\n<p><strong>Explanation:</strong> For N = 4, a valid output could be <code>[0, -4, 1, 3]</code>. The sum of elements is 0 + (-4) + 1 + 3 = 0. The absolute values are <code>|0|=0, |-4|=4, |1|=1, |3|=3</code>, which are all unique. Another valid output could be <code>[-1, 0, -3, 4]</code>.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: N = 5\r\nOutput: [5, -2, 0, -4, 1]</code></pre>\r\n<p><strong>Explanation:</strong> For N = 5, a valid output could be <code>[5, -2, 0, -4, 1]</code>. The sum of elements is 5 + (-2) + 0 + (-4) + 1 = 0. The absolute values are <code>|5|=5, |-2|=2, |0|=0, |-4|=4, |1|=1</code>, which are all unique.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>N is an integer within the range [1..1,000].</li>\r\n</ul>\r\n\r\n<p>In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amex_24july",
        "company_id": 232
    }
]