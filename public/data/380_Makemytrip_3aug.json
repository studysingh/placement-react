[
    {
        "id": 1137,
        "title": "Airport Connectivity Challenge",
        "problem_statement": "<h1>Airport Connectivity Challenge</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There are N airports scattered across a vast territory. The i-th airport is located at coordinates (x_i, y_i) on a coordinate plane. Multiple airports can exist at the same location (co-located airports).</p>\r\n<p><strong>Flight Route Construction Rules</strong><br>\r\nYou can establish direct flight routes between any two airports at coordinates (a,b) and (c,d). The cost to establish a route is determined by the minimum of the horizontal and vertical distances between the airports, measured in flight credits. <strong>Important:</strong> The cost calculation uses the minimum of the two distances, not the sum or maximum. This reflects the fact that flight paths can be optimized to follow either the horizontal or vertical direction more efficiently.</p>\r\n<p><strong>Objective</strong><br>\r\nYour goal is to establish flight routes so that passengers can travel between any pair of airports by taking connecting flights. What is the minimum total cost in flight credits required to achieve complete airport connectivity?</p>\r\n\r\n<p><strong>Input Format</strong><br>\r\nInput is provided via Standard Input in the following format:</p>\r\n<pre><code class='language-text'>N\r\nx_1 y_1\r\nx_2 y_2\r\n...\r\nx_N y_N</code></pre>\r\n<p>Where:</p>\r\n<ul>\r\n    <li>N is the number of airports</li>\r\n    <li>(x_i, y_i) are the coordinates of the i-th airport</li>\r\n</ul>\r\n\r\n<p><strong>Output</strong><br>\r\nPrint the minimum number of flight credits required to establish routes ensuring complete airport connectivity. The result should be rounded to two decimal places.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n1.25 5.75\r\n3.50 9.25\r\n7.00 8.50\r\nOutput:\r\n3.00</code></pre>\r\n<p><strong>Explanation:</strong> Establish a route between Airports 1 and 2 (cost: min(|1.25-3.50|, |5.75-9.25|) = min(2.25, 3.50) = 2.25 credits), and another between Airports 2 and 3 (cost: min(|3.50-7.00|, |9.25-8.50|) = min(3.50, 0.75) = 0.75 credit). Total cost: 2.25 + 0.75 = 3.00 flight credits.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n8.75 3.25\r\n4.50 9.80\r\n12.30 19.45\r\n18.90 1.15\r\n13.60 5.75\r\n7.25 6.90\r\nOutput:\r\n8.00</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>2 ≤ N ≤ 10^5</li>\r\n    <li>0 ≤ x_i, y_i ≤ 10^6</li>\r\n    <li>Coordinates can be integers or floating-point numbers (double precision)</li>\r\n    <li>The territory spans multiple time zones and climate regions.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Makemytrip_3aug",
        "company_id": 380
    },
    {
        "id": 1138,
        "title": "Symmetric Round-Trip Itinerary",
        "problem_statement": "<h1>Symmetric Round-Trip Itinerary</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>An airline planner has an itinerary string representing a sequence of airport codes joined by hyphens, e.g.</p>\r\n<pre><code class='language-text'>\"SFO-LAX-SEA-LAX-SFO-BOS\"</code></pre>\r\n<p>A subsequence of this itinerary is obtained by deleting zero or more airport codes without changing the order of the remaining codes. Find the length of the longest subsequence of airport codes that reads the same forwards and backwards (i.e., a palindromic subsequence), so the planner can identify the largest symmetric round-trip segment.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: itinerary = \"NYC-LAX-CHI-LAX-NYC-BOS\"\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong> One palindromic subsequence is [\"NYC\", \"LAX\", \"CHI\", \"LAX\", \"NYC\"].</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: itinerary = \"HND-POR-STU-PQR-HND\"\r\nOutput: 5</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; number of codes &le; 4000</li>\r\n    <li>Codes are fixed-length (3 uppercase letters)</li>\r\n    <li>Input should be string</li>\r\n    <li>Output should be integer</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Makemytrip_3aug",
        "company_id": 380
    }
]