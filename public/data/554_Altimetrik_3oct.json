[
    {
        "id": 1573,
        "title": "Reward System",
        "problem_statement": "<h1>Reward System</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Design a Payment app that supports three types of transactions:</p>\r\n<ol>\r\n    <li>Peer-to-peer (P2P)</li>\r\n    <li>Peer-to-merchant (P2M)</li>\r\n    <li>Self</li>\r\n</ol>\r\n<p>The app supports a reward system. Whenever a user makes a P2M transaction and if that person is among the top 100 users (in terms of the total amount of P2M transactions they have made), they are eligible for a reward.</p>\r\n<p>Implement the Payment class:</p>\r\n<ol>\r\n    <li><code>TransactionSummary makePayment(int transactionId, int senderId, int amount, TransactionType transactionType)</code>:\r\n        <ul>\r\n            <li><code>TransactionSummary</code> class definitions are provided in the locked stub.</li>\r\n            <li><code>TransactionSummary</code> class contains two attributes, <code>transactionId</code>, and <code>isSenderEligibleForReward</code>.</li>\r\n            <li>Given <code>transactionId</code>, <code>senderId</code>, <code>amount</code>, and <code>transactionType</code> create a <code>TransactionSummary</code> object.</li>\r\n            <li>Determine if the <code>senderId</code> is eligible for a reward based on the condition mentioned above.</li>\r\n        </ul>\r\n    </li>\r\n    <li><code>int getNumberOfTransactions(int senderId, TransactionType transactionType)</code>:\r\n        <ul>\r\n            <li>Given <code>senderId</code>, returns the number of transactions of type <code>transactionType</code> made by this user.</li>\r\n        </ul>\r\n    </li>\r\n</ol>\r\n<p>The locked stub in the editor validates the correctness of the Payment class implementation.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; totalNumberOfRequests &le; 2 &times; 10<sup>5</sup></code></li>\r\n    <li><code>1 &le; transactionId &le; 10<sup>9</sup></code></li>\r\n    <li><code>1 &le; senderId &le; 10<sup>9</sup></code></li>\r\n    <li><code>1 &le; amount &le; 1000</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<p><strong>Input Format For Custom Testing:</strong></p>\r\n<p>Input from stdin will be processed as follows and passed to the appropriate function.</p>\r\n<p>The first line contains an integer, <code>totalNumberOfRequests</code>. Each line <code>i</code> of the <code>totalNumberOfRequests</code> subsequent lines contains the name of the function and its parameters separated by spaces, and in order.</p>\r\n<pre><code class='language-text'>Input:\r\n4\r\nmakePayment 0 2 100 P2P\r\nmakePayment 1 4 18 P2M\r\nmakePayment 2 2 50 P2M\r\ngetNumberOfTransactions 2 P2P</code></pre>\r\n<pre><code class='language-text'>Output:\r\n0 false\r\n1 true\r\n2 true\r\n1</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li><code>makePayment 0 2 100 P2P</code>: User with <code>senderId</code> 2 sends an amount of 100 units. The transaction has <code>transactionId</code> 0 and is of type P2P. Since it is a P2P transaction, this <code>senderId</code> is not eligible for a reward. The locked stub prints \"0 false\".</li>\r\n    <li><code>makePayment 1 4 18 P2M</code>: User with <code>senderId</code> 4 sends an amount of 18 units. The transaction has <code>transactionId</code> 1 and is of type P2M. Since it is a P2M transaction, and this <code>senderId</code> is among the top 100 users in terms of the amount of P2M transactions so the locked stub prints \"1 true\".</li>\r\n    <li><code>makePayment 2 2 50 P2M</code>: User with <code>senderId</code> 2 sends an amount of 50 units. The transaction has <code>transactionId</code> 2 and is of type P2M. Since it is a P2M transaction, and this <code>senderId</code> is among the top 100 users in terms of the amount of P2M transactions so the locked stub prints \"2 true\".</li>\r\n    <li><code>getNumberOfTransactions 2 P2P</code>: The user with <code>senderId</code> 2 has made only 1 P2P transaction till this point, so the locked stub prints \"1\".</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Altimetrik_3oct",
        "company_id": 554
    }
]