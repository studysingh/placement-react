[
    {
        "id": 473,
        "title": "Trapping Rainwater Problem",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Problem Title: Trapping Rainwater Problem</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Given an elevation map represented by <code>n</code> non-negative integers, where each integer corresponds to the height of a bar with a width of 1 unit, compute how much water the elevation map can trap after raining and the maximum amount of water trapped at any index in the elevation map.</p>\n        <p>Solve it in optimal way with <code>O(n)</code> space.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer <code>n</code> - the number of bars in the elevation map.</p>\n        <p>The second line contains <code>n</code> space-separated integers representing the heights of the bars.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print two integers: the total amount of water trapped and the maximum amount of water trapped at any index.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ n ≤ 10<sup>5</sup></code></li>\n            <li><code>0 ≤ height[i] ≤ 10<sup>4</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n6\n1 1 0 1 0 1</pre>\n            <pre class=\\\"output\\\">Output:\n2 1</pre>\n            <div class=\\\"explanation\\\">\n                <p>In this example, the total amount of water trapped is 2, and the maximum amount of water trapped at any index is 1.</p>\n            </div>\n        </div>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n0 1 0 2 1</pre>\n            <pre class=\\\"output\\\">Output:\n1 1</pre>\n            <div class=\\\"explanation\\\">\n                <p>In this example, the total amount of water trapped is 1, and the maximum amount of water trapped at any index is 1.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1evso14cMtXv6c_SKTkiY7lPdJt6ayxR49xczbPNWOWs/edit?usp=sharing",
        "solution_code": "#include <stdio.h>\\n#include <algorithm>\\n\\nint main() {\\n    int n;\\n    scanf(\\\"%d\\\", &n);\\n    int height[n];\\n    for (int i = 0; i < n; i++) {\\n        scanf(\\\"%d\\\", &height[i]);\\n    }\\n    \\n    if (n <= 2) {\\n        printf(\\\"0 0\\\\n\\\");\\n        return 0;\\n    }\\n    \\n    int left = 0;\\n    int right = n - 1;\\n    int left_max = height[left];\\n    int right_max = height[right];\\n    int total_water = 0;\\n    int max_water_at_index = 0;\\n    \\n    while (left <= right) {\\n        if (height[left] <= height[right]) {\\n            if (height[left] >= left_max) {\\n                left_max = height[left];\\n            } else {\\n                int water_at_left = left_max - height[left];\\n                total_water += water_at_left;\\n                if (water_at_left > max_water_at_index) {\\n                    max_water_at_index = water_at_left;\\n                }\\n            }\\n            left++;\\n        } else {\\n            if (height[right] >= right_max) {\\n                right_max = height[right];\\n            } else {\\n                int water_at_right = right_max - height[right];\\n                total_water += water_at_right;\\n                if (water_at_right > max_water_at_index) {\\n                    max_water_at_index = water_at_right;\\n                }\\n            }\\n            right--;\\n        }\\n    }\\n    \\n    printf(\\\"%d %d\\\\n\\\", total_water, max_water_at_index);\\n    return 0;\\n}\\n",
        "company_name": "ZL Technologies ",
        "company_id": 138
    },
    {
        "id": 474,
        "title": "Find Available Ticket Number",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Problem Title: Find Available Ticket Number</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>Imagine you\\'re managing a ticket booking application for generating tickets for a conference in your organization. Each ticket has a unique ticket number associated with it starting with 1. However, some tickets were issued incorrectly (e.g., negative or zero values) due to a bug. Your team somehow managed to get all the tickets issued (valid or invalid).</p>\n        <p>Your task is to identify the smallest available ticket number that has not been issued yet, so that you can sell the remaining available tickets.</p>\n        <p>Solve the problem in optimal way with space complexity of <code>O(1)</code>.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer <code>n</code> - the number of tickets issued.</p>\n        <p>The second line contains <code>n</code> space-separated integers representing the issued ticket numbers.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print a single integer representing the smallest available ticket number that has not been issued.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ arr.length ≤ 10<sup>5</sup></code></li>\n            <li><code>-2<sup>31</sup> ≤ arr[i] ≤ 2<sup>31</sup> - 1</code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5\n1 2 0 -1 3</pre>\n            <pre class=\\\"output\\\">Output:\n4</pre>\n            <div class=\\\"explanation\\\">\n                <p>The smallest available ticket number that has not been issued is 4.</p>\n            </div>\n        </div>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n3\n-1 -2 -3</pre>\n            <pre class=\\\"output\\\">Output:\n1</pre>\n            <div class=\\\"explanation\\\">\n                <p>Since all issued tickets are invalid, the smallest available ticket number is 1.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1BUDFDNal1k_jxGnVTcaPOoNy18AfiIXhwf4NmqjvTMM/edit?usp=sharing",
        "solution_code": "#include<bits/stdc++.h>\\nusing namespace std;\\n\\nint main() {\\n    unordered_set<int> positiveTickets;\\n    int num;\\n\\n    while (cin >> num) {\\n        if (num > 0) {\\n            positiveTickets.insert(num);\\n        }\\n    }\\n\\n    int missing = 1;\\n    while (positiveTickets.find(missing) != positiveTickets.end()) {\\n        missing++;\\n    }\\n\\n    cout << missing << endl;\\n\\n    return 0;\\n}\\n",
        "company_name": "ZL Technologies ",
        "company_id": 138
    }
]