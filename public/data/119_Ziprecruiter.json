[
    {
        "id": 406,
        "title": "Largest Square Area in Cityline",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Largest Square Area in Cityline</h1>\n        <p>\n            You are tasked with analyzing the potential space in a cityscape outlined by a series of skyscrapers. Each skyscraper\\'s height is represented by an element in the array \n            <code>cityLine</code>, where the width of each skyscraper is consistently <code>1</code>, and they are placed directly adjacent to each other along a road with no gaps.\n            Your mission is to determine the largest square area that can fit within this row of skyscrapers.\n        </p>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <p>For <code>cityLine = [1, 2, 3, 2, 1]</code>, the output should be <code>solution(cityLine) = 4</code>.</p>\n            <p>In this configuration, there are several <code>2x2</code> squares that can be accommodated within the skyscrapers, but no larger square can fit owing to the limitations of their heights.</p>\n            <img src=\\\"example1.png\\\" alt=\\\"2x2 grid explanation\\\">\n        </div>\n        <div class=\\\"example\\\">\n            <p>For <code>cityLine = [4, 3, 4]</code>, the output should be <code>solution(cityLine) = 9</code>.</p>\n            <p>In this scenario, a <code>3x3</code> square can fit snugly within the skyscraper setup, taking advantage of the uniform heights at the edges.</p>\n            <img src=\\\"example2.png\\\" alt=\\\"3x3 grid explanation\\\">\n        </div>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>An array <code>cityLine</code> representing the heights of the skyscrapers. Each skyscraper has a width of <code>1</code>.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Return the area of the largest square that can fit within the skyscrapers along the road.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ cityLine.length ≤ 10<sup>6</sup></code></li>\n            <li><code>1 ≤ cityLine[i] ≤ 10<sup>6</sup></code></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Input/Output</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\ncityLine = [1, 2, 3, 2, 1]</pre>\n            <pre class=\\\"output\\\">Output:\n4</pre>\n        </div>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\ncityLine = [4, 3, 4]</pre>\n            <pre class=\\\"output\\\">Output:\n9</pre>\n        </div>\n    </div>\n\n    <div class=\\\"notes\\\">\n        <h3>Notes</h3>\n        <p>\n            In the provided examples, the largest square that can fit snugly within the rows of skyscrapers is calculated based on the constraints of the heights.\n        </p>\n    </div>\n\n    <div class=\\\"code-tips\\\">\n        <h3>[Python 3] Syntax Tips</h3>\n        <pre><code># Prints help message to the console\n# Returns a string\ndef helloWorld(name):\n    print(\\\"This prints to the console when you Run Tests\\\")\n</code></pre>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1AMOE_-mnXBWDM8jDOXTtOdf_XHPwTv3bV_BuzhmJJ74/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Ziprecruiter",
        "company_id": 119
    },
    {
        "id": 407,
        "title": "Fish Catch Problem",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Fish Catch Problem</h1>\n        <p>\n            Imagine that you are going fishing at the local pond. The size of the bait must be strictly smaller than the size of the fish for it to catch. Once the fish is caught, it is removed from the pond and cannot be caught again. However, each bait can be used up to <strong>3</strong> times before depletion.\n        </p>\n        <p>\n            Given two arrays <code>fish</code> and <code>baits</code>, where <code>fish[i]</code> corresponds to the size of the <code>i<sup>th</sup></code> fish in the pond, and <code>baits[j]</code> corresponds to the size of the <code>j<sup>th</sup></code> bait, your task is to return the maximum number of fish you can catch from the pond with the given baits.\n        </p>\n        <p>\n            To compute the answer, you need to use each bait to its possible extent, going from the largest bait to the smallest bait. Use each bait to catch the largest fish remaining in the pond and move to the next bait if the current bait was used three times or if it is not strictly smaller than the largest remaining fish. When you run out of baits, return the number of caught fish.\n        </p>\n        <p>\n            <em>Note: You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(max(fish.length, baits.length)<sup>3</sup>)</code> will fit within the execution time limit.</em>\n        </p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>An array <code>fish</code> of integers representing the sizes of fish available in the pond.</li>\n            <li>An array <code>baits</code> of integers representing the sizes of baits you have available.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>An integer representing the maximum number of fish you can catch from the pond.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ fish.length ≤ 100</code></li>\n            <li><code>1 ≤ fish[i] ≤ 10<sup>9</sup></code></li>\n            <li><code>1 ≤ baits.length ≤ 100</code></li>\n            <li><code>1 ≤ baits[j] ≤ 10<sup>9</sup></code></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nfish = [1, 2, 3]\nbaits = [1]</pre>\n            <pre class=\\\"output\\\">Output:\n2</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    Using <code>baits[0] = 1</code>, it is possible to catch 2 fish: <code>fish[2] = 3</code> and <code>fish[1] = 2</code>, since <code>1 &lt; 3</code> and <code>1 &lt; 2</code>. The remaining fish <code>fish[0] = 1</code> can\\'t be caught using the given bait.\n                </p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nfish = [2, 2, 3, 4]\nbaits = [1]</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    Since there is only one bait, it is possible to catch only three fish (any of the given four since the bait has a smaller size than any of the fish) because the bait can only be used three times.\n                </p>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nfish = [1, 4, 3, 2]\nbaits = [1, 1]</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    While there are two baits available, it is only possible to catch three fish since both baits are not strictly smaller than the first fish, which has a size of <code>fish[0] = 1</code>.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/19weKlDpaAVKUu5C55pCcsONZYwlMHxsXEZ0WTo_jVA0/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Ziprecruiter",
        "company_id": 119
    }
]