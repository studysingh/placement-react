[
    {
        "id": 1405,
        "title": "Slice master",
        "problem_statement": "<h1>Slice master</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Your friends and you are playing a game called Slice master. You are given a string <code>S</code>. The motive of the game is to slice string <code>S</code> into parts such that each letter appears in at most one part. After slicing, your total points will be calculated as follows:</p>\r\n<ul>\r\n    <li>For each part of length <code>X</code>, you will be allotted <code>X<sup>2</sup></code> points.</li>\r\n</ul>\r\n<p>Return the minimum possible points a player can score while playing Slice master with String <code>S</code>.</p>\r\n<p><strong>Note:</strong> The slicing should be such that a particular character is present in at max one part. For example, if part 1 has letters [a, m, i, g, d] then these letters cannot be present in any other part.</p>\r\n<p>Complete the <code>solve()</code> function. This function takes the following argument:</p>\r\n<ul>\r\n    <li><code>S</code>: Represents the string to be sliced.</li>\r\n</ul>\r\n<p><strong>Input format for custom testing:</strong></p>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<p>The first line contains a string <code>S</code> denoting the String to be sliced.</p>\r\n<p><strong>Output format:</strong></p>\r\n<p>Return the minimum possible points a player can get while playing Slice master.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: eccbbbbdec\r\nOutput: 100</code></pre>\r\n<p><strong>Explanation:</strong> Points = 0. part 1 -> eccbbbbdec -> length = 10 -> Points = 0 + 10<sup>2</sup> = 100. This could not be sliced further therefore return 100.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= length(S) &lt;= 500</code></li>\r\n    <li><code>a &lt;= S[i] &lt;= z</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Headout_12sep",
        "company_id": 493
    },
    {
        "id": 1406,
        "title": "Movie Night Pairing",
        "problem_statement": "```html\r\n<h1>Movie Night Pairing</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Emma and her friends are planning a movie night. They have a list of N movies, each with a different duration in minutes. The group wants to watch as many pairs of movies as possible without exceeding the total available time T minutes.</p>\r\n<p>A pair consists of two different movies, and their total duration must be less than or equal to the available time T.</p>\r\n<p>Your task is to find the maximum number of such pairs.</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>You must implement the function <code>movie_pairs</code>.</p>\r\n<p>This function determines the maximum number of movie pairs that can be watched, ensuring that no pair exceeds the given total time T.</p>\r\n\r\n<h3>Parameters</h3>\r\n<ul>\r\n    <li><code>N (int)</code> – The number of movies.</li>\r\n    <li><code>T (int)</code> – The maximum allowed time for any movie pair.</li>\r\n    <li><code>duration (int[])</code> – An array of N integers, where each integer represents the duration of a movie in minutes.</li>\r\n</ul>\r\n\r\n<h3>Returns</h3>\r\n<p>An integer representing the maximum number of valid movie pairs.</p>\r\n\r\n<h2>Input Format</h2>\r\n<ul>\r\n    <li>The first line contains an integer N – the number of movies.</li>\r\n    <li>The second line contains an integer T – the total available time for any pair.</li>\r\n    <li>The third line contains N space-separated integers, where each integer represents the duration of a movie in minutes.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print a single integer – the maximum number of movie pairs that can be watched.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n180\r\n90 60 100 40 120\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The available movies are [90, 60, 100, 40, 120].</p>\r\n<p>We need to form pairs where the total time of two movies does not exceed 180 minutes.</p>\r\n<p>Sorting the durations: [40, 60, 90, 100, 120]</p>\r\n<ul>\r\n    <li>Pair 1 --> (40, 120) --> 160 minutes</li>\r\n    <li>Pair 2 --> (60, 90) --> 150 minutes</li>\r\n    <li>Movie 100 is left alone, so it cannot form a pair</li>\r\n</ul>\r\n<p>Thus, the maximum number of valid movie pairs = 2.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= N <= 100000</code> (up to 100,000 movies)</li>\r\n    <li><code>1 <= T <= 10^9</code> (large maximum allowed time)</li>\r\n    <li><code>1 <= duration of each movie <= 10^9</code> (each movie duration is large)</li>\r\n</ul>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h3>Limits</h3>\r\n<ul>\r\n    <li>Time Limit: 5.0 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h3>Scoring</h3>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h3>Allowed Languages</h3>\r\n<p>Bash, C, C++14, C++17, Clojure, C#, D, Erlang, F#, Go, Groovy, Haskell, Java 8, Java 14, JavaScript(Node.js), Julia, Kotlin, Lisp (SBCL), Lua, Objective-C, OCaml, Octave, Pascal, Perl, PHP, Python, Python 3, Racket, Ruby, Rust, Scala, Swift, TypeScript, Visual Basic.</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Headout_12sep",
        "company_id": 493
    },
    {
        "id": 1407,
        "title": "Candidate's performance analysis",
        "problem_statement": "<h1>Candidate's performance analysis</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given the data of candidates, details of interview rounds given by the candidates, and the overall interview details.</p>\r\n\r\n<h3>Task</h3>\r\n<p>Write a query to print the following output related to the candidates' interviews based on these tables:</p>\r\n<ul>\r\n    <li>ID</li>\r\n    <li>Name</li>\r\n    <li>Years of experience</li>\r\n    <li>The total score of all candidates who meet the following criteria:\r\n        <ul>\r\n            <li>Have a score of 15 or more</li>\r\n            <li>Have work experience of more than 2 years</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n<p>Arrange your output in the increasing order of the candidate's id.</p>\r\n\r\n<h3>Input tables</h3>\r\n\r\n<h4>Table: Candidates</h4>\r\n<p>This table contains information about each candidate.</p>\r\n<pre><code class='language-text'>+-------------+--------------+----------------------------------+\r\n| Field       | Type         | Description                      |\r\n+-------------+--------------+----------------------------------+\r\n| candidateId | Integer      | Represents the unique ID for each|\r\n|             |              | candidate                        |\r\n| candidateName| varchar(255) | Represents the name of the       |\r\n|             |              | candidate                        |\r\n| YearsOfExp  | Integer      | Represents the years of experience|\r\n|             |              | of the candidate                 |\r\n+-------------+--------------+----------------------------------+</code></pre>\r\n<p><strong>Example Data:</strong></p>\r\n<pre><code class='language-text'>candidateId | candidateName       | YearsOfExp\r\n------------|---------------------|-----------\r\n1           | Sofia Steedley      | 2\r\n2           | Siobhan Thiessen    | 4\r\n3           | Abram Coombe        | 3\r\n4           | Perla Wethington    | 5\r\n5           | Sanjuanita Treadaway| 2</code></pre>\r\n\r\n<h4>Table: InterviewRoundDetails</h4>\r\n<p>This table contains details about each interview round.</p>\r\n<pre><code class='language-text'>+-------------+--------------+----------------------------------+\r\n| Field       | Type         | Description                      |\r\n+-------------+--------------+----------------------------------+\r\n| roundId     | Integer      | Represents the ID of the interview|\r\n|             |              | round                            |\r\n| roundName   | varchar(255) | Represents the name of the       |\r\n|             |              | interview round                  |\r\n| roundMaxScore| Integer      | Represents the maximum score of  |\r\n|             |              | the interview round              |\r\n+-------------+--------------+----------------------------------+</code></pre>\r\n<p><strong>Example Data:</strong></p>\r\n<pre><code class='language-text'>roundId | roundName          | roundMaxScore\r\n--------|--------------------|--------------\r\n1       | Coding Round       | 5\r\n2       | DS algo            | 5\r\n3       | Technical Interview-1| 5\r\n4       | Technical Interview-2| 5\r\n5       | Bar-raiser         | 5\r\n6       | HR round           | 5</code></pre>\r\n\r\n<h4>Table: CandidateInterviews</h4>\r\n<p>This table links candidates to their interview scores for specific rounds.</p>\r\n<pre><code class='language-text'>+-------------+---------+----------------------------------+\r\n| Field       | Type    | Description                      |\r\n+-------------+---------+----------------------------------+\r\n| interviewId | Integer | Represents the unique ID of the  |\r\n|             |         | interview                        |\r\n| candidateId | Integer | Represents the foreign key       |\r\n|             |         | referencing the Candidates table,|\r\n|             |         | linking each interview to a      |\r\n|             |         | specific candidate               |\r\n| roundId     | Integer | Represents the foreign key       |\r\n|             |         | referencing the InterviewRoundDetails|\r\n|             |         | table, indicating which round    |\r\n|             |         | the score is for                 |\r\n| score       | Integer | Represents the score achieved by |\r\n|             |         | the candidate                    |\r\n+-------------+---------+----------------------------------+</code></pre>\r\n<p><strong>Example Data:</strong></p>\r\n<pre><code class='language-text'>interviewId | candidateId | roundId | score\r\n------------|-------------|---------|------\r\n1           | 1           | 1       | 4\r\n2           | 1           | 2       | 4\r\n3           | 1           | 3       | 4\r\n4           | 1           | 4       | 4\r\n5           | 1           | 5       | 4\r\n6           | 2           | 1       | 3\r\n7           | 2           | 2       | 5\r\n8           | 2           | 3       | 2\r\n9           | 3           | 1       | 3\r\n10          | 3           | 2       | 4\r\n11          | 3           | 3       | 5\r\n12          | 3           | 4       | 4\r\n13          | 4           | 1       | 1\r\n14          | 4           | 2       | 2\r\n15          | 4           | 3       | 3\r\n16          | 5           | 1       | 2\r\n17          | 5           | 2       | 4\r\n18          | 5           | 3       | 3</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Sample output:</h3>\r\n<pre><code class='language-text'>candidateId | candidateName | YearsOfExp | sums\r\n------------|---------------|------------|-----\r\n3           | Abram Coombe  | 3          | 16</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<p><strong>Note:</strong> Your SQL query must be able to print the sample output from the provided sample input. However, the query is run against multiple hidden test cases. Therefore, your query must pass these hidden test cases to solve the problem statement.</p>\r\n<ul>\r\n    <li><strong>Time Limit:</strong> 5 sec(s) for each input file</li>\r\n    <li><strong>Memory Limit:</strong> 256 MB</li>\r\n    <li><strong>Source Limit:</strong> 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes.</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<ul>\r\n    <li>MySQL</li>\r\n    <li>PostgreSQL</li>\r\n    <li>MSSQL</li>\r\n    <li>Oracle_Db</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Headout_12sep",
        "company_id": 493
    }
]