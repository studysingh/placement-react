[
    {
        "id": 749,
        "title": "OCR Output Equivalence",
        "problem_statement": "<h1>OCR Output Equivalence</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given two passages of text that have been scanned and passed through OCR software. (OCR stands for Optical Character Recognition, which is the conversion of printed text into machine-readable strings.) Unfortunately, the scans were of poor quality and some letters were not recognized by the OCR software. Write a program to check (based on the output from the OCR software) whether the two text sources might in fact be the same.</p>\r\n<p>We assume that each text passage consists only of English letters. The OCR output from each scan is given as a string in which unrecognized letters are marked as follows. Firstly, let us mark each unrecognized letter by \"?\". For example, if the OCR software didn't recognize the second and third letters of the text \"AppLe\", it would result in OCR output of \"A??Le\". Then, for brevity, every group of K consecutive \"?\" characters is replaced by the decimal representation of integer K (without leading zeros). Thus, the above OCR result would be represented as \"A2Le\". (For the sake of clarity, such numeric replacement is performed on groups of \"?\" characters that cannot be extended either to the left or to the right.)</p>\r\n<p>You are given two strings S and T consisting of N and M characters, respectively, and you would like to check whether they might have been obtained as OCR scans of the same text. For example, both strings \"A2Le\" and \"2pL1\" could have been obtained as scans of the word \"AppLe\" (but also as scans of the word \"AmpLe\"). Both strings \"a10\" and \"10a\" could have been obtained as scans of the word \"abbbbbbbbba\" (but also from many other strings of length 11, starting and ending with \"a\").</p>\r\n<p>On the other hand, strings \"ba1\" and \"1Ad\" could not have been obtained from the same text, since the second letter of each text is different.</p>\r\n<p>Write a function:</p>\r\n<pre><code class='language-cpp'>bool solution(string &S, string &T);</code></pre>\r\n<p>that, given two strings S and T consisting of N and M characters, respectively, determines whether strings S and T can be obtained as OCR output from the same text.</p>\r\n<p>In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: S = \"A2Le\", T = \"2pL1\"\r\nOutput: true</code></pre>\r\n<p><strong>Explanation:</strong> Both could be obtained as OCR scans of the word \"AppLe\" (or \"AmpLe\").</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: S = \"a10\", T = \"10a\"\r\nOutput: true</code></pre>\r\n<p><strong>Explanation:</strong> Both could be obtained as OCR scans of the word \"abbbbbbbbba\" (or other strings of length 11, starting and ending with 'a').</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: S = \"ba1\", T = \"1Ad\"\r\nOutput: false</code></pre>\r\n<p><strong>Explanation:</strong> The second letter of each text is different, so they cannot be from the same source.</p>\r\n\r\n<h3>Example 4:</h3>\r\n<pre><code class='language-text'>Input: S = \"3x2x\", T = \"8\"\r\nOutput: false</code></pre>\r\n<p><strong>Explanation:</strong> They represent strings of different length (3x2x represents a string of length 3+1+2+1 = 7, while 8 represents a string of length 8).</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>N and M are integers within the range [1..100,000].</li>\r\n    <li>Lengths of texts before the OCR process are integers within the range [1..100,000].</li>\r\n    <li>Strings S and T consist only of alphanumeric characters (a-z and/or A-Z and/or 0-9).</li>\r\n    <li>Strings S and T contain neither single zeros (e.g. \"abc0abc\") nor integers with leading zeros (e.g. \"abc012abc\").</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amex_23july",
        "company_id": 237
    },
    {
        "id": 750,
        "title": "Optimal Carpool Scheme",
        "problem_statement": "```html\r\n<h1>Optimal Carpool Scheme</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Our task concerns a city with N roads connecting N + 1 junctions numbered from 0 to N. Roads connect junctions in such a way that each distinct pair of junctions is connected either by a direct road or through a path consisting of direct roads. There is exactly one way to reach any junction from any other junction.</p>\r\n<p>There is an office next to junction 0 and a house next to every other junction. One person lives in each house. All the citizens work in the office and use a car to travel from their houses to the office. Each car has five seats and consumes 1 liter of fuel to move by one road (from one junction to a neighboring junction).</p>\r\n<p>The citizens want to set up a carpool scheme that allows them all to travel to the office in a way that minimizes the total consumption of fuel. People can change cars at each house and then continue to travel together. Calculate the fuel consumption in the optimal scheme.</p>\r\n<p>The network of cities is described using arrays A and B, each of length N. Each pair A[K], B[K] for 0 &le; K &lt; N specifies a road connecting junctions number A[K] and B[K].</p>\r\n<p>Write a function:</p>\r\n<pre><code class='language-cpp'>int solution(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B);</code></pre>\r\n<p>that, given non-empty arrays A and B of length N describing a road network in the city, returns the minimum fuel consumption for the optimal carpool scheme.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: A = [0, 1, 1], B = [1, 2, 3]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> There are N = 3 houses, as in the image below. The function should return 3, as the optimal carpool scheme uses 3 liters of fuel:</p>\r\n<ul>\r\n    <li>Citizen 2 goes in his car from his house to house 1.</li>\r\n    <li>Citizen 3 goes in her car from her house to house 1.</li>\r\n    <li>Citizens 1 and 3 go with citizen 1 in his car to the office.</li>\r\n</ul>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: A = [1, 1, 9, 9, 9, 7, 8], B = [2, 0, 3, 1, 6, 5, 4, 0]\r\nOutput: 10</code></pre>\r\n<p><strong>Explanation:</strong> There are N = 9 houses, as in the image below. The function should return 10, as the following carpool scheme is optimal:</p>\r\n<ul>\r\n    <li>Citizens 7 and 8 go directly to the office in their cars (using 2 liters of fuel).</li>\r\n    <li>Citizens 1 and 4 go in their cars to house 9 (they use 2 liters of fuel).</li>\r\n    <li>Citizens 2 and 3 go in their cars to house 1 (for 2 liters of fuel).</li>\r\n    <li>Now 7 citizens are at house 1, so they need to use at least two cars to move to the office (for another 2 liters of fuel).</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<p>Write an efficient algorithm for the following assumptions:</p>\r\n<ul>\r\n    <li>N is an integer within the range [1..100,000].</li>\r\n    <li>Each element of arrays A and B is an integer within the range [0..N].</li>\r\n    <li>There is exactly one (possibly indirect) connection between any two distinct junctions.</li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amex_23july",
        "company_id": 237
    },
    {
        "id": 751,
        "title": "Construct Longest String Without Forbidden Substrings",
        "problem_statement": "<h1>Construct Longest String Without Forbidden Substrings</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>There are two-letter strings, \"AA\", \"AB\" and \"BB\", which appear <strong>AA</strong>, <strong>AB</strong> and <strong>BB</strong> times respectively. The task is to join some of these strings to create the longest possible string which does not contain \"AAA\" or \"BBB\".</p>\r\n<p>For example, having <strong>AA</strong> = 5, <strong>AB</strong> = 0 and <strong>BB</strong> = 2, it is possible to join five strings by taking both of the \"BB\" strings and three of the \"AA\" strings. Then they can be joined into \"AA-BB-AA-BB-AA\" which becomes \"AABBAABBAA\".</p>\r\n<p>Note that it is not possible to add another \"AA\" string as the result would then contain \"AAA\".</p>\r\n<p>Write a function:</p>\r\n<pre><code class='language-java'>class Solution {\r\n    public String solution(int AA, int AB, int BB);\r\n}</code></pre>\r\n<p>that, given three integers <strong>AA</strong>, <strong>AB</strong> and <strong>BB</strong>, returns the longest string that can be created according to the rules described above. If there is more than one possible answer, the function may return any of them.</p>\r\n<p>In your solution, focus on correctness. The performance of your solution will not be the focus of the assessment.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: AA = 5, AB = 0, BB = 2\r\nOutput: \"AABBAABBAA\"</code></pre>\r\n<p><strong>Explanation:</strong> As explained in the problem description, combining three \"AA\"s and two \"BB\"s yields \"AABBAABBAA\" which is the longest possible string without \"AAA\" or \"BBB\".</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: AA = 1, AB = 2, BB = 1\r\nOutput: \"BBABABAA\" or \"ABABBBAB\" or \"AABABAB\"</code></pre>\r\n<p><strong>Explanation:</strong> Multiple valid longest strings can be formed. Any of these are acceptable.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: AA = 0, AB = 2, BB = 0\r\nOutput: \"ABAB\"</code></pre>\r\n<p><strong>Explanation:</strong> With only \"AB\" strings available, \"ABAB\" is the longest string without \"AAA\" or \"BBB\".</p>\r\n\r\n<h3>Example 4:</h3>\r\n<pre><code class='language-text'>Input: AA = 0, AB = 0, BB = 10\r\nOutput: \"BB\"</code></pre>\r\n<p><strong>Explanation:</strong> Since only \"BB\" strings are available, using one \"BB\" results in \"BB\". Using two or more \"BB\" strings would create \"BBBB\" or longer, which contains the forbidden \"BBB\" substring.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><strong>AA</strong>, <strong>AB</strong> and <strong>BB</strong> are integers within the range [0, 10].</li>\r\n    <li>The resulting string will not be empty.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amex_23july",
        "company_id": 237
    }
]