[
    {
        "id": 70,
        "title": "Reorder List",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <h1>Reorder List</h1>\n    </div>\n\n<div class=\"problem-description\">\n        <p>Given a singly linked list:</p>\n\n<pre class=\"math-notation\">\nL: L0 → L1 → ... → Ln-1 → Ln\n        </pre>\n\n<p>reorder it to:</p>\n\n<pre class=\"math-notation\">\nL0 → Ln → L1 → Ln-1 → L2 → Ln-2 → ...\n        </pre>\n\n<p>You must do this in-place without altering the nodes' values.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Requirements</h3>\n        <ul>\n            <li>The reordering must be done in-place</li>\n            <li>Node values must not be altered</li>\n            <li>Only implement the given function</li>\n            <li>Do not read input/output, use the function arguments</li>\n            <li>Return values as specified instead of printing output</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input: [1,2,3,4]</pre>\n            <pre class=\"output\">Output: [1,4,2,3]</pre>\n        </div>\n    </div>\n\n<div class=\"notes\">\n        <div class=\"note info\">\n            <i class=\"icon-info\"></i>\n            <p>You only need to implement the given function. Do not read input/output; use the arguments to the function. Do not print the output; instead return values as specified. Still have a question? Check out Sample Codes for more details.</p>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1DwmgRfKmS35beVn50ik7r_YrEkzjhejjKgNsP6yloKU/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Media.net",
        "company_id": 14
    },
    {
        "id": 71,
        "title": "Largest Rectangle in Histogram",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Largest Rectangle in Histogram</h2>\n\n<div class=\"problem-description\">\n        <p>Given an array of integers A.</p>\n        <p>A represents a histogram i.e A[i] denotes height of the ith histogram's bar. Width of each bar is 1.</p>\n        <p>Find the area of the largest rectangle formed by the histogram.</p>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>The only argument given is the integer array A.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Return the area of largest rectangle in the histogram.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ |A| ≤ 100000</li>\n            <li>1 ≤ A[i] ≤ 1000000000</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Example 1:</h4>\n            <pre class=\"output\">Output: 10</pre>\n            <div class=\"explanation\">\n                <p>The largest rectangle has area = 10 unit². Formed by A[i] to A[j].</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Example 2:</h4>\n            <pre class=\"output\">Output: 2</pre>\n            <div class=\"explanation\">\n                <p>Largest rectangle has area = 2.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\"notes\">\n        <p class=\"note-text\">You only need to implement the given function. Do not read input; instead use the arguments to the function. Do not print the output; instead return values as specified.</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1D9L1vW9HrAXoddB5I_6caEFSq9JlOa9WDbulTbZoztM/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Media.net",
        "company_id": 14
    },
    {
        "id": 72,
        "title": "Flatten Binary Tree to Linked List",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">Flatten Binary Tree to Linked List</h2>\n\n<div class=\"problem-description\">\n        <p>Given a binary tree A, flatten it to a linked list in-place.</p>\n        <p>The left child of all nodes should be NULL.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ size of tree ≤ 100000</li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>First and only argument is the head of tree A.</p>\n    </div>\n\n<div class=\"output-format\">\n        <h3>Output Format</h3>\n        <p>Return the linked-list after flattening.</p>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n\n<div class=\"example\">\n            <h4>Example 1:</h4>\n            <pre class=\"input\">Input:\n     1\n    / \\\n   2   3</pre>\n            <pre class=\"output\">Output:\n1\n \\\n  2\n   \\\n    3</pre>\n        </div>\n\n<div class=\"example\">\n            <h4>Example 2:</h4>\n            <pre class=\"input\">Input:\n     1\n    / \\\n   2   5\n  / \\   \\\n 3   4   6</pre>\n            <pre class=\"output\">Output:\n1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6</pre>\n        </div>\n    </div>\n\n<div class=\"code-template\">\n        <h3>Code Template</h3>\n        <pre class=\"code\">/**\n * Definition for binary tree\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nTreeNode* Solution::flatten(TreeNode* A) {\n    // Implement your solution here\n}</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1aAR8pER8QLQyKdz0QZ7Oll2Tl8SJOxUiECNnO57SHK0/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Media.net",
        "company_id": 14
    },
    {
        "id": 73,
        "title": "LRU Cache",
        "problem_statement": "<div class=\"problem-container\">\n    <h2 class=\"problem-title\">LRU Cache</h2>\n\n<div class=\"problem-description\">\n        <p>Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set.</p>\n\n<ul class=\"operations\">\n            <li><code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.</li>\n            <li><code>set(key, value)</code> - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least recently used item before inserting the new item.</li>\n        </ul>\n\n<p>The LRUCache will be initialized with an integer corresponding to its capacity. Capacity indicates the maximum number of unique keys it can hold at a time.</p>\n\n<div class=\"definition\">\n            <h4>Definition of \"least recently used\":</h4>\n            <p>An access to an item is defined as a get or a set operation of the item. \"Least recently used\" item is the one with the oldest access time.</p>\n        </div>\n\n<div class=\"note\">\n            <strong>NOTE:</strong> If you are using any global variables, make sure to clear them in the constructor.\n        </div>\n    </div>\n\n<div class=\"examples\">\n        <h3>Example:</h3>\n        <pre class=\"example-block\">\nInput:\ncapacity = 2\nset(1, 10)\nget(2)        returns -1\nget(1)        returns 10\nset(6, 14)    this pushes out key = 5 as LRU is full.\nget(5)        returns -1</pre>\n    </div>\n\n<div class=\"code-template\">\n        <pre class=\"cpp\">\nclass LRUCache {\npublic:\n    LRUCache(int capacity) {\n    }\n\nint get(int key) {\n    }\n\nvoid set(int key, int value) {\n    }\n};</pre>\n    </div>\n\n<div class=\"instructions\">\n        <p class=\"note\">You only need to implement the given function. Do not read input; instead use the arguments to the function. Do not print the output; instead return values as specified. Still have a question? Check out Sample Codes for more details.</p>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1-jljeQF-apGZPpec0Jfib12wagRGjuKIWdhcjmnICV0/edit?usp=sharing",
        "solution_code": null,
        "company_name": "Media.net",
        "company_id": 14
    }
]