[
    {
        "id": 776,
        "title": "Unsafe password",
        "problem_statement": "<h1>Unsafe password</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Assume that a system generates passwords consisting of integers only. A password is considered unsafe if the starting number is the same as the ending number of the password.</p>\r\n<p>Given two integer values L and R, what is the total count of unsafe passwords that can be generated in the range between L and R (including L and R)?</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the <code>solve()</code> function. This function takes the following 2 parameters and returns the required output:</p>\r\n<ul>\r\n    <li>L: Represents the starting number in the range</li>\r\n    <li>R: Represents the ending number in the range</li>\r\n</ul>\r\n\r\n<h2>Input format for custom testing</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code</p>\r\n<ul>\r\n    <li>The first line contains 2 integers L and R that represent the starting and ending numbers in the range respectively.</li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>Print the number of unsafe passwords in the range [L, R] (including L and R).</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n47\r\n74\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong> The number of unsafe passwords is 2 which are (55, 66) as between 47 and 74 only these digits have the same starting and ending number.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; L &le; R &le; 10<sup>18</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Mthree _6march",
        "company_id": 246
    },
    {
        "id": 777,
        "title": "Doctor",
        "problem_statement": "<h1>Doctor</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Suppose there is a doctor's office with a single physician. You are given an array of patients, where <code>patients[i] = [arrival, time]</code>. <code>arrival</code> is the arrival time of the i-th patient. The arrival times are sorted in non-decreasing order. <code>time</code> is the time needed to examine the i-th patient.</p>\r\n<p>When a patient arrives, he gives his symptoms to the physician, and the physician starts examining him once he is idle. The patient waits till the physician finishes examining him. The physician examines patients in the order they were given in the input.</p>\r\n<p>Return the average waiting time of all patients. Return the answer rounded down to the nearest integer less than or equal to the answer.</p>\r\n\r\n<h3>Notes:</h3>\r\n<ul>\r\n    <li>The physician examines only one patient at a time.</li>\r\n    <li>The waiting time includes the time he spent with the doctor.</li>\r\n</ul>\r\n\r\n<h3>Function Description:</h3>\r\n<p>Complete the function <code>solution()</code> provided in the editor. The function takes the following 2 parameters and returns the solution:</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the number of patients</li>\r\n    <li><code>patient</code>: Represents the entry time and examining time for each patient</li>\r\n</ul>\r\n\r\n<h3>Input format for custom testing:</h3>\r\n<p>Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code:</p>\r\n<ul>\r\n    <li>The first line contains <code>N</code> denoting the number of patients.</li>\r\n    <li>The next <code>N</code> lines contain 2 integers each, containing the entry time and examining time for each patient.</li>\r\n</ul>\r\n\r\n<h3>Output format:</h3>\r\n<p>Print a single integer, representing the rounded average waiting time.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n5 2\r\n5 4\r\n10 3\r\n20 1\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>Given:</p>\r\n<p><strong>Input:</strong> <code>N = 4</code>, <code>patient = [[5,2],[5,4],[10,3],[20,1]]</code></p>\r\n<p><strong>Output:</strong> <code>3</code></p>\r\n<p>Approach:</p>\r\n<ol>\r\n    <li>The first patient arrives at time 5, the doctor starts examining him immediately at time 5, and finishes at time 7, so the waiting time of the first patient is 7 - 5 = 2.</li>\r\n    <li>The second patient arrives at time 5, the doctor starts examining him at time 7, and finishes at time 11, so the waiting time of the second patient is 11 - 5 = 6.</li>\r\n    <li>The third patient arrives at time 10, the doctor starts examining him at time 11, and finishes at time 14, so the waiting time of the third patient is 14 - 10 = 4.</li>\r\n    <li>The fourth patient arrives at time 20, the doctor starts examining him immediately at time 20, and finishes at time 21, so the waiting time of the fourth patient is 21 - 20 = 1.</li>\r\n</ol>\r\n<p>So the average waiting time = (2 + 6 + 4 + 1) / 4 = 3.25. We give the answer as 3.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= N <= 10^5</code></li>\r\n    <li><code>1 <= arrival, time <= 10^9</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Mthree _6march",
        "company_id": 246
    },
    {
        "id": 778,
        "title": "Candy pairs",
        "problem_statement": "<h1>Candy pairs</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have a box of candies of different brands and different sizes represented by the string candies. There are two sizes of candies produced by each brand which are small and large. Uppercase alphabets are used to represent large candies, while lowercase alphabets are used to represent small candies. If one brand is higher in alphabetical order than another, for example, C > B, then that brand is better. Therefore, Brand C is better than Brand B. Find the best candy pair in the box that is the best brand that has both small and large candies in the box, and return 0 if it isn't there.</p>\r\n<p>You are given an integer N where N represents the total number of candies in the box. You are given an array of candies representing the brand and type of candies in the box. Each candy is represented by an English alphabet where lowercase alphabets denote the small candies and uppercase alphabets denote the large candies.</p>\r\n<p>Return the uppercase representation of the best brand that has both small and large candies in the box. If it is not there, return 0.</p>\r\n\r\n<h2>Function description</h2>\r\n<p>Complete the <code>Solve()</code> function. This function takes the following 2 arguments and returns the answer.</p>\r\n<ul>\r\n    <li><strong>N</strong>: Represents the total candies in the box</li>\r\n    <li><strong>candies[]</strong>: Represents the brand and type of candies in the box, each candy is represented by an English alphabet where lowercase alphabets denote the small candies and upper case alphabets denote the large candies.</li>\r\n</ul>\r\n\r\n<h2>Input format for custom testing</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code</p>\r\n<ul>\r\n    <li>The first line contains an integer N denoting the total number of candies in the box.</li>\r\n    <li>The second line contains a string of size N representing the brand and type of candies in the box</li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>Return the uppercase representation of the best brand candy pair. If not available, then 0.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; N &le; 10<sup>4</sup></li>\r\n    <li>candies contain English alphabets both uppercase and lowercase.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: N = 6, candies = \"bBdCcD\"\r\nOutput: D</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Given</li>\r\n    <ul>\r\n        <li>N=6</li>\r\n        <li>candies = bBdCcD</li>\r\n    </ul>\r\n    <li>There are three candy pairs [b, B], [c, C], and [d, D] in the box.</li>\r\n    <li>Brand D is better than Brand B and Brand A.</li>\r\n    <li>Therefore best brand candy pair is D.</li>\r\n</ul>\r\n\r\n<h2>Note</h2>\r\n<p>Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<p>Time Limit: 1.0 sec(s) for each input file</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Mthree _6march",
        "company_id": 246
    },
    {
        "id": 779,
        "title": "Complete 45 Challenges",
        "problem_statement": "<h1>Complete 45 Challenges</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are playing a video game. This game has <strong>N</strong> challenges, each with some initial energy cost. You also have an initial energy <strong>X</strong>.</p>\r\n<p>You need to complete the challenges individually. When you start a challenge, your health points are:</p>\r\n<ul>\r\n    <li>You win, and the challenge gets completed only if your health is greater than equal to 4.</li>\r\n    <li>Your energy is reduced by one because of exhaustion from the fight.</li>\r\n</ul>\r\n<p><strong>Note:</strong> You can complete the challenges in any order.</p>\r\n<p>Find the maximum number of challenges you can complete.</p>\r\n\r\n<h3>Function Description</h3>\r\n<p>Complete the <code>solve</code> function. The function takes 3 parameters and returns an integer representing the answer to the question.</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the number of challenges</li>\r\n    <li><code>X</code>: Represents your initial energy</li>\r\n    <li><code>A</code>: Represents the energy associated with <strong>N</strong> challenges</li>\r\n</ul>\r\n\r\n<h3>Input Format for Custom Testing</h3>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate.</p>\r\n<p>The first line contains 2 integers, <strong>N</strong> and <strong>X</strong> denoting the number of challenges and initial energy.</p>\r\n<p>The second line contains <strong>N</strong> space-separated integers representing the array <strong>A</strong>.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5 5\r\n4 3 5 2 5\r\nOutput:\r\n4</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>N = 5</li>\r\n    <li>X = 5</li>\r\n    <li>A = [4, 3, 5, 2, 5]</li>\r\n</ul>\r\n<p>You need to complete the challenges in the following order: 3 -> 1 -> 4 -> 2.</p>\r\n<p>In this way, you can complete a total of 4 challenges.</p>\r\n<p>It can be shown that you cannot complete more than 4 challenges in this case.</p>\r\n<p>The maximum number of challenges that can be completed is 4.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= N <= 10^5</code></li>\r\n    <li><code>1 <= X <= 10^9</code></li>\r\n    <li><code>1 <= A[i] <= 10^9</code></li>\r\n</ul>\r\n\r\n<p><strong>Note:</strong> Sample input must be able to pass the sample output from the provided sample input. However, your code is run against multiple hidden test cases. It is not necessary that your code solve for the most robust to solve the problem statement.</p>\r\n<p><strong>Time Limit:</strong> 2.0 second for each input file</p>\r\n<p><strong>Memory Limit:</strong> 256 MB</p>\r\n<p><strong>Max size:</strong> 1280 KB</p>\r\n<p><strong>Scoring:</strong> Score is assigned if any testcase passes</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Mthree _6march",
        "company_id": 246
    },
    {
        "id": 780,
        "title": "Minimum Extra Chocolates",
        "problem_statement": "<h1>Minimum Extra Chocolates</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given two boxes of chocolate A and B-chocolates representing the number of chocolates. Alex and Drake have, respectively. Alex is a very clever child and will only be happy if he receives a multiple of what Alex gets. You decided to buy some extra chocolates.</p>\r\n<p>Mathematically, The share of chocolates will be: <code>k * (A + X) = (B + Y)</code> for some non-negative integer <code>X</code> and <code>Y</code> and some positive integer <code>k</code>.</p>\r\n<p>What is the minimum number of extra chocolates <code>(X + Y)</code> that you need to buy?</p>\r\n<p><strong>Note:</strong> The original chocolates (A and B) cannot be transferred among each other.</p>\r\n<p>Complete the function solution. The function takes 2 parameters and returns the solution.</p>\r\n<ul>\r\n    <li>A: Represents the number of initial chocolates in Alex's box</li>\r\n    <li>B: Represents the number of initial chocolates in Drake's box</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code</p>\r\n<ul>\r\n    <li>The first line contains A, denoting the number of initial chocolates in Alex's box</li>\r\n    <li>The second line contains B, denoting the number of initial chocolates in Drake's box</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print an integer representing the minimum number of extra chocolates you must buy.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n8\r\n16\r\nOutput:\r\n0</code></pre>\r\n<p><strong>Explanation:</strong> For the given test case, if you let X=0 and Y=0, then B=16 will be a multiple of A=8. Here, you have k=2, and there is no way to make X+Y smaller, so the answer is 0.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= A, B &lt;= 10^9</code></li>\r\n</ul>\r\n\r\n<h2>Notes</h2>\r\n<p>Your code must be able to pass the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass those hidden test cases to solve the problem statement.</p>\r\n\r\n<h2>Limits</h2>\r\n<ul>\r\n    <li>Time Limit: 1.0 second(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>\r\n\r\n<h2>Scoring</h2>\r\n<p>Score is assigned if any testcase passes</p>\r\n\r\n<h2>Allowed Languages</h2>\r\n<ul>\r\n    <li>C</li>\r\n    <li>C++14</li>\r\n    <li>C++17</li>\r\n    <li>Java 8</li>\r\n    <li>Java 14</li>\r\n    <li>Java 17</li>\r\n    <li>Python 3</li>\r\n    <li>Python 3.8</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Mthree _6march",
        "company_id": 246
    }
]