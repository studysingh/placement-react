[
    {
        "id": 609,
        "title": "Drone Surveillance System",
        "problem_statement": "<h1>Drone Surveillance System</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A tech company has implemented a drone surveillance system to enhance airspace safety. Using a 2D GPS coordinate system, they have mapped a triangular no-fly zone that includes their data center. Any unauthorized drone entering this area is considered a potential threat.</p>\r\n<p>The system continuously tracks all drones in the vicinity and logs their real-time GPS coordinates. Drones located within the triangular no-fly zone, or precisely on its border are considered to have violated the no-fly zone.</p>\r\n<p>Your task is to write a program that takes the three coordinates of the no-fly zone, followed by the coordinates of N drones flying, and prints the area of the no-fly zone and the number of drones violating the no-fly zone.</p>\r\n<p>The following formula can be used to calculate the area of a triangle with its coordinates as (X1, Y1), (X2, Y2), (X3, Y3):</p>\r\n<pre><code class='language-text'>Area = 0.5 * |X1(Y2 - Y3) + X2(Y3 - Y1) + X3(Y1 - Y2)|</code></pre>\r\n<p>Read the input from STDIN and print the output to STDOUT.</p>\r\n<p>Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first three lines of input contain two space-separated integers each. One line represents one vertex of the no-fly zone i.e. first line has XA, YA, second line has XB, YB, and the third line has XC, YC.</p>\r\n<p>The fourth input line contains an integer N, representing the number of drones.</p>\r\n<p>The next N lines of input each contain two space-separated integers XI, YI representing the coordinates of one drone.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>The first line of output should print the area of the no-fly zone. Print only the integer portion i.e. if area is 7.6, print only 7.</p>\r\n<p>The second line of output should print the number of drones violating the no-fly zone.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n0 0\r\n4 0\r\n2 2\r\n5\r\n0 2\r\n2 1\r\n5 5\r\n2 2\r\n5 0\r\nOutput:\r\n4\r\n8</code></pre>\r\n<p><strong>Explanation:</strong> Given three GPS coordinates of the no-fly zone are: (0, 0), (4, 0), and (2, 2). 5 drones are flying, with their coordinates being (0, 2), (2, 1), (5, 5), (2, 2), and (5, 0).</p>\r\n<p>The graph plot below shows the no-fly zone and the positions of all 5 drones.</p>\r\n<p><img src=\"https://i.imgur.com/example1_graph.png\" alt=\"Graph for Example 1\"></p>\r\n<p>As can be seen, the area of the no-flyzone is: 4 x 4 / 2 = 8. It can also be seen that one drone is on the no-fly zone border and one drone is inside it. Therefore, a total of 4 drones are unauthorized.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n2 2\r\n5 0\r\n3 6\r\n6\r\n-1 -1\r\n0 0\r\n4 2\r\n3 3\r\n4 0\r\n3 2\r\nOutput:\r\n7\r\n3</code></pre>\r\n<p><strong>Explanation:</strong> Given three GPS coordinates of the no-fly zone are (2, 2), (5, 0), and (3, 6). 6 drones are flying, with their coordinates being (-1, -1), (0, 0), (4, 2), (3, 3), (4, 0), and (3, 2).</p>\r\n<p>The area of the no-fly zone can be calculated to be 7.</p>\r\n<p>It can also be seen that one drone is on the no-fly zone border and two drones are inside it. Therefore, a total of 3 drones are unauthorized.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li>All coordinates are integers</li>\r\n<li>1 <= N <= 10<sup>4</sup> (the number of drones)</li>\r\n<li>Coordinate values -10<sup>4</sup> <= X, Y <= 10<sup>4</sup></li>\r\n<li>The triangle is guaranteed to be non-degenerate (area > 0)</li>\r\n</ul>\r\n\r\n<pre><code class='language-cpp'>#include &lt;iostream&gt;\r\n#include &lt;vector&gt;\r\nusing namespace std;\r\n\r\nstruct Point {\r\n    int x, y;\r\n};\r\n\r\nvoid printResult(Point XA, Point XB, Point XC, int N, vector&lt;Point&gt; &drones) {\r\n    // Here, XA, XB, XC, is the coordinates of the triangle vertices A, B, C\r\n    // N is number of drones\r\n    // drones is the vector storing coordinates of each drone as pairs of integers (x, y)\r\n\r\n    // WRITE YOUR CODE HERE.\r\n\r\n}\r\n\r\nint main() {\r\n    Point XA, XB, XC;\r\n    int N;\r\n\r\n    cin >> XA.x >> XA.y;\r\n    cin >> XB.x >> XB.y;\r\n    cin >> XC.x >> XC.y;\r\n\r\n    cin >> N;\r\n\r\n    vector&lt;Point&gt; drones(N);\r\n    // ... (input reading for drones would continue here)\r\n}\r\n</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 610,
        "title": "Date Format Conversion",
        "problem_statement": "<h1>Date Format Conversion</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are tasked with building a program that takes a date string in various formats and converts it into a standardized format. The program should recognize the incoming format, extract the month, day, and year, and output them in the format MM DD YYYY, where MM is 01-12, DD is 01-31, and YYYY is the four-digit year (e.g. 2019).</p>\r\n<p>The program should convert the following five date formats:</p>\r\n<ul>\r\n    <li>January 9, 2019 (Full month name)</li>\r\n    <li>Jan 9, 2019 (Abbreviated month name)</li>\r\n    <li>01/09/2019 (MM/DD/YYYY format)</li>\r\n    <li>01-09-2019 (MM-DD-YYYY format)</li>\r\n    <li>01.09.2019 (MM.DD.YYYY format)</li>\r\n</ul>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The only line of input will consist of a string representing a date in one of the following five formats:</p>\r\n<ul>\r\n    <li>MMMM D, YYYY → Full month name</li>\r\n    <li>MMM D, YYYY → Abbreviated month name</li>\r\n    <li>MM/DD/YYYY → Slash-separated format</li>\r\n    <li>MM-DD-YYYY → Dash-separated format</li>\r\n    <li>MM.DD.YYYY → Dot-separated format</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>A single line of output should contain integers representing month(MM), day(DD), and year(YYYY), separated by single white spaces. Months and days must always be printed in two digits, irrespective of how input is given.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; MM (month) &le; 12</li>\r\n    <li>1 &le; DD (day) &le; 31</li>\r\n    <li>1900 &le; YYYY (year) &le; 2100</li>\r\n    <li>For month names (full or abbreviated) in input, the first letter will be uppercase. Example: \"Jan\", \"February\", \"Dec\", \"March\".</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: February 9, 2019\r\nOutput: 02 09 2019</code></pre>\r\n<p><strong>Explanation:</strong> Given input date is \"February 9, 2019\" which is in the format \"MMMM D, YYYY\", and it needs to be converted to \"MM DD YYYY\" format. So, the final output becomes: 02 09 2019.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: 3-10-2023\r\nOutput: 03 10 2023</code></pre>\r\n<p><strong>Explanation:</strong> Given input date is \"3-10-2023\" which is in the format \"MM-DD-YYYY\", and it needs to be converted to \"MM DD YYYY\" format. So, the final output becomes: 03 10 2023.</p>\r\n\r\n<h2>Starter Code</h2>\r\n<pre><code class='language-cpp'>#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\n#include &lt;using namespace std;&gt;\r\n\r\nstring convertDate(string str1) // str1 is the given input string.\r\n{\r\n    string dateFormats = \"\";\r\n    // WRITE YOUR CODE HERE\r\n\r\n    return dateFormats;\r\n}\r\n\r\nint main()\r\n{\r\n    string str1;\r\n    getline(cin, str1);\r\n    cout &lt;&lt; convertDate(str1);\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 611,
        "title": "Find Shortest Substring",
        "problem_statement": "<h1>Find Shortest Substring</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Determine the length of the shortest substring to delete from a string <code>s</code> of length <code>n</code>, so that the resulting string contains only distinct characters. A substring is a sequence of characters that appear consecutively within a string. If a substring is deleted, the remaining parts of the string are joined together. If no deletion is necessary, the answer should be 0.</p>\r\n<p>Complete the function <code>findShortestSubstring</code> in the editor with the following parameter:</p>\r\n<ul>\r\n    <li><code>s</code>: the string to analyze</li>\r\n</ul>\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n    <li><code>int</code>: an integer representing the length of the shortest substring that should be deleted</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: s = \"abcbkck\"\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> There are three optimal choices: \"abcbkck\", \"abcbkck\", and \"abcbkck\". The bold characters are the substrings to remove. All result in \"abck\" which has only distinct characters. The removed substring must have at least 3 characters.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: s = \"xabbcacpqr\"\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> Given string s = \"xabbcacpqr\", remove 'bca' in bold \"xabbcacpqr\" to get \"xabcpqr\".</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: s = \"abc\"\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> The string is already all distinct characters, so no deletion is needed.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; n &le; 10<sup>5</sup></code></li>\r\n    <li><code>s</code> consists of lowercase English letters only.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 612,
        "title": "Minimum Distance to Warehouses",
        "problem_statement": "<h1>Minimum Distance to Warehouses</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are managing a network of departmental stores on a very long street. You are given an array <code>storeLocations</code> where <code>storeLocations[i]</code> represents the location of the <code>i</code>th branch along the street. To improve the logistics and reduce travel time, you want to establish <code>k</code> warehouses.</p>\r\n<p>The objective is to place the <code>k</code> warehouses on the street such that sum of distance of each store to its nearest warehouse is minimum.</p>\r\n<p><strong>Note1:</strong> The warehouses can only be placed on integer locations on the street</p>\r\n<p><strong>Note2:</strong> The warehouse can be placed within the store as well i.e. on the same integer location as the store</p>\r\n\r\n<h2>Input Format for Custom Testing</h2>\r\n<p>The first line contains an integer n, number of storeLocations (length of storeLocations)</p>\r\n<p>Each of the next n lines contains an integer storeLocations[i].</p>\r\n<p>The last line would have k.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= k <= storeLocations.length <= 100</code></li>\r\n    <li><code>1 <= storeLocations[i] <= 10^4</code></li>\r\n    <li>All the integers of storeLocations are unique.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n1\r\n3\r\n8\r\n11\r\n23\r\n3\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong> \r\nstoreLocations=[1,3,8,11,23], k=3\r\noutput: 5\r\nAllocate warehouses at position 2, 9, 23.\r\nMinimum total distance would be |2-1| + |2-3| + |9-8| + |9-11| + |23-23| = 5</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n2\r\n4\r\n6\r\n22\r\n28\r\n2\r\nOutput: 10</code></pre>\r\n<p><strong>Explanation:</strong> \r\nstoreLocations=[2,4,6,22,28], k=2\r\noutput: 10\r\nAllocate warehouses at position 4, 25.\r\nMinimum total distance would be |4-2| + |4-4| + |4-6| + |25-22| + |25-28| = 10</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 613,
        "title": "Closeness Centrality",
        "problem_statement": "<h1>Closeness Centrality</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A businessman wants to expand his vegetable distribution business across the entire state. To enable fast distribution, he decides to build storage facilities in cities that are centrally located and well-connected to other cities. He models the state as a graph where each city is represented as a node, and a direct road between two cities is represented as an edge. All edges are of equal length.</p>\r\n<p>He wants to identify the cities that are best suited for setting up storage facilities — these are the cities with the highest “Closeness Centrality”. Closeness Centrality is a measure of how distant the city is from other cities. It is calculated as the reciprocal of the sum of the length of the shortest paths between the city and all other cities in the network: Cities with lower total shortest-path distances to other cities have higher Centrality.</p>\r\n<p>Your task is to help the businessman with a program to find the city or cities that have the highest Closeness Centrality for the given network.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>First line of input contains an integer N, which determines the number of cities. The cities are labeled 0 to N-1.</p>\r\n<p>Each of the next N lines will have N space-separated integers (either 0 or 1), determining if a path exists between any two cities. A value of 1 means a path exists between city A (A=row number) and city B (B=column number), 0 if not.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Cities selected for the storage facility should be printed in a single line in ascending order, separated by a single white space.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n9\r\n001000000\r\n001000000\r\n110111000\r\n001000100\r\n001000100\r\n001000100\r\n00011011\r\n000000100\r\n000000100\r\nOutput:\r\n2 6</code></pre>\r\n<p><strong>Explanation:</strong> From the given input, there are 9 cities (labeled 0 to 8) which are connected as follows: (Graph image shows connections). Calculating the Closeness Centrality of all the cities, we get cities 2 and 6 with the highest Centrality. Hence the output is: \"2 6\".</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n10\r\n0111100000\r\n1010000000\r\n1101010100\r\n1010110000\r\n1001011000\r\n0011101100\r\n0000110000\r\n0010010010\r\n0000000101\r\n0000000010\r\nOutput:\r\n2 5</code></pre>\r\n<p><strong>Explanation:</strong> From the given input, there are 10 cities which are connected as follows: (Graph image shows connections). Calculating the Closeness Centrality of all the cities, we get cities 2 and 5 with the highest Centrality. Hence the output is: \"2 5\".</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= N &lt;= 100, the number of cities.</li>\r\n    <li>You can assume that the provided input graph is always connected.</li>\r\n</ul>\r\n\r\n<h2>Code Template</h2>\r\n<pre><code class='language-javascript'>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\n\r\nvoid printResult(int n, vector&lt;vector&lt;int&gt;&gt; arr)\r\n{\r\n    // In Given data, \"n\" is the number of cities, vector array \"arr\" holds adjacency matrix to\r\n    // determine the path.\r\n    // Find the cities where Storage can be set up, and print them in ascending order.\r\n\r\n    // WRITE YOUR CODE HERE.\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin&gt;&gt;n;\r\n    vector&lt;vector&lt;int&gt;&gt; arr(n, vector&lt;int&gt;(n));\r\n    for(int i=0; i&lt;n; ++i)\r\n    {\r\n        for(int j=0; j&lt;n; ++j)\r\n        {\r\n            cin&gt;&gt;arr[i][j];\r\n        }\r\n    }\r\n    printResult(n, arr);\r\n    return 0;\r\n}\r\n</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 614,
        "title": "Five-Digit Number Puzzle",
        "problem_statement": "<h1>Five-Digit Number Puzzle</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Anant is trying to solve an online puzzle, in which he has to guess a 5-digit number. Every time he guesses a number, the system responds with a string of length 5, made up of only the letters G, Y, or B, where each letter corresponds to the digit in the guessed number. \"G\" means the corresponding digit is in the right place in the answer, \"Y\" means the corresponding digit is present in the answer but is in the wrong place, and \"B\" means the corresponding digit is missing in the answer. Anant can use this information for his next guess.</p>\r\n<p>The five digits in the guesses and the final answer are always unique i.e. same digit cannot appear twice in the number. The numbers cannot start with 0, as that would make it a four digit number.</p>\r\n<p>Anant has made only one guess till now and has received the system response. Help him with a program that provides all the possible answers at this stage, so that it becomes easy for him to guess further in the game.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the standard output and test cases will fail.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n12356\r\nGGGYB\r\nOutput:\r\n12305 12345 12375 12385 12395</code></pre>\r\n<p><strong>Explanation:</strong> The guess was 12356, to which the system response was GGGYB. This means 1,2 and 3 are present in the answer in the right position, 5 is present in the answer but in a different position, and 6 is not present in the answer.\r\nThe possible valid answers in ascending order are: 12305 12345 12375 12385 12395, which is printed as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n24680\r\nGYGYG\r\nOutput:\r\n28640</code></pre>\r\n<p><strong>Explanation:</strong> The guess was 24680, to which the system response was GYGYG. This means 2,6,0 are present in the answer in the correct positions, while 4,8 are present in the answer but in different positions. Therefore, interchanging positions of 4,8 gives us the only possible valid answer i.e. 28640.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>Only five digit numbers are allowed in the puzzle.</li>\r\n    <li>The five digits in the guesses and the final answer are always unique i.e. same digit cannot appear twice in the number.</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line has a five digit number, which represents the guessed number.\r\nThe second line has a string of length five, which represents the system response.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>A single line of output should contain all the possible answers, each separated by a single whitespace. The numbers should be printed in ascending order.</p>\r\n\r\n<pre><code class='language-javascript'>#include &lt;vector&gt;\r\n#include &lt;iostream&gt;\r\n#include &lt;string&gt;\r\n\r\nusing namespace std;\r\n\r\nvector&lt;int&gt; printPossibleResults(int guess, string&amp; response) {\r\n    // WRITE YOUR CODE HERE\r\n    return vector&lt;int&gt;();\r\n}\r\n\r\nint main() {\r\n    int guess;\r\n    string response;\r\n\r\n    cin &gt;&gt; guess;\r\n    cin.ignore();\r\n    getline(cin, response);\r\n\r\n    vector&lt;int&gt; results = printPossibleResults(guess, response);\r\n\r\n    for (size_t i = 0; i &lt; results.size(); ++i) {\r\n        cout &lt;&lt; results[i];\r\n        if (i &lt; results.size() - 1) {\r\n            cout &lt;&lt; \" \";\r\n        }\r\n    }\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 615,
        "title": "Player Move -> Computer Move",
        "problem_statement": "<h1>Player Move -> Computer Move</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are developing a web-based Tic-Tac-Toe game variant where each player can only put a pebble on the board against a computer. The objective of each player is to get three pebbles in a line on a 3x3 grid - horizontally, vertically or diagonally. While trying to stop the other player from achieving this goal, if in the player's last move, the human gets the first two turns to place the pebbles, and then the computer places the third pebble.</p>\r\n<p>You need to write a program to help the computer decide where the third pebble needs to be placed. Depending on the human's first two moves, there may be only one possible position to block the human from winning on the next move. In such a case, print that position as the output. Alternately, if there are multiple positions which can prevent the human from winning on the next move, print \"Any Move\".</p>\r\n<p>The cells in the 3x3 grid are denoted by the integers 0 to 8, as follows:</p>\r\n<pre><code class='language-text'>0 1 2\r\n3 4 5\r\n6 7 8</code></pre>\r\n<p>The following cases depict some examples of the computer's moves.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not write arbitrary strings anywhere in the program, as these contribute to the standard output, and test cases will fail.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= N &lt;= 72</code>, the number of games in each test case</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line of input will contain \"N\", the number of games.</p>\r\n<p>Next N lines of input will contain two integers between 0 to 8, separated by a space, denoting the two pebble positions placed by the human.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Output comprises of N lines, where each line should have an integer representing the pebble position or the string \"Any Move\".</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n0 8\r\n2 4\r\n1 8\r\nOutput:\r\n4\r\n6\r\nAny Move</code></pre>\r\n<p><strong>Explanation:</strong> Three games are given. If the human places the pebbles in positions 0 and 8, the only way to block the human from winning is for the computer to place the pebble in cell 4, hence 4 is the first line of output. Similarly, for human's 2 and 4 move, the only position for the computer is 6. If the human places the pebbles in positions 1 and 8, the computer can play any move and the human cannot win on the next move. So \"Any Move\" is printed as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n0 4\r\nOutput:\r\n8</code></pre>\r\n<p><strong>Explanation:</strong> If the human places the pebbles in positions 0 and 4, the only way to block the human from winning is for the computer to place the pebble in cell 8, hence 8 is the output.</p>\r\n\r\n<pre><code class='language-javascript'>#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nvoid FindResult(int N, vector<pair<int, int>> & arr) {\r\n    // line contains two pebble position\r\n    // WRITE YOUR CODE HERE\r\n}\r\n\r\nint main() {\r\n    int N;\r\n    cin >> N;\r\n    vector<pair<int, int>> arr(N);\r\n    for (int i = 0; i < N; ++i) {\r\n        int A, B;\r\n        cin >> A >> B;\r\n        arr[i] = make_pair(A, B);\r\n    }\r\n    FindResult(N, arr);\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    },
    {
        "id": 616,
        "title": "Lookout Triangle",
        "problem_statement": "<h1>Lookout Triangle</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>During recess in a school garden, a group of children are playing a unique game called 'Lookout Triangle' using ropes. The ropes are laid out in the garden, forming straight line segments. Each rope has two endpoints with integer coordinates. Some ropes may intersect. The children can stand either at the rope endpoints, or at a point of intersection of the ropes.</p>\r\n<p>The objective of the game is for the children to stand in a 'Lookout Triangle' which is formed when each pair of the three children can see each other. Two children can see each other only if the straight line segment formed by connected ropes, without changing direction in between. A child blocks the view if they are standing directly between two other children along the same line.</p>\r\n<p>Your task is to determine the number of distinct ways to place three children on the ropes such that they form a valid Lookout Triangle.</p>\r\n<p><strong>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</strong></p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n1240\r\n4023\r\n2300\r\n0026\r\n2603\r\n0323\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> Here, from the given 6 rope endpoints as coordinates (X1, Y1) and (X2, Y2), the following graph can be plotted. So, there are only 3 distinct valid ways to place three children on the ropes such that all three can see each other according to the game's rules. Therefore, 3 is the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n0040\r\n4044\r\n4404\r\n0400\r\n0044\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> From the given 5 rope endpoints as coordinates (X1, Y1) and (X2, Y2), the following graph can be plotted. There are only 2 distinct valid ways to place three children on the ropes such that all three can see each other according to the game's rules. Therefore, 2 is the output.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 ≤ N ≤ 20, the number of ropes</li>\r\n    <li>The garden 2D grid is represented by coordinates which are positive integers and ≤ 1000.</li>\r\n</ul>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line will contain a single integer N, the number of ropes in the garden.</p>\r\n<p>Each of the next N lines will contain four integers X1 Y1 X2 Y2 — representing a rope with endpoints at coordinates (X1, Y1) and (X2, Y2).</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>A single line of output should print a single integer representing the number of distinct valid ways to place three children on the ropes such that a Lookout Triangle is formed.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Goldman Sachs_22july",
        "company_id": 202
    }
]