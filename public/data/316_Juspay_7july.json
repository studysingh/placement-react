[
    {
        "id": 982,
        "title": "Cloud Network Bandwidth Pricing",
        "problem_statement": "```html\r\n<h1>Cloud Network Bandwidth Pricing</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p><strong>Background:</strong></p>\r\n<p>In a cloud network, an infinite number of data centers are set up globally. Each data center is assigned a unique positive integer starting from 1. The cloud network has direct, bidirectional data channels between:</p>\r\n<ol>\r\n    <li>Data center <code>i</code> and data center <code>2i</code>.</li>\r\n    <li>Data center <code>i</code> and data center <code>2i + 1</code>.</li>\r\n</ol>\r\n<p>There exists a unique shortest path between any two data centers. Initially, data transfer between any two data centers is free. However, due to network optimization, the cloud provider occasionally imposes bandwidth fees on certain data channels. The network provider will make several updates to the fees based on upcoming events. There are two types of events:</p>\r\n<ul>\r\n    <li><strong>1. Fee Update:</strong> The cloud provider updates the bandwidth fee for all data channels along the shortest path between data centers <code>a</code> and <code>b</code> by adding a fee of <code>x</code> units.</li>\r\n    <li><strong>2. Data Transfer:</strong> A customer needs to transfer data from one data center <code>a</code> to another data center <code>b</code>. The transfer always follows the shortest path. You need to calculate the total cost incurred for this data transfer.</li>\r\n</ul>\r\n\r\n<h3>Input:</h3>\r\n<ul>\r\n    <li>The first line contains an integer <code>q</code> (1 &le; q &le; 1,000), representing the number of events.</li>\r\n    <li>The next <code>q</code> lines contain details of the events in chronological order:</li>\r\n    <ul>\r\n        <li><code>1 a b x</code> indicates a fee update where all channels on the shortest path from <code>a</code> to <code>b</code> increase their fee by <code>x</code> units.</li>\r\n        <li><code>2 a b 0</code> represents a data transfer request from data center <code>a</code> to data center <code>b</code>.</li>\r\n    </ul>\r\n    <li>They are present in the form of 2D array of <code>q</code> rows and 4 columns.</li>\r\n</ul>\r\n\r\n<h3>Output:</h3>\r\n<p>For each data transfer event (<code>2 a b 0</code>), add to the sum the total cost for the transfer and return the sum.</p>\r\n\r\n<h3>Function description</h3>\r\n<p>Complete the <strong>solve</strong> function in the editor below. It has the following parameter(s):</p>\r\n<pre><code class='language-text'>Name    Type        Description\r\nq       INTEGER     number of events</code></pre>\r\n<p>The function must return an <strong>INTEGER</strong> denoting the sum of total cost for each transfer event.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; q &le; 10<sup>3</sup></li>\r\n    <li>1 &le; a[i][j] &le; 10<sup>9</sup></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n7\r\n1 3 4 2\r\n1 4 1 2\r\n1 3 6 8\r\n2 4 3 0\r\n1 6 1 4\r\n2 3 7 0\r\n2 2 4 0\r\nOutput: 86</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ol>\r\n    <li>For event <code>2 4 3 0</code>: The answer is 64. The path is 4->2->1->3. Costs: 4->2 has cost 22, 2->1 has 22, 1->3 has 20. So, 22+22+20=64.</li>\r\n    <li>For event <code>2 3 7 0</code>: The answer is 0 as no cost is present.</li>\r\n    <li>For event <code>2 2 4 0</code>: The answer is 22. The path 2->4 has cost 20 from the 1st query and 2 from the 2nd. So, 22.</li>\r\n</ol>\r\n<p>The total sum of costs for data transfer events is 64 + 0 + 22 = 86.</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Juspay_7july",
        "company_id": 316
    },
    {
        "id": 983,
        "title": "Corporate Restructuring",
        "problem_statement": "<h1>Corporate Restructuring</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In the large corporation Techify Inc., there is a hierarchical structure of employees. The company has N employees, each identified by a unique ID from 1 to N. At the top of this structure is the CEO, who serves as the root of the company's hierarchy.</p>\r\n<p>Employees report to their immediate supervisors except for the CEO, who has no supervisor. The company is undergoing a restructuring process because some employees have become non-compliant:</p>\r\n<ul>\r\n    <li><strong>Compliant:</strong> An employee is compliant if they respect the company's policies and directives given by their supervisor.</li>\r\n    <li><strong>Non-Compliant:</strong> Some employees have grown dissatisfied and no longer respect their supervisor's authority</li>\r\n</ul>\r\n<p>To streamline the company, management has decided to identify and remove non-compliant employees, but with specific criteria:</p>\r\n<ol>\r\n    <li>Select a non-compliant employee (one who does not respect their supervisor) who also has no compliant subordinates. If there are multiple such employees, select the one with the smallest ID.</li>\r\n    <li>Remove the selected non-compliant employee. When this employee is removed, their direct reports are immediately reassigned to report to their supervisor.</li>\r\n    <li>Repeat the process until there are no more employees that meet the removal criteria.</li>\r\n</ol>\r\n<p>Your task is to determine the order in which these non-compliant employees will be removed.</p>\r\n<ul>\r\n    <li>If there is at least one non-compliant employee that can be removed, print a single line containing the IDs of the employees in the order they will be removed.</li>\r\n    <li>If no such employee exists, print -1.</li>\r\n</ul>\r\n<p><strong>Notes</strong></p>\r\n<ul>\r\n    <li>P_i (1 ≤ P_i ≤ N or -1) denotes the direct supervisor of employee i. The CEO (root) has P_i = -1 and C_i (0 ≤ C_i ≤ 1) indicates whether the employee respects their supervisor.</li>\r\n    <li>C_i = 0 means the employee is compliant (respects the supervisor).</li>\r\n    <li>C_i = 1 means the employee is non-compliant (does not respect the supervisor)</li>\r\n</ul>\r\n<p>The function must return an INTEGER ARRAY denoting the the order in which these non-compliant employees will be removed.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 ≤ N ≤ 10^5</li>\r\n    <li>1 ≤ Arr[i][j] ≤ 10^5</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n3 1\r\n1 1\r\n-1 0\r\n2 1\r\n3 0\r\nOutput:\r\n1 2 4</code></pre>\r\n<p><strong>Explanation:</strong> 1,2,4 is order of non-compliant employee ID in which they are removed</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n8\r\n2 1\r\n-1 0\r\n1 0\r\n1 1\r\n1 1\r\n4 0\r\n5 1\r\n7 0\r\nOutput:\r\n5</code></pre>\r\n<p><strong>Explanation:</strong> Non-Compliant Employee with ID 5 is removed.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Juspay_7july",
        "company_id": 316
    },
    {
        "id": 984,
        "title": "Weight Lifting Challenge",
        "problem_statement": "<h1>Weight Lifting Challenge</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Sarah is training for a weightlifting competition. She has a set of n different weights, and each weight has a specified initial load. To optimize her training, she decides to add an additional load to each weight based on a permutation of the numbers from 1 to n.</p>\r\n<p>Sarah can select exactly one permutation of length n, p1, p2, ..., pn, and then change each weight's load according to the rule: w[i] = w[i] + p[i]. After applying this additional load, Sarah wants to find out the maximum number of weights that can have the same final load.</p>\r\n<p>Help Sarah by finding the maximum possible number of weights that can have an identical load after the addition.</p>\r\n<p>Here</p>\r\n<ul>\r\n    <li>1 <= p[i] <= n</li>\r\n    <li>Each p[i] is unique.</li>\r\n</ul>\r\n\r\n<p>Complete the <code>solve</code> function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li><strong>Name:</strong> <code>n</code>, <strong>Type:</strong> <code>INTEGER</code>, <strong>Description:</strong> the number of weights</li>\r\n    <li><strong>Name:</strong> <code>w</code>, <strong>Type:</strong> <code>INTEGER ARRAY</code>, <strong>Description:</strong> contains n integers w1, w2, ... wn (1 <= wi <= 10^9) - the initial loads of the weights.</li>\r\n</ul>\r\n<p>The function must return an <code>INTEGER</code> denoting the maximum number of weights that can have the same load after the operation of adding the permutation.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 <= n <= 2 * 10^5</li>\r\n    <li>1 <= w[i] <= 10^9</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n1\r\n2\r\n3\r\n4\r\nOutput:\r\n4</code></pre>\r\n<p><strong>Explanation:</strong>\r\np=[4,3,2,1]\r\nnew w=[5,5,5,5]\r\nHere there are 4 equal numbers.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n1\r\n2\r\n3\r\n1\r\n1\r\nOutput:\r\n3</code></pre>\r\n<p><strong>Explanation:</strong>\r\np=[3,2,1,4,5]\r\nnew w=[4,4,4,5,6]\r\nHence 3 equal numbers.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n1\r\n1\r\n1\r\n1\r\n1\r\n2\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong>\r\napply p=[2,3,4,5,6,1]\r\nThis gives w: [3,4,5,6,7,3]\r\nHence 2 equal numbers.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Juspay_7july",
        "company_id": 316
    },
    {
        "id": 985,
        "title": "Internet Service Provider Cable Management",
        "problem_statement": "<h1>Internet Service Provider Cable Management</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p><strong>Background:</strong> An Internet Service Provider (ISP) has set up an extensive network of cables to provide internet services across a city. The network is arranged in a balanced tree structure, with the central ISP hub at the root. Each cable has a bandwidth cost that varies depending on its usage and maintenance.</p>\r\n<p><strong>Objective:</strong> You are responsible for monitoring the network, calculating the bandwidth cost for data transfers between customers, and updating cable costs as necessary.</p>\r\n<p><strong>Functionality Requirements:</strong></p>\r\n<ul>\r\n    <li><strong>1. Bandwidth Cost Query:</strong> Calculate the total bandwidth cost between any two customers.</li>\r\n    <li><strong>2. Cost Update Query:</strong> Modify the cost of a specific cable connecting two customers.</li>\r\n</ul>\r\n<p><strong>Input Format:</strong></p>\r\n<ul>\r\n    <li><strong>Network Configuration:</strong> The input contains 3 integers N, R, M and the next N-1 lines contain three integers U, V, W. N is the number of customers, R is the root customer representing the central hub, M=N-1. U and V are two connected customers and W is the bandwidth cost of the cable.</li>\r\n    <li><strong>Queries:</strong> Q integer indicates the number of queries. Each of the next Q lines describes a query, either:\r\n        <ul>\r\n            <li>1 A B 0 to calculate the bandwidth cost between customers A and B.</li>\r\n            <li>2 U V W to update the bandwidth cost between customers U and V to W.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n<p><strong>Output Format:</strong></p>\r\n<ul>\r\n    <li>Sum of all bandwidth cost queries, i.e the sum of total cost between the specified customers.</li>\r\n</ul>\r\n\r\n<p>Complete the <code>solve</code> function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li><code>N</code>: INTEGER, number of customers</li>\r\n    <li><code>R</code>: INTEGER, root customer representing the central hub</li>\r\n    <li><code>M</code>: INTEGER, N-1</li>\r\n    <li><code>edges</code>: INTEGER 2D ARRAY, N-1 rows each contain three integers U, V, W, where U and V are two connected customers and W is the bandwidth cost of the cable.</li>\r\n    <li><code>Q</code>: INTEGER, number of queries</li>\r\n    <li><code>queries</code>: INTEGER 2D ARRAY, Q rows describes a query, either: 1 A B 0 to calculate the bandwidth cost between customers A and B. 2 U V W to update the bandwidth cost between customers U and V to W.</li>\r\n</ul>\r\n<p>The function must return an INTEGER denoting the sum of all bandwidth cost queries, i.e the sum of total cost between the specified customers.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; N &le; 10^5</code></li>\r\n    <li><code>1 &le; R &le; 10^5</code></li>\r\n    <li><code>1 &le; M &le; 10^5</code></li>\r\n    <li><code>1 &le; edges[i][j] &le; 10^5</code></li>\r\n    <li><code>1 &le; Q &le; 10^5</code></li>\r\n    <li><code>1 &le; queries[i][j] &le; 10^5</code></li>\r\n</ul>\r\n\r\n<h2>Input format for debugging</h2>\r\n<ul>\r\n    <li>The first line contains an integer, N, denoting the number of customers.</li>\r\n    <li>The next line contains an integer, R, denoting the root customer representing the central hub.</li>\r\n    <li>The next line contains an integer, M, denoting the number of rows in edges.</li>\r\n    <li>The next line contains an integer, 3, denoting the number of columns in edges.</li>\r\n    <li>Each line i of the M subsequent lines (where 0 &le; i &lt; M) contains 3 space separated integers each describing the row edges[i].</li>\r\n    <li>The next line contains an integer, Q, denoting the number of rows in queries.</li>\r\n    <li>The next line contains an integer, 4, denoting the number of columns in queries.</li>\r\n    <li>Each line i of the Q subsequent lines (where 0 &le; i &lt; Q) contains 4 space separated integers each describing the row queries[i].</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n1\r\n1\r\n3\r\n1 2 5\r\n1\r\n4\r\n1 2 0 0\r\nOutput:\r\n7</code></pre>\r\n<p><strong>Output Description:</strong> Since only 1 edge exists, earlier its cost was 5 and later it became 2. So, 5+2=7.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n2\r\n2\r\n3\r\n1 2 1\r\n2 3 1\r\n3\r\n4\r\n1 1 3 0\r\n2 2 3 5\r\n1 1 3 0\r\nOutput:\r\n8</code></pre>\r\n<p><strong>Output Description:</strong> Initially 1 to 3 had cost 1+1=2<br>Later, cost=6<br>So, 6+2=8.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n1\r\n4\r\n3\r\n1 2 3\r\n1 3 2\r\n2 4 4\r\n2 5 1\r\n4\r\n4\r\n1 4 5 0\r\n2 1 2 2\r\n1 4 0 0\r\n1 1 3 0\r\nOutput:\r\n21</code></pre>\r\n<p><strong>Output Description:</strong>\r\n<pre><code class='language-text'>3->1->2->4\r\n|\r\n5</code></pre>\r\nQ1. 1 4 5 0: 4 to 5: cost 4+1=5<br>\r\nQ2. update<br>\r\nQ3. 1 1 4 0: 1 to 4: cost=10+4=14<br>\r\nQ4. 1 1 3 0: 1 to 3: cost=2<br>\r\nTotal sum=5+14+2=21</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Juspay_7july",
        "company_id": 316
    },
    {
        "id": 986,
        "title": "Network Technician's Mission",
        "problem_statement": "<h1>Network Technician's Mission</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In the city of Techville, a network technician Sam is tasked with inspecting a newly established network of communication towers. The network is structured as a rooted tree with N towers, with the main control tower located at node 1. This control tower serves as the central hub for all communications.</p>\r\n<p>The network is built through various terrains, some of which are marked as hazardous zones. Each tower is either in a safe zone or a hazardous one. The outermost towers (the leaf nodes of the tree) need to be inspected by Sam, but he is cautious and wants to avoid paths that traversethrough too many consecutive hazardous zones.</p>\r\n<p>Your task is to help Sam count the number of outermost towers (leaf nodes) he can safely inspect, where the path from the main control tower to the leaf contains no more than M consecutive hazardous zones.</p>\r\n<p>It is guaranteed that the given set of edges forms a tree structure</p>\r\n<p>Complete the `safeViewPoints` function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li><strong>N</strong>: INTEGER, the number of nodes in the tree</li>\r\n    <li><strong>M</strong>: INTEGER, the maximum number of consecutive dangerous sections Alex is willing to traverse</li>\r\n    <li><strong>k</strong>: INTEGER, Always equals to N-1</li>\r\n    <li><strong>Arr1</strong>: INTEGER ARRAY, Array of N integers stating if tower in safe zone or not</li>\r\n    <li><strong>Arr2</strong>: INTEGER 2D ARRAY, 2D array of size N-1 with two values</li>\r\n</ul>\r\n<p>The function must return an INTEGER denoting the the number of viewpoints (leaf nodes) where the path from the main camp (node 1) contains at most M consecutive dangerous sections.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n7\r\n1\r\n6\r\n1\r\n0\r\n1\r\n1\r\n0\r\n1 2\r\n1 3\r\n2 4\r\n2 5\r\n3 6\r\n3 7\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong> The number of outermost towers (leaf nodes) he can safely inspect.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n2\r\n4\r\n1\r\n1\r\n0\r\n1\r\n1 2\r\n1 3\r\n2 4\r\n3 5\r\nOutput:\r\n1</code></pre>\r\n<p><strong>Explanation:</strong> The number of outermost towers (leaf nodes) he can safely inspect</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>2 &lt;= N &lt;= 10^5</code></li>\r\n    <li><code>1 &lt;= M &lt;= N</code></li>\r\n    <li><code>N-1 &lt;= k &lt;= N-1</code></li>\r\n    <li><code>1 &lt;= Arr1[i] &lt;= 10^5</code></li>\r\n    <li><code>1 &lt;= Arr2[i][0], Arr2[i][1] &lt;= N</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Juspay_7july",
        "company_id": 316
    }
]