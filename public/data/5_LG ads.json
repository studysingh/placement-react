[
    {
        "id": 11,
        "title": "Chocolate game",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <h2>2. Chocolate Game</h2>\n    </div>\n\n<div class=\"problem-description\">\n        <p>There are <var>n</var> children indexed from 0 to n-1 sitting in a circle.</p>\n        <p>You are given a 0-indexed integer array, <var>chocolate</var>, where the child at index <var>i</var> will consume <var>chocolate[i]</var> chocolates. The teacher starts with <var>k</var> chocolates, which she provides to child at index 0, and child 0 consumes <var>chocolate[0]</var> chocolates and passes on the remaining to the next child. This will continue until the number of chocolates is less than the number required by the child, and this child will be unhappy.</p>\n        <p>Along with the array <var>chocolate</var>, you're given another array <var>initialValues</var> where each value in the list is an independent query on the value of <var>k</var> (array <var>chocolate</var> is common for all queries). Return an array with the index of the unhappy child for each of the initial values.</p>\n    </div>\n\n<div class=\"function-details\">\n        <h3>Function Description</h3>\n        <p>Complete the function chocolateGame in the editor below.</p>\n\n<h4>Function Parameters:</h4>\n        <ul>\n            <li><code>int chocolate[]</code>: array of number of chocolates each child wants</li>\n            <li><code>int initialValues[]</code>: initial number of chocolates(k) for each query</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p><code>int[]</code>: Index of the unhappy child for each of the starting values.</p>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ chocolate.length ≤ 10<sup>5</sup></li>\n            <li>0 < chocolate[i] < 10<sup>5</sup></li>\n            <li>1 ≤ initialValues.length ≤ 10<sup>5</sup></li>\n            <li>0 ≤ initialValues[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format for Custom Testing</h3>\n        <p>Input from stdin will be processed as follows and passed to the function:</p>\n        <ul>\n            <li>The first line contains an integer n, the size of the array chocolates.</li>\n            <li>Each of the next n lines contains an integer chocolate[i].</li>\n            <li>The next line contains integer m, the number if queries</li>\n            <li>Each of the next m lines contains an integer initialValues[i].</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Sample Case 0</h3>\n        <div class=\"example\">\n            <pre class=\"input\">Input:\nChocolate = [5,1,5], initialValues = [22, 20, 104, 0]</pre>\n            <pre class=\"output\">Output:\n[0, 2, 1, 0]</pre>\n            <div class=\"explanation\">\n                <p>for initialValues[0] i.e k = 22:</p>\n                <p>The children go in turns as follows:</p>\n                <ul>\n                    <li>The game starters with k = 22 chocolates,</li>\n                    <li>child number 0 consumes 5 chocolates, so remaining = 17.</li>\n                    <li>child number 1 consumes 1 chocolates, so remaining = 16.</li>\n                    <li>child number 2 consumes 5 chocolates, so remaining = 11.</li>\n                    <li>child number 0 consumes 5 chocolates, so remaining = 6.</li>\n                    <li>child number 1 consumes 1 chocolates, so remaining = 5.</li>\n                    <li>child number 2 consumes 5 chocolates, so remaining = 0.</li>\n                </ul>\n                <p>Student number 0 does not have enough chocolates, so they will be unhappy.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\"code-template\">\n        <pre class=\"cpp\"><code>vector&lt;int&gt; chocolateGame(vector&lt;int&gt; chocolate, vector&lt;int&gt; initialValue) {\n    // Complete this function\n}</code></pre>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OA_questions/tree/ff65ba63312e23a5d4c86d447125e4fae36b973a/LG%20ads/choclateGame",
        "solution_code": null,
        "company_name": "LG ads",
        "company_id": 5
    },
    {
        "id": 12,
        "title": "Trick or treat",
        "problem_statement": "<div class=\"problem-container\">\n    <div class=\"problem-header\">\n        <h2>1. Trick or treat</h2>\n    </div>\n\n<div class=\"problem-description\">\n        <p>Jack is going trick-or-treating on Halloween in his neighborhood. There are <var>n</var> houses in a line, each offering a different number of candies. However, Jack <em>cannot visit two adjacent houses</em> for treats.</p>\n        <p>Given an <strong>array of size n</strong>, where <strong>each index represents the number of candies</strong> he can get from that house, find the <strong>maximum</strong> number of candies that Jack can collect this Halloween.</p>\n    </div>\n\n<div class=\"function-details\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>trickOrTreat</code> in the editor below.</p>\n\n<h4>Function Parameters:</h4>\n        <ul>\n            <li><code>int candies[n]</code>: number of candies from Jack can get from each house.</li>\n        </ul>\n\n<h4>Returns</h4>\n        <ul>\n            <li><code>int</code>: the maximum number of candies Jack can get.</li>\n        </ul>\n    </div>\n\n<div class=\"constraints\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ candies.length ≤ 100000</li>\n            <li>0 ≤ candies[i] ≤ 400</li>\n        </ul>\n    </div>\n\n<div class=\"input-format\">\n        <h3>Input Format</h3>\n        <p>Input from stdin will be processed as follows and passed to the function:</p>\n        <ul>\n            <li>The first line contains an integer n, the size of the array candies.</li>\n            <li>Each of the next n lines contains an integer candies[i].</li>\n        </ul>\n    </div>\n\n<div class=\"examples\">\n        <h3>Examples</h3>\n        <div class=\"example\">\n            <h4>Sample Case 0</h4>\n            <pre class=\"input\">Input:\ncandies = [6, 7, 1, 3, 8, 2, 4]</pre>\n            <pre class=\"output\">Output:\n19</pre>\n            <div class=\"explanation\">\n                <p>Jack will take from house 1, 3, 5 and 7, total candies = 6 + 1 + 8 + 4 = 19.</p>\n            </div>\n        </div>\n\n<div class=\"example\">\n            <h4>Sample Case 1</h4>\n            <pre class=\"input\">Input:\ncandies = [10, 5, 15, 20, 2, 30]</pre>\n            <pre class=\"output\">Output:\n60</pre>\n            <div class=\"explanation\">\n                <p>Jack will take from houses 1, 4 and 6, total candies = 10 + 20 + 30 = 60.</p>\n            </div>\n        </div>\n    </div>\n\n<div class=\"code-template\">\n        <pre class=\"cpp\"><code>int trickOrTreat(vector&lt;int&gt; candies) {\n    // Complete this function\n}</code></pre>\n    </div>\n</div>",
        "google_doc_link": "https://github.com/cphelper/OA_questions/tree/29d93b7a38010069b104f7d0ff24422f6bc8ae2f/LG%20ads/trickORtreat",
        "solution_code": null,
        "company_name": "LG ads",
        "company_id": 5
    }
]