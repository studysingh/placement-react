[
    {
        "id": 1742,
        "title": "Festival of Spirits - Eywa's Festival",
        "problem_statement": "<h1>Festival of Spirits - Eywa's Festival</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In the mystical world of Pandora, the Na'vi tribes live in harmony with the life force of Eywa. They have N sacred sites, numbered from 0 to N-1, connected by pathways with the Great Tree at site 0 at the center.</p>\r\n<p>When new sacred sites are discovered, they are added to this network, favoring a connection to the left. If the left is occupied, they connect to the right instead. The Na'vi keep track of the number of guardians at each site in the Book of Souls.</p>\r\n<p>For the upcoming Eywa Festival, the Na'vi need to choose the perfect site for the celebration. They use a special number, M, to determine this site through a specific traversal of the network. This hallowed traversal respects the order of connecting to the left first, then the site itself, and finally the right.</p>\r\n<p>The chosen Mth site, revealed through this hallowed traversal, will host the festival, its guardian count ensuring a gathering resonant with Eywa's energy and peace.</p>\r\n<p>Write an algorithm to find the number of Na'vi guardians at the chosen sacred site.</p>\r\n\r\n<h2>Input</h2>\r\n<p>Enter an integer N (i.e. number of sacred sites) and put semi-colon then enter N space-separated integers representing the number of Na'vi guardians at each sacred site. Then put semi-colon and enter two space-separated integers pathwayCount and connectionCount (will always be 2). Then put semi-colon and enter M.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the number of Na'vi guardians at the chosen sacred site.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: 7;10 20 15 25 30 18 22;6 2;0 1;0 2;1 3;1 4;2 5;2 6;3\r\nOutput: 30</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The hierarchy is as given below:</p>\r\n<pre><code class='language-text'>0\r\n/ \\\r\n1   2\r\n/|\\ /|\\\r\n3 4 5 6</code></pre>\r\n<p>As per the given rule, the generated sequence of sacred sites is 3,1,4,0,5,2,6.</p>\r\n<p>Now the Mth (3rd as M=3) sacred site has number: 4</p>\r\n<p>The count of guardians at the sacred site number 4 is 30.</p>\r\n<p>So, the output is 30.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>0 &lt;= siteCount &lt;= 10^4</code></li>\r\n    <li><code>0 &lt;= siteGuardians[0], siteGuardians[1], ..., siteGuardians[N-1] &lt; 10^4</code></li>\r\n    <li><code>0 &lt; festivalSite &lt;= siteCount</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "pregiven_code": "p\n#include <iostream>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <utility>\n#include <algorithm>\n\nclass Solution {\npublic:\n    int findGuardianCount(int N, const std::vector<int>& guardians, const std::vector<std::pair<int, int>>& connections, int M) {\n        // Core logic to be implemented here\n        return 0;\n    }\n};\n\nint main() {\n    std::ios_base::sync_with_stdio(false);\n    std::cin.tie(NULL);\n\n    std::string line;\n    std::getline(std::cin, line);\n\n    std::replace(line.begin(), line.end(), ';', ' ');\n\n    std::stringstream ss(line);\n\n    int N;\n    ss >> N;\n\n    std::vector<int> guardians(N);\n    for (int i = 0; i < N; ++i) {\n        ss >> guardians[i];\n    }\n\n    int pathwayCount, connectionCount;\n    ss >> pathwayCount >> connectionCount;\n\n    std::vector<std::pair<int, int>> connections;\n    for (int i = 0; i < pathwayCount; ++i) {\n        int u, v;\n        ss >> u >> v;\n        connections.push_back({u, v});\n    }\n\n    int M;\n    ss >> M;\n\n    Solution sol;\n    int result = sol.findGuardianCount(N, guardians, connections, M);\n\n    std::cout << result << std::endl;\n\n    return 0;\n}",
        "input_test_case": null,
        "output_test_case": null,
        "company_name": "Accolite_11oct",
        "company_id": 611
    }
]