[
    {
        "id": 934,
        "title": "Binary String Examination",
        "problem_statement": "<h1>Binary String Examination</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a binary string S of length N. Suppose you create another string T of size N*K by concatenating K copies of S together.</p>\r\n<p>Find the maximum size of a substring of T consisting only of 0's.</p>\r\n<p>Complete the `maxSize` function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li>N: INTEGER, The size of the given array.</li>\r\n    <li>K: INTEGER, The number of copies to be made.</li>\r\n    <li>S: STRING, The given string.</li>\r\n</ul>\r\n<p>The function must return an INTEGER denoting the maximum size of a substring of T consisting only of 0's.</p>\r\n<p><strong>Input format for debugging:</strong></p>\r\n<ul>\r\n    <li>The first line contains an integer, N, denoting the size of the given array.</li>\r\n    <li>The next line contains an integer, K, denoting the number of copies to be made.</li>\r\n    <li>The next line contains a string, S, denoting the given string.</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= N &lt;= 10^5</code></li>\r\n    <li><code>1 &lt;= K &lt;= N</code></li>\r\n    <li><code>1 &lt;= len(S) &lt;= 10^5</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n2\r\n000\r\nOutput: 6</code></pre>\r\n<p><strong>Explanation:</strong> Given N=3 and K=2 and we have a string consisting only of 0. So maximum length substring is 3*2=6.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n3\r\n110010\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> Given N=6 and K=3 and we have a string 110010. So after concatenation, we get 110010110010110010. So the maximum length substring consisting of only 0 is 2.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\n8\r\n5\r\n00100110\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> Given N=8 and K=5 and we have a string 00100110. So after concatenation, we get 0010011000100110001001100010011000100110. So the maximum length substring consisting of only 0 is 3.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Experian_28june",
        "company_id": 292
    },
    {
        "id": 935,
        "title": "Number Transformation",
        "problem_statement": "<h1>Number Transformation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a positive integer N. You are allowed to perform one of the following three operations:</p>\r\n<ol>\r\n    <li>Decrement N by 1.</li>\r\n    <li>Increment N by 1.</li>\r\n    <li>If N is a multiple of 3 you can divide N by 3.</li>\r\n</ol>\r\n<p>Find the minimum number of operations needed to make N equal to 1.</p>\r\n<p>Complete the <code>minOperations</code> function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li><strong>N</strong>: INTEGER, The given positive integer.</li>\r\n</ul>\r\n<p>The function must return an <strong>INTEGER</strong> denoting the minimum number of operations needed to make N equal to 1.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: N = 9\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong>\r\n1st operation: Divide 9 by 3 &rarr; so N becomes 9/3=3.<br>\r\n2nd operation: Divide 3 by 3 &rarr; so N becomes 3/3=1.<br>\r\nNo further operations are required as N is already 1.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: N = 1\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong>\r\nNo operations are required as N is already 1.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: N = 14\r\nOutput: 5</code></pre>\r\n<p><strong>Explanation:</strong>\r\n1st operation: Increase N by 1 &rarr; so N becomes 14+1=15.<br>\r\n2nd operation: Divide N by 3 &rarr; so N becomes 15/3=5.<br>\r\n3rd operation: Increase N by 1 &rarr; so N becomes 5+1=6.<br>\r\n4th operation: Divide N by 3 &rarr; so N becomes 6/3=2.<br>\r\n5th operation: Decrease N by 1 &rarr; so N becomes 2-1=1.<br>\r\nNo further operations are required as N is already 1.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; N &le; 10^9</code></li>\r\n</ul>\r\n\r\n<h2>Input format for debugging</h2>\r\n<ul>\r\n    <li>The first line contains an integer, N, denoting the positive integer.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Experian_28june",
        "company_id": 292
    },
    {
        "id": 936,
        "title": "LICPS",
        "problem_statement": "<h1>LICPS</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Given an array Arr of size N. Find the length of longest good subsequence S in it. The subsequence S is called good if it follows the following rules:</p>\r\n<ul>\r\n    <li>S is sorted. This means that for all i and j where i&lt;j and j&lt;N, Arr[i] &lt; Arr[j].</li>\r\n    <li>Every two elements in S should be Co prime.</li>\r\n</ul>\r\n<p><strong>Note:</strong></p>\r\n<ul>\r\n    <li>Two elements A and B are called Co prime if there is no integer x where A is divisible by x and B is divisible by x.</li>\r\n</ul>\r\n<p>Complete the LICPS function in the editor below. It has the following parameter(s):</p>\r\n<ul>\r\n    <li>Name: N, Type: INTEGER, Description: The size of the array.</li>\r\n    <li>Name: Arr, Type: INTEGER ARRAY, Description: The elements of the array.</li>\r\n    <li>Return: The function must return an INTEGER denoting the length of the longest good subsequence of integers that fulfill the conditions.</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>2 &le; N &le; 10<sup>4</sup></li>\r\n    <li>1 &le; Arr[i] &le; 10<sup>3</sup></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<p>Input format for debugging:</p>\r\n<ul>\r\n    <li>The first line contains an integer, N, denoting the number of elements in Arr.</li>\r\n    <li>Each line i of the N subsequent lines (where 0 &le; i &lt; N) contains an integer describing Arr[i].</li>\r\n</ul>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n6\r\n9\r\nOutput:\r\n1</code></pre>\r\n<p><strong>Explanation:</strong> You can take [6] or [9].</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n1\r\n2\r\n10\r\n9\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong> You can take [2,9].</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input:\r\n10\r\n7\r\n4\r\n2\r\n4\r\n10\r\n9\r\n10\r\n6\r\n5\r\nOutput:\r\n3</code></pre>\r\n<p><strong>Explanation:</strong> Some of the possible solutions [7,9,10], [4,9,10], [2,3,5].</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Experian_28june",
        "company_id": 292
    }
]