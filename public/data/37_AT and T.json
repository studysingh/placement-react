[
    {
        "id": 149,
        "title": "Optimal Process Scheduling with Capacity Constraints",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Optimal Process Scheduling with Capacity Constraints</h2>\n\n<div class=\\\"problem-description\\\">\n        <p>There are <em>n</em> processes to be executed, and the <em>i<sup>th</sup></em> process has a size of <code>processSize[i]</code>, where 1 ≤ i ≤ n. Also, there are <em>m</em> processors of different size capacity. The capacity of the <em>i<sup>th</sup></em> processor is <code>capacity[i]</code> (1 ≤ i ≤ m). A processor can process a task of size less than or equal to its capacity in 1 second, but it cannot execute processes whose size is greater than its capacity.</p>\n\n<p>A processor can execute multiple processes one after the other, but needs to pause for 1 second after completing its current one. Multiple processors can work on different processes simultaneously.</p>\n\n<p>Find the minimum time to execute all the processes or return -1 if there is no way to execute all the processes.</p>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getMinimumTime</code> with the following parameters:</p>\n        <ul>\n            <li><code>int processSize[n]</code>: the size of each process</li>\n            <li><code>int capacity[m]</code>: the capacity of each processor</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p><code>int</code>: the minimum time required to execute all the processes, or -1 if there is no way to execute all processes.</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ n, m ≤ 2 * 10<sup>5</sup></li>\n            <li>1 ≤ processSize[i], capacity[i] ≤ 10<sup>9</sup></li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example-case\\\">\n            <h4>Sample Case 0</h4>\n            <pre class=\\\"input\\\">Input:\nprocessSize[] size n = 3\nprocessSize = [2, 5, 8]\ncapacity[] size m = 3\ncapacity = [6, 7, 4]</pre>\n            <pre class=\\\"output\\\">Output:\n-1</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <p>No processor has the required capacity to process the third process, so there is no way to process them all.</p>\n            </div>\n        </div>\n\n<div class=\\\"example-case\\\">\n            <h4>Sample Case 1</h4>\n            <pre class=\\\"input\\\">Input:\nprocessSize[] size n = 5\nprocessSize = [1, 2, 3, 4, 6]\ncapacity[] size m = 3\ncapacity = [4, 7, 4]</pre>\n            <pre class=\\\"output\\\">Output:\n3</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <p>Assign the second and third process to the first processor. It completes the first process in 1 second, then pauses for another second, before completing the third process. Therefore, it takes 3 seconds to complete all of its work.</p>\n                <p>Similarly, assign the first and fifth process to the second processor. It also completes its processes in 3 seconds. The fourth process is completed by the third processor in 1 second.</p>\n                <p>Hence, all of the processes are completed in 3 seconds.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1LTX399bOMthEmzq4ZBJq3fZJEnwnl2omIKRETc0xcuU/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 150,
        "title": "Find MST Weight in a 0-1 Complete Graph",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2></h2>\n\n<div class=\\\"problem-description\\\">\n        <p>A complete graph is a graph where each pair of vertices is connected by an edge. Given an undirected weighted complete graph having <code>g_nodes</code> vertices, the weight of each edge is either 0 or 1. There are exactly <code>g_edges</code> edges given in the form of two arrays <code>g_from</code> and <code>g_to</code> denoting an undirected edge between <code>g_from[i]</code> and <code>g_to[i]</code> having weight 1, and all others have weight 0.</p>\n\n<p>A spanning tree is a sub-graph of an undirected connected graph, which includes all the vertices of the graph and has the minimum possible number of edges such that all the vertices are connected in the sub-graph. For a connected graph having x nodes, its spanning tree contains (x - 1) edges. Amongst all possible spanning trees, a minimum spanning tree is a spanning tree in which the sum of the weight of the edges is minimum possible.</p>\n\n<p>Given the 1-weighted edges of the complete graph, find the weight of the minimum spanning tree of the graph.</p>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>findMinimumCost</code> in the editor below.</p>\n\n<p><code>findMinimumCost</code> has the following parameters:</p>\n        <ul>\n            <li><code>int g_nodes</code>: the number of nodes</li>\n            <li><code>int g_from[g_edges]</code>: <code>g_from[i]</code> represents the node at which the i<sup>th</sup> edge starts</li>\n            <li><code>int g_to[g_edges]</code>: <code>g_to[i]</code> represents node at which the i<sup>th</sup> edge ends</li>\n        </ul>\n\n<h4>Returns</h4>\n        <p><code>int</code>: an integer denoting the weight of the minimum spanning tree of the given graph</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ g_nodes ≤ 10<sup>5</sup></li>\n            <li>1 ≤ g_edges ≤ min((g_nodes * (g_nodes-1))/2, 10<sup>5</sup>)</li>\n            <li>1 ≤ g_from[i], g_to[i] ≤ g_nodes</li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Sample Case 0</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">STDIN           FUNCTION\n----            --------\n4 4             g_nodes = 4, g_edges = 4\n1 2             [g_from[i], g_to[i]] = [[1, 2], [2, 3], [3, 1], [4, 3]]\n2 3\n3 1\n4 3</pre>\n            <pre class=\\\"output\\\">1</pre>\n            <div class=\\\"explanation\\\">\n                <p>Given, g_nodes = 4, g_edges = 4, g_from = [1, 2, 3, 4], g_to = [2, 3, 1, 3]</p>\n                <p>Form a spanning tree with edges (1-4, 2-4, 3-4). It has all vertices connected and has a weight of 1 corresponding to the edge 3-4. Note that the edges 1-4 and 2-4 have weight 0.</p>\n            </div>\n        </div>\n\n<h3>Sample Case 1</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">5 4\n1 3\n3 5\n1 2\n4 3</pre>\n            <pre class=\\\"output\\\">0</pre>\n            <div class=\\\"explanation\\\">\n                <p>Form a spanning tree with the edges (1-4, 2-4, 2-3, 1-5). This tree has all vertices connected, and all edges have a weight of 0.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1ka3qwtLQt6JrUfWJhDychpLjlBp2ucWXz6lQ1tpWa5k/edit?usp=sharing",
        "solution_code": "int findMinimumCost(vector<int>& arr) { \\n    int n = arr.size(); \\n    int total_cost = 0; \\n     \\n    for (int i = 0; i < n - 1; ++i) { \\n        total_cost += abs(arr[i] - arr[i + 1]); \\n    } \\n     \\n    return total_cost; \\n}",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 151,
        "title": "LFU Cache Implementation",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\"> LFU Cache Implementation</h2>\n\n<div class=\\\"problem-description\\\">\n        <p>Implement a Least Frequently Used (LFU) cache data structure of size <code>cacheSize</code> that handles two types of queries, GET and PUT.</p>\n\n<ul>\n            <li>A GET query attempts to retrieve the value of a given key.\n                <ul>\n                    <li>If the key is present in the cache, it is returned.</li>\n                    <li>Otherwise, it returns -1.</li>\n                </ul>\n            </li>\n            <li>A PUT query updates or inserts a key-value pair into the cache.\n                <ul>\n                    <li>When the cache is full, the least frequently used key is removed to accommodate the new key-value pair.</li>\n                    <li>If there is a tie in the frequency of keys, then the least recently used key is removed.</li>\n                </ul>\n            </li>\n        </ul>\n\n<p>Return an array of integers where each i<sup>th</sup> element is the answer for the i<sup>th</sup> GET query.</p>\n    </div>\n\n<div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>implementLFU</code> with the following parameters:</p>\n        <ul>\n            <li><code>int cacheSize</code>: the size of the cache</li>\n            <li><code>string queries[q]</code>: the query strings</li>\n        </ul>\n    </div>\n\n<div class=\\\"output-format\\\">\n        <h3>Returns</h3>\n        <p><code>int[]</code>: the answers to the GET queries</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ cacheSize ≤ 100</li>\n            <li>1 ≤ q ≤ 10<sup>5</sup></li>\n            <li>Queries contain at least 1 query of type 1</li>\n            <li>|queries[i]| ≤ 13</li>\n            <li>key and value are made up of digits (\\'0\\' - \\'9\\') only</li>\n            <li>Value of key ≤ 300</li>\n            <li>Value of value ≤ 10<sup>6</sup></li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <div class=\\\"sample-case\\\">\n                <p>Suppose cacheSize = 1, q = 3, queries = [\\\"PUT 1 1\\\", \\\"PUT 2 2\\\", \\\"GET 1\\\"]</p>\n\n<table class=\\\"cache-table\\\">\n                    <thead>\n                        <tr>\n                            <th>Query No.</th>\n                            <th>Query Type</th>\n                            <th>Key</th>\n                            <th>Value</th>\n                            <th>Cache State</th>\n                            <th>Output</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>1</td>\n                            <td>PUT</td>\n                            <td>1</td>\n                            <td>1</td>\n                            <td>1:1</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>2</td>\n                            <td>PUT</td>\n                            <td>2</td>\n                            <td>2</td>\n                            <td>2:2</td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td>3</td>\n                            <td>GET</td>\n                            <td>1</td>\n                            <td></td>\n                            <td>2:2</td>\n                            <td>-1</td>\n                        </tr>\n                    </tbody>\n                </table>\n\n<p class=\\\"result\\\">Hence the answer is [-1].</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n.cache-table {\n    border-collapse: collapse;\n    width: 100%;\n    margin: 1em 0;\n}\n\n.cache-table th, .cache-table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n}\n\n.cache-table th {\n    background-color: #f5f5f5;\n}\n\n.problem-container {\n    max-width: 800px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\ncode {\n    background-color: #f5f5f5;\n    padding: 2px 4px;\n    border-radius: 4px;\n}\n</style>",
        "google_doc_link": "https://docs.google.com/document/d/1rz0Vix738gbsq3Exq-Vc-RW1AAZiuQCTnOmYQ2Gy0Ag/edit?usp=sharing",
        "solution_code": "#include <bits/stdc++.h>\\nusing namespace std;\\n\\nclass LFUCache {\\npublic:\\n    int cap, minF;\\n    unordered_map<int, pair<int, int>> kvf;\\n    unordered_map<int, list<int>> fk;\\n    unordered_map<int, list<int>::iterator> ki;\\n\\n    LFUCache(int capacity) {\\n        cap = capacity;\\n        minF = 0;\\n    }\\n\\n    int get(int k) {\\n        if (kvf.find(k) == kvf.end()) {\\n            return -1;\\n        }\\n        int v = kvf[k].first, f = kvf[k].second;\\n        fk[f].erase(ki[k]);\\n        if (fk[f].empty()) {\\n            fk.erase(f);\\n            if (minF == f) minF++;\\n        }\\n        f++;\\n        kvf[k].second = f;\\n        fk[f].push_back(k);\\n        ki[k] = --fk[f].end();\\n        return v;\\n    }\\n\\n    void put(int k, int v) {\\n        if (cap == 0) return;\\n        if (kvf.find(k) != kvf.end()) {\\n            kvf[k].first = v;\\n            get(k);\\n            return;\\n        }\\n        if (kvf.size() >= cap) {\\n            int f = minF, kR = fk[f].front();\\n            fk[f].pop_front();\\n            if (fk[f].empty()) fk.erase(f);\\n            kvf.erase(kR);\\n            ki.erase(kR);\\n        }\\n        kvf[k] = {v, 1};\\n        fk[1].push_back(k);\\n        ki[k] = --fk[1].end();\\n        minF = 1;\\n    }\\n};\\n\\nvector<int> implementLFU(int cachesize, vector<string> queries) {\\n    LFUCache lfu(cachesize);\\n    vector<int> results;\\n    for(auto &query: queries){\\n        stringstream ss(query);\\n        string cmd;\\n        ss >> cmd;\\n        if(cmd == \\\"GET\\\"){\\n            int k;\\n            ss >> k;\\n            int r = lfu.get(k);\\n            results.push_back(r);\\n        }\\n        else if(cmd == \\\"PUT\\\"){\\n            int k, v;\\n            ss >> k >> v;\\n            lfu.put(k, v);\\n        }\\n    }\\n    return results;\\n}",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 152,
        "title": "Dual Cache Performance Analysis",
        "problem_statement": "<div class=\\\"problem-container\\\">\\n    <h2>Dual Cache Performance Analysis</h2>\\n    \\n    <div class=\\\"problem-description\\\">\\n        <p>A team is doing an analysis of a dual cache performance. There are n requests in the queue to be processed by a service where the payload size of the i<sup>th</sup> request is denoted by payloadSize[i]. There are two caches A and B in the service which cache the response to requests made.</p>\\n        \\n        <ul>\\n            <li>If the i<sup>th</sup> request is cached by cache A, then cacheA[i] = 1, otherwise 0 for all 1 ≤ i ≤ n</li>\\n            <li>If the i<sup>th</sup> request is cached by cache B, then cacheB[i] = 1, otherwise 0 for all 1 ≤ i ≤ n</li>\\n        </ul>\\n        \\n        <p>Find the minimum sum of the payload sizes of a subset of requests in which each cache can serve at least minThreshold requests, or return -1 if they cannot.</p>\\n    </div>\\n\\n    <div class=\\\"function-description\\\">\\n        <h3>Function Description</h3>\\n        <p>Complete the function getMinimumSize with the following parameters:</p>\\n        <ul>\\n            <li><code>int payloadSize[n]</code>: the payload sizes of the requests</li>\\n            <li><code>int cacheA[n]</code>: the requests which are cached in cache A</li>\\n            <li><code>int cacheB[n]</code>: the requests which are cached in cache B</li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"return-value\\\">\\n        <h3>Returns</h3>\\n        <p><code>long</code>: the minimum sum of the payload sizes such that both caches can serve minThreshold requests, return -1 if not possible.</p>\\n    </div>\\n\\n    <div class=\\\"constraints\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>1 ≤ n ≤ 2 * 10<sup>5</sup></li>\\n            <li>1 ≤ payloadSize[i] ≤ 10<sup>9</sup></li>\\n            <li>0 ≤ cacheA[i], cacheB[i] ≤ 1</li>\\n            <li>1 ≤ minThreshold ≤ n</li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"examples\\\">\\n        <h3>Example 1</h3>\\n        <div class=\\\"example\\\">\\n            <pre class=\\\"input\\\">Input:\\nn = 5\\npayloadSize = [10, 8, 12, 4, 5, 25]\\ncacheA = [1, 0, 1, 1, 0, 1]\\ncacheB = [1, 0, 1, 0, 1, 1]\\nminThreshold = 3</pre>\\n            <pre class=\\\"output\\\">Output:\\n31</pre>\\n            <div class=\\\"explanation\\\">\\n                <p>It can be seen that both the caches can serve 4 requests. If a subset of [1st, 3rd, 4th and 5th] requests are chosen. Then, cacheA can serve [1, 3, 4]th requests and cacheB can serve [1, 3, 5]th requests.</p>\\n                <p>Hence, the minimum sum of the payload sizes such that both caches can serve minThreshold requests = 10 + 12 + 4 + 5 = 31.</p>\\n            </div>\\n        </div>\\n\\n        <h3>Example 2</h3>\\n        <div class=\\\"example\\\">\\n            <pre class=\\\"input\\\">Input:\\nn = 3\\npayloadSize = [2, 1, 3]\\ncacheA = [1, 1, 0]\\ncacheB = [0, 1, 1]\\nminThreshold = 1</pre>\\n            <pre class=\\\"output\\\">Output:\\n1</pre>\\n            <div class=\\\"explanation\\\">\\n                <p>If the 2nd request is chosen to be in the subset then, both caches can serve a minimum of minThreshold requests.</p>\\n                <p>Hence, the minimum total payload size of the requests served by the caches = 1.</p>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"input-format\\\">\\n        <h3>Input Format For Custom Testing</h3>\\n        <ul>\\n            <li>The first line contains an integer n, the number of requests.</li>\\n            <li>The next n lines contain an integer, payloadSize[i].</li>\\n            <li>The following line contains an integer n, the number of requests.</li>\\n            <li>The next n lines contain cacheA[i] (1 ≤ i ≤ n).</li>\\n            <li>The following line contains an integer n, the number of requests.</li>\\n            <li>The next n lines contain cacheB[i] (1 ≤ i ≤ n).</li>\\n            <li>The following line contains an integer minThreshold, the minimum number of requests that must be served by each cache.</li>\\n        </ul>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1z0Yk1DDHAp_BuG1e-_FMvV5a2WbAp1iu7iqzMIpaCuQ/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 153,
        "title": "Ethereum Wallet Balance Report",
        "problem_statement": "<div class=\\\"problem-container\\\">\\n    <div class=\\\"problem-header\\\">\\n        <h1>Ethereum Wallet Balance Report</h1>\\n    </div>\\n\\n    <div class=\\\"problem-description\\\">\\n        <p>As part of the development of the \\\"HackerCoin\\\" cryptocurrency exchange platform, create a query that returns a list of Ethereum wallets and their balances based on transaction amounts.</p>\\n        \\n        <p>Due to the dummy data nature of the development process, some wallets may end up with a negative balance. Be sure to exclude them from the report.</p>\\n    </div>\\n\\n    <div class=\\\"output-format\\\">\\n        <h3>Output Format</h3>\\n        <p>The result should have the following columns: address | transactions | balance</p>\\n        \\n        <ul>\\n            <li><strong>address</strong>: wallet address</li>\\n            <li><strong>transactions</strong>: the number of confirmed transactions in a specific wallet; a confirmed transaction is one with confirmations ≥ 10</li>\\n            <li><strong>balance</strong>: the sum of all the amount for all confirmed transactions in a specific wallet</li>\\n        </ul>\\n\\n        <p>The result should be sorted in descending order by balance.</p>\\n    </div>\\n\\n    <div class=\\\"constraints\\\">\\n        <h3>Note:</h3>\\n        <ul>\\n            <li>Only transactions with ten or more confirmations should be included in the report.</li>\\n            <li>Only wallets with a balance greater than zero should be included in the report.</li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"schema\\\">\\n        <h3>Database Schema</h3>\\n        <div class=\\\"table-definition\\\">\\n            <h4>wallets</h4>\\n            <table>\\n                <tr>\\n                    <th>Column</th>\\n                    <th>Type</th>\\n                    <th>Description</th>\\n                </tr>\\n                <tr>\\n                    <td>id</td>\\n                    <td>SMALLINT</td>\\n                    <td>unique ID, primary key</td>\\n                </tr>\\n                <tr>\\n                    <td>address</td>\\n                    <td>VARCHAR(255)</td>\\n                    <td></td>\\n                </tr>\\n            </table>\\n\\n            <h4>transactions</h4>\\n            <table>\\n                <tr>\\n                    <th>Column</th>\\n                    <th>Type</th>\\n                    <th>Description</th>\\n                </tr>\\n                <tr>\\n                    <td>wallet_id</td>\\n                    <td>SMALLINT</td>\\n                    <td>foreign key, wallets.id</td>\\n                </tr>\\n                <tr>\\n                    <td>amount</td>\\n                    <td>DECIMAL(6,3)</td>\\n                    <td></td>\\n                </tr>\\n                <tr>\\n                    <td>confirmations</td>\\n                    <td>SMALLINT</td>\\n                    <td>number of confirmations</td>\\n                </tr>\\n            </table>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"examples\\\">\\n        <h3>Expected Output Example</h3>\\n        <table>\\n            <tr>\\n                <th>address</th>\\n                <th>transactions</th>\\n                <th>balance</th>\\n            </tr>\\n            <tr>\\n                <td>0xce7a99fb564f654c1f48e9b687375b868553d7ec</td>\\n                <td>2</td>\\n                <td>184.069</td>\\n            </tr>\\n            <tr>\\n                <td>0x3b14e880a15bbdbeacc38c3e1dca182a209e953</td>\\n                <td>3</td>\\n                <td>159.358</td>\\n            </tr>\\n            <tr>\\n                <td>0x5d386db0077b732d273e2c00e5168d1da86b8239</td>\\n                <td>2</td>\\n                <td>76.646</td>\\n            </tr>\\n            <tr>\\n                <td>0x7a70b14c1f883e5acce29d75413e803e4dab16d4</td>\\n                <td>5</td>\\n                <td>31.547</td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1nBbr9SLprBCWaaMe0YYQptKGSSti3zYcoBKKvtGPYxs/edit?usp=sharing",
        "solution_code": "SELECT \\n    w.address,\\n    COUNT(t.wallet_id) AS transactions,\\n    SUM(t.amount) AS balance\\nFROM \\n    wallets w\\nJOIN \\n    transactions t ON w.id = t.wallet_id\\nWHERE \\n    t.confirmations >= 10\\nGROUP BY \\n    w.id, w.address\\nHAVING \\n    SUM(t.amount) > 0\\nORDER BY \\n    balance DESC;",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 154,
        "title": "Interesting Integer Pairs",
        "problem_statement": "<div class=\\\"problem-container\\\">\\n    <h2 class=\\\"problem-title\\\">Interesting Integer Pairs</h2>\\n    \\n    <div class=\\\"problem-description\\\">\\n        <p>A mathematics professor in a Senior Secondary High School decided to evaluate students for the Teachers Assessment based on their problem-solving skills.</p>\\n        \\n        <p>Given an array of integers <code>arr</code>, an integer <code>sumVal</code>, the task is to pair the elements in <code>arr</code> into interesting pairs. Find the number of interesting pairs in the array. An unordered pair <code>(i, j)</code> is defined to be interesting if |arr<sub>i</sub> - arr<sub>j</sub>| + |arr<sub>i</sub> + arr<sub>j</sub>| = sumVal (i.e., the sum of absolute difference and absolute sum of the values in respective indices is equal to sumVal). The goal is to find the number of interesting pairs in the array.</p>\\n    </div>\\n\\n    <div class=\\\"input-format\\\">\\n        <h3>Function Parameters</h3>\\n        <ul>\\n            <li><code>vector&lt;int&gt; arr</code>: an array of integers</li>\\n            <li><code>int sumVal</code>: an integer</li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"output-format\\\">\\n        <h3>Returns</h3>\\n        <p><code>long</code>: an integer value denoting the number of interesting pairs</p>\\n    </div>\\n\\n    <div class=\\\"constraints\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>1 ≤ n ≤ 10<sup>5</sup></li>\\n            <li>-10<sup>5</sup> ≤ arr<sub>i</sub> ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ sumVal ≤ 10<sup>6</sup></li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"examples\\\">\\n        <h3>Example</h3>\\n        <div class=\\\"example\\\">\\n            <pre class=\\\"input\\\">Input:\\narr = [1, 4, 1, 2]\\nsumVal = 4</pre>\\n            <pre class=\\\"output\\\">Output:\\n2</pre>\\n            <div class=\\\"explanation\\\">\\n                <p>Then, there are two interesting pairs, (1, 4) and (3, 4). Because:</p>\\n                <ul>\\n                    <li>|arr<sub>1</sub> - arr<sub>2</sub>| + |arr<sub>1</sub> + arr<sub>2</sub>| = |1-2| + |1+2| = 4</li>\\n                    <li>|arr<sub>3</sub> - arr<sub>4</sub>| + |arr<sub>3</sub> + arr<sub>4</sub>| = |1-2| + |1+2| = 4</li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"sample-case\\\">\\n            <h4>Sample Case 0</h4>\\n            <pre class=\\\"input\\\">Input:\\narr = [1, 3, 2, 0]\\nsumVal = 2</pre>\\n            <pre class=\\\"output\\\">Output:\\n1</pre>\\n            <div class=\\\"explanation\\\">\\n                <p>There\\'s only one interesting pair in the given array, i.e. (1, 4) since, |arr<sub>1</sub> - arr<sub>4</sub>| + |arr<sub>1</sub> + arr<sub>4</sub>| = |1-0| + |1+0| = 2.</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1GcvCijOnw96gsj_2PJ47Jbt-5R57h-8cO86yyAflcA0/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 155,
        "title": "Binary String Transformation Validato",
        "problem_statement": "<div class=\\\"problem-container\\\">\\n    <h2>Binary String Transformation Validato</h2>\\n    \\n    <div class=\\\"problem-description\\\">\\n        <p>Given a binary string <code>binary</code> consisting of characters \\'0\\' and \\'1\\' only, perform the following 0 or more times:</p>\\n        <ul>\\n            <li>Choose any subsequence, sort the subsequence, and replace the original subsequence with the sorted sequence.</li>\\n        </ul>\\n        \\n        <p>Next, there is an array of strings, <code>arr</code>, of length <code>n</code>, where each string has length <code>|binary|</code> and consists of characters \\'0\\', \\'1\\' and \\'?\\'. Each \\'?\\' character can be replaced with either \\'0\\' or \\'1\\' arbitrarily. For each string in <code>arr</code>, after replacing each \\'?\\' character with either \\'0\\' or \\'1\\', determine if it is possible to rearrange <code>binary</code> using the operation described any number of times. If it is possible, store \\\"YES\\\" as the corresponding answer, otherwise store \\\"NO\\\", both without quotes.</p>\\n        \\n        <div class=\\\"notes\\\">\\n            <h3>Note:</h3>\\n            <ul>\\n                <li>A string <code>a</code> is a subsequence of a string <code>b</code> obtained by deletion of some number (possibly, zero or all) of characters without changing the order of the remaining characters.</li>\\n                <li>Each computation is independent of the others. That is, the string <code>binary</code> is in its original state at the beginning of each array element.</li>\\n            </ul>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"function-description\\\">\\n        <h3>Function Description</h3>\\n        <p>Complete the function <code>checkStrings</code> with the following parameters:</p>\\n        <ul>\\n            <li><code>string binary</code>: the string to alter</li>\\n            <li><code>string arr[n]</code>: the strings to match</li>\\n        </ul>\\n        \\n        <h4>Returns</h4>\\n        <p><code>string[n]</code>: each i<sup>th</sup> string is \\\"YES\\\" or \\\"NO\\\" and relates to the i<sup>th</sup> element of arr</p>\\n    </div>\\n\\n    <div class=\\\"constraints\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>1 ≤ |binary| ≤ 3000</li>\\n            <li>1 ≤ n ≤ 3000</li>\\n            <li>|arr[i]| = |binary|</li>\\n            <li>String <code>binary</code> contains characters \\'0\\' and \\'1\\' only.</li>\\n            <li>Each string <code>arr[i]</code> contains characters \\'0\\', \\'1\\' and \\'?\\' only.</li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"input-format\\\">\\n        <h3>Input Format For Custom Testing</h3>\\n        <p>The first line contains a string, <code>binary</code>.</p>\\n        <p>The second line contains an integer, <code>n</code>, the number of elements in <code>arr</code>.</p>\\n        <p>Each line <code>i</code> of the <code>n</code> subsequent lines (where 0 ≤ i < n) contains a string, <code>arr[i]</code>.</p>\\n    </div>\\n\\n    <div class=\\\"examples\\\">\\n        <h3>Sample Case 0</h3>\\n        <div class=\\\"example\\\">\\n            <pre class=\\\"input\\\">STDIN       FUNCTION\\n-----       --------\\n101011   →  binary = \\\"101011\\\"\\n2        →  arr[] size n = 2\\n???111   →  arr = [\\\"???111\\\", \\\"001101\\\"]\\n001101</pre>\\n            \\n            <pre class=\\\"output\\\">YES\\nNO</pre>\\n            \\n            <div class=\\\"explanation\\\">\\n                <ul>\\n                    <li><code>arr[0]</code> can be converted to \\\"100111\\\" then <code>binary</code> can be made to match using these operations:\\n                        <ul>\\n                            <li>Choose the subsequence of indices {2, 3} and sort, <code>binary</code> becomes \\\"100111\\\". This equals the chosen <code>arr[0]</code>.</li>\\n                            <li>Note that if the string <code>arr[0]</code> is converted to \\\"001111\\\", then also the string <code>binary</code> can be made to match.</li>\\n                        </ul>\\n                    </li>\\n                    <li>It is not possible to convert string <code>binary</code> to <code>arr[1]</code> using any sequence of operations.</li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n        <h3>Sample Case 1</h3>\\n        <div class=\\\"example\\\">\\n            <pre class=\\\"input\\\">STDIN       FUNCTION\\n-----       --------\\n0011     →  binary = \\\"0011\\\"\\n3        →  arr[] size n = 3\\n0?10     →  arr = [\\\"0?10\\\", \\\"0011\\\", \\\"????\\\"]\\n0011\\n????</pre>\\n            \\n            <pre class=\\\"output\\\">NO\\nYES\\nYES</pre>\\n            \\n            <div class=\\\"explanation\\\">\\n                <ul>\\n                    <li>There are two possible choices for <code>arr[0]</code>, either \\\"0010\\\" or \\\"0110\\\", neither of which can be derived from <code>binary</code>.</li>\\n                    <li><code>arr[1]</code> is already equal to <code>binary</code>.</li>\\n                    <li><code>arr[2]</code> can be \\\"0011\\\" which equals <code>binary</code>.</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1ipzR5n0YNpTzbEGFFYkfdiEI-Sf3TCL4XbSVA1OQOyI/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 161,
        "title": "Stale Server Detector",
        "problem_statement": "<div class=\\\"problem-container\\\">\\n    <h2>Stale Server Detector</h2>\\n    \\n    <div class=\\\"problem-description\\\">\\n        <p>Implement a prototype service to analyze logs of requests on n servers.</p>\\n        \\n        <p>The servers are indexed from 1 to n. The logs of the servers are given as an array log_data of size m where log_data[i] = [server_id, time] denoting that a request was served by the server with id server_id at time time.</p>\\n        \\n        <p>Given log_data, an integer parameter x and q queries, for each query[i], find the number of servers that did not receive a request in the time interval [query[i] - x, query[i]].</p>\\n    </div>\\n\\n    <div class=\\\"function-description\\\">\\n        <h3>Function Description</h3>\\n        <p>Complete the function getStaleServerCount with the following parameters:</p>\\n        <ul>\\n            <li><code>int n</code>: the number of servers</li>\\n            <li><code>int log_data[m][2]</code>: the logs of the servers</li>\\n            <li><code>int query[q]</code>: the queries</li>\\n            <li><code>x</code>: an integer parameter for queries</li>\\n        </ul>\\n        \\n        <h4>Returns</h4>\\n        <p><code>int[q]</code>: the answers to the queries</p>\\n    </div>\\n\\n    <div class=\\\"constraints\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>1 ≤ n ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ m ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ q ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ log_data[i][0] ≤ n</li>\\n            <li>1 ≤ log_data[i][1] ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ query[i] ≤ 10<sup>5</sup></li>\\n            <li>1 ≤ x ≤ 10<sup>5</sup></li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\"examples\\\">\\n        <h3>Example</h3>\\n        <p>Suppose n = 3, x = 5, m = 3, q = 2, log_data[] = [[1, 3], [2, 6], [1, 5]], and query[] = [10, 11]</p>\\n        \\n        <table class=\\\"example-table\\\">\\n            <thead>\\n                <tr>\\n                    <th>Query</th>\\n                    <th>Interval</th>\\n                    <th>Servers that received a request</th>\\n                    <th>Servers not receiving a request</th>\\n                </tr>\\n            </thead>\\n            <tbody>\\n                <tr>\\n                    <td>10</td>\\n                    <td>[5, 10]</td>\\n                    <td>1, 2</td>\\n                    <td>3</td>\\n                </tr>\\n                <tr>\\n                    <td>11</td>\\n                    <td>[6, 11]</td>\\n                    <td>2</td>\\n                    <td>1, 3</td>\\n                </tr>\\n            </tbody>\\n        </table>\\n        \\n        <p>Hence the answer is [1, 2].</p>\\n    </div>\\n\\n    <div class=\\\"input-format\\\">\\n        <h3>Input Format For Custom Testing</h3>\\n        <p>The first line contains an integer, n, the number of servers.<br>\\n        The next line contains an integer, m, the number of elements in the array log_data.<br>\\n        The next line contains an integer, 2, the number of elements in the array log_data[].<br>\\n        Each line i of the m subsequent lines (where 0 ≤ i < m) contains two space-separated integers log_data[i][0], log_data[i][1].<br>\\n        The next line contains an integer, q, the number of elements in the array query.<br>\\n        Each line i of the q subsequent lines (where 0 ≤ i < q) contains an integer, query[i].<br>\\n        The next line contains an integer, x.</p>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1ZHHq-e7_DJ5fbURF69ZMMizWsOBPL3ZfCRyw8SMZqF8/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 162,
        "title": "Customer Failure Analysis",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2 class=\\\"problem-title\\\">Customer Failure Analysis</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>As part of HackerAd\\'s advertising system analytics, a team needs a list of customers who have a maximum number of failure events (status = \\\"failure\\\") in their campaigns.</p>\n        \n        <p>For all customers with more than 3 events with status = \\'failure\\', report the customer name and their number of failures.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>The result should be in the following format: customer, failures</p>\n        <ul>\n            <li><code>customer</code> is a candidate\\'s full name, the first_name and last_name separated by a single space.</li>\n            <li>The order of the output is not important.</li>\n        </ul>\n    </div>\n    \n    <div class=\\\"schema\\\">\n        <h3>Schema</h3>\n        <p>There are 3 tables:</p>\n        \n        <div class=\\\"table-schema\\\">\n            <h4>customers</h4>\n            <table>\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>id</td>\n                    <td>SMALLINT</td>\n                    <td>Customer ID</td>\n                </tr>\n                <tr>\n                    <td>first_name</td>\n                    <td>VARCHAR(64)</td>\n                    <td>Customer first name</td>\n                </tr>\n                <tr>\n                    <td>last_name</td>\n                    <td>VARCHAR(64)</td>\n                    <td>Customer last name</td>\n                </tr>\n            </table>\n\n            <h4>campaigns</h4>\n            <table>\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>id</td>\n                    <td>SMALLINT</td>\n                    <td>Campaign ID</td>\n                </tr>\n                <tr>\n                    <td>customer_id</td>\n                    <td>SMALLINT</td>\n                    <td>Customer ID</td>\n                </tr>\n                <tr>\n                    <td>name</td>\n                    <td>VARCHAR(64)</td>\n                    <td>Campaign name</td>\n                </tr>\n            </table>\n\n            <h4>events</h4>\n            <table>\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Description</th>\n                </tr>\n                <tr>\n                    <td>dt</td>\n                    <td>VARCHAR(19)</td>\n                    <td>Event timestamp</td>\n                </tr>\n                <tr>\n                    <td>campaign_id</td>\n                    <td>SMALLINT</td>\n                    <td>Campaign ID</td>\n                </tr>\n                <tr>\n                    <td>status</td>\n                    <td>VARCHAR(64)</td>\n                    <td>Event status</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/19DDVW-W0ZPV0cXSK6DUhqmEzuuVM_kIj_4wFpZurJcA/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 163,
        "title": "Flight Recommender System",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h2> Flight Recommender System</h2>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>Implement a prototype for a flight recommender system.</p>\n        \n        <p>There are <em>flight_nodes</em> airports indexed from 0 to <em>flight_nodes - 1</em> and <em>flight_edges</em> flight routes. The i<sup>th</sup> flight route is a unidirectional flight from <em>flight_from[i]</em> to <em>flight_to[i]</em> and has a cost <em>flight_weight[i]</em>.</p>\n        \n        <p>Given q queries, where each query has three values - the starting city <em>queries[i][0]</em>, the destination city <em>queries[i][1]</em>, and the maximum number of intermediate stops <em>queries[i][2]</em>, for each query, return the cheapest travel cost respecting the given stops constraint or return -1 if no such path exists.</p>\n    </div>\n\n    <div class=\\\"function-signature\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>getOptimalFlightRates</code> with the following parameters:</p>\n        <ul>\n            <li>int flight_nodes: the number of cities</li>\n            <li>int flight_from[flight_edges]: the list of sources of flight routes</li>\n            <li>int flight_to[flight_edges]: the list of flight destinations of flight routes</li>\n            <li>int flight_weight[flight_edges]: list of the associated cost</li>\n            <li>int queries[q][3]: list of user queries</li>\n        </ul>\n        <p><strong>Returns:</strong> long int[q]: The list containing the cheapest flight route prices corresponding to the queries.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ flight_nodes ≤ 100</li>\n            <li>1 ≤ flight_edges ≤ flight_nodes*(flight_nodes-1)</li>\n            <li>1 ≤ q ≤ 2*10<sup>5</sup></li>\n            <li>0 ≤ flight_from[i], flight_to[i], queries[i][0], queries[i][1] < flight_nodes</li>\n            <li>1 ≤ flight_weight[i] ≤ 10<sup>9</sup></li>\n            <li>0 ≤ queries[i][2] ≤ 10</li>\n            <li>There are no self-loops or multiple edges in the given graph.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example 1</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nflight_nodes = 5, flight_edges = 7\nflight_from = [0, 1, 2, 2, 0, 2, 4]\nflight_to = [1, 2, 3, 0, 2, 4, 2]\nflight_weight = [100, 150, 70, 300, 400, 200, 120]\nqueries = [[0, 4, 2], [0, 3, 1], [1, 3, 0]]</pre>\n            <pre class=\\\"output\\\">Output:\n[450, 470, -1]</pre>\n            <div class=\\\"explanation\\\">\n                <ul>\n                    <li>For the first query, the user wants to travel from 0 to 4 with at most 2 stops in between. They can take the route 0 → 1 → 2 → 4 giving the total cost of 100+150+200 = 450.</li>\n                    <li>For the second query, 0 → 2 → 3 is the only viable route with a total cost of 470.</li>\n                    <li>For the third query, there are no viable routes since every path from 1 to 3 has at least one stop.</li>\n                </ul>\n            </div>\n        </div>\n\n        <h3>Example 2</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nflight_nodes = 5, flight_edges = 5\nflights = [[0 1 10], [0 4 3], [4 1 5], [4 3 4], [1 2 2]]\nqueries = [[0, 1, 0], [0, 1, 1], [4, 3, 1], [0, 2, 2]]</pre>\n            <pre class=\\\"output\\\">Output:\n[10, 8, 4, 10]</pre>\n            <div class=\\\"explanation\\\">\n                <ul>\n                    <li>For the first query, the user wants to travel from 0 to 1 with no intermediate stops. They can take the route 0 → 1 having a cost of 10.</li>\n                    <li>For the second query, the user wants to travel from 0 to 1 with at most 1 intermediate stop. They can take the route 0 → 4 → 1 having a total cost of 3 + 5 = 8.</li>\n                    <li>For the third query, there is only one route 4 → 3 with a cost of 4.</li>\n                    <li>For the fourth query, there is only one route between 0 → 1 → 2 with a cost of 10.</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1-VksA_JDBA741Ik2OKCfbTwFQMxn68_Pz04x05dJEA4/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    },
    {
        "id": 164,
        "title": "Customer Transaction Commission Calculator",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h1>Customer Transaction Commission Calculator</h1>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>A payment system needs a query that calculates the total commission for all transactions made by a customer.</p>\n        <p>A commission is a fee that is calculated based on the customer\\'s country of origin.</p>\n        \n        <h3>Required Output Columns</h3>\n        <p>The result should have the following columns:</p>\n        <ul>\n            <li><strong>email</strong> - customer email address</li>\n            <li><strong>country</strong> - customer country</li>\n            <li><strong>transactions</strong> - total number of all transactions for a customer</li>\n            <li><strong>total_amount</strong> - total amount of all transactions for a customer</li>\n            <li><strong>total_commission</strong> - total commission for all transactions for a customer, rounded to two decimal places</li>\n        </ul>\n\n        <p>The result should be sorted in ascending order by email.</p>\n\n        <div class=\\\"note\\\">\n            <h4>Note:</h4>\n            <p>The total commission is the sum of the products of the transaction amounts and the commission of the client\\'s country.</p>\n        </div>\n    </div>\n\n    <div class=\\\"schema-section\\\">\n        <h3>Database Schema</h3>\n        \n        <div class=\\\"table-definition\\\">\n            <h4>customers</h4>\n            <table class=\\\"schema-table\\\">\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Constraint</th>\n                </tr>\n                <tr>\n                    <td>id</td>\n                    <td>INT</td>\n                    <td>PRIMARY KEY</td>\n                </tr>\n                <tr>\n                    <td>email</td>\n                    <td>VARCHAR(255)</td>\n                    <td></td>\n                </tr>\n                <tr>\n                    <td>country</td>\n                    <td>VARCHAR(255)</td>\n                    <td>FOREIGN KEY (country → countries.name)</td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\\\"table-definition\\\">\n            <h4>countries</h4>\n            <table class=\\\"schema-table\\\">\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Constraint</th>\n                </tr>\n                <tr>\n                    <td>name</td>\n                    <td>VARCHAR(255)</td>\n                    <td>PRIMARY KEY</td>\n                </tr>\n                <tr>\n                    <td>commission</td>\n                    <td>DECIMAL(3,2)</td>\n                    <td></td>\n                </tr>\n            </table>\n        </div>\n\n        <div class=\\\"table-definition\\\">\n            <h4>transactions</h4>\n            <table class=\\\"schema-table\\\">\n                <tr>\n                    <th>Column</th>\n                    <th>Type</th>\n                    <th>Constraint</th>\n                </tr>\n                <tr>\n                    <td>customer_id</td>\n                    <td>INT</td>\n                    <td>FOREIGN KEY (customer_id → customers.id)</td>\n                </tr>\n                <tr>\n                    <td>amount</td>\n                    <td>DECIMAL(10,2)</td>\n                    <td></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Sample Output</h3>\n        <table class=\\\"example-table\\\">\n            <tr>\n                <th>email</th>\n                <th>country</th>\n                <th>transactions</th>\n                <th>total_amount</th>\n                <th>total_commission</th>\n            </tr>\n            <tr>\n                <td>bnisius2@mitbeian.gov.cn</td>\n                <td>France</td>\n                <td>3</td>\n                <td>146.31</td>\n                <td>21.95</td>\n            </tr>\n            <tr>\n                <td>egauvain1@zimbio.com</td>\n                <td>Belgium</td>\n                <td>2</td>\n                <td>78.47</td>\n                <td>19.62</td>\n            </tr>\n            <!-- Additional rows omitted for brevity -->\n        </table>\n    </div>\n</div>\n\n<style>\n.schema-table {\n    border-collapse: collapse;\n    width: 100%;\n    margin: 1em 0;\n}\n\n.schema-table th, .schema-table td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n}\n\n.schema-table th {\n    background-color: #f5f5f5;\n}\n\n.note {\n    background-color: #f8f9fa;\n    padding: 1em;\n    border-left: 4px solid #007bff;\n    margin: 1em 0;\n}\n\n.table-definition {\n    margin-bottom: 2em;\n}\n</style>",
        "google_doc_link": "https://docs.google.com/document/d/1rdmStDHJW20WrKApZZcJ0fVbQTWJFM70-XY45Mdg4s8/edit?usp=sharing",
        "solution_code": "",
        "company_name": "AT and T",
        "company_id": 37
    }
]