[
    {
        "id": 1144,
        "title": "Max Gold Coins Collection",
        "problem_statement": "<h1>Max Gold Coins Collection</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Max is on a quest to collect gold coins. He has come across a series of open carats that are filled with gold coins of varying quantities. He is free to collect the coins from any carat, however, as soon as he collects the coins from one carat, he gets a curse that makes him unable to collect coins from the adjacent carats. For example, if he collects coins from carat 'i', he cannot collect coins from carat 'i-1' or 'i+1'. Given a series of N carats and C numbers of gold coins inside each of them, write a program to help Max collect the maximum number M of gold coins.</p>\r\n\r\n<p><strong>Input Format:</strong></p>\r\n<p>The first line of input contains N, the number of carats.</p>\r\n<p>The second input line contains N numbers separated by a single white space, representing the number of gold coins in each carat.</p>\r\n\r\n<p><strong>Output Format:</strong></p>\r\n<p>The output contains M, the maximum number of gold coins Max can collect.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>I) 0 &lt; N &lt; 10<sup>4</sup></li>\r\n    <li>II) 0 &lt;= C &lt; 10<sup>9</sup></li>\r\n    <li>III) Number of gold coins in each carat C, 0 &lt;= C &lt; 10<sup>9</sup>.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n1 2 3 4 5\r\nOutput:\r\n9</code></pre>\r\n<p><strong>Explanation:</strong> N=5. The number of gold coins in each carat is 1, 2, 3, 4, and 5. If Max collects gold coins from the 1st, 3rd, and 5th carats, he will get 9 gold coins (1+3+5), which is the maximum number of gold coins he can collect. The other possible ways are:</p>\r\n<ul>\r\n    <li>1st and 3rd = 1+3 = 4</li>\r\n    <li>1st and 4th = 1+4 = 5</li>\r\n    <li>1st and 5th = 1+5 = 6</li>\r\n    <li>2nd and 4th = 2+4 = 6</li>\r\n    <li>2nd and 5th = 2+5 = 7</li>\r\n    <li>3rd and 5th = 3+5 = 8</li>\r\n</ul>\r\n<p>As 9 is the maximum number of gold coins Max can collect, 9 is the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n2 14 5 4 32 8\r\nOutput:\r\n46</code></pre>\r\n<p><strong>Explanation:</strong> N=6. The number of gold coins in each carat is 2, 14, 5, 4, 32, and 8. If Max collects gold coins from the 2nd and 5th carats, he will get 46 gold coins (14+32), which is the maximum number of gold coins he can collect. Thus, 46 is the output.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Flipkart_3aug",
        "company_id": 385
    },
    {
        "id": 1145,
        "title": "Building Construction on Land",
        "problem_statement": "<h1>Building Construction on Land</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Leonardo Builders is one of the leading construction companies in the country. They have recently picked up a new contract to construct a building on a piece of land. The land owner has specified two conditions for the project. The first condition is that no existing trees on the land can be cut down. The second condition is that the building shape should be exactly as per the land owner's design.</p>\r\n<p>The land is in a rectangle shape with N trees in it. Consider that the land is represented by its lower-left corner placed in coordinate system's origin. Once complete, the corners of the building must lie on integer coordinates, and the building must be located completely within the land area. A tree is considered cut if it is located in the corner, walls, or within the building. The shape of the building as given by the land owner is specified by providing the corners of the building.</p>\r\n<p>Leonardo Builders wants to know in how many ways they can construct the building, subject to the land owner's conditions. Can you write a program to help them?</p>\r\n\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not write arbitrary strings anywhere in the program as these contribute to the standard output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line of input contains integers Xp, Yp, and N, the coordinates of the upper right corner of the land, and the number of trees on the land, respectively.</p>\r\n<p>The next N lines contain x and y coordinates of each of the N trees.</p>\r\n<p>The next line contains the integer K, the number of corners of the building.</p>\r\n<p>The next K lines contain x and y coordinates of the corners of the building, used to denote the shape of the building. The building corners are provided in the order of joining lines, so neighbouring corners are connected by a straight line.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>Single line of output contains how many ways the building can be constructed on the land, subject to the land owner's conditions.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= Xp, Yp &lt;= 500</li>\r\n    <li>0 &lt;= N &lt;= Xp * Yp</li>\r\n    <li>0,0 &lt; Tree coordinates &lt; Xp,Yp</li>\r\n    <li>3 &lt;= K &lt;= 10000</li>\r\n    <li>-10<sup>9</sup> &lt;= Xi, Yi &lt;= 10<sup>9</sup> where Xi, Yi are the coordinates of the building corners, used to denote the shape of the building.</li>\r\n    <li>Building should be constructed as a polygon and it can be rotated to fit with in the plot and all the vertices of the building should stay on integer coordinates only</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4 5 1\r\n3 4\r\n4\r\n0 0\r\n2 0\r\n2 2\r\n0 2\r\nOutput:\r\n8</code></pre>\r\n<p><strong>Explanation:</strong> The land coordinates are from (0,0) to (4,5). There is 1 tree on the land, at coordinate (3,4). The number of building corners, K = 4. The building shape is denoted by the 4 corners as (0,0) (2,0) (0,2) and (2,2) i.e. it is a square with side = 2. There are 8 possible ways (as shown in the image below) to construct the building on the land while keeping the tree intact. Hence 8 is printed as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n5 5 3\r\n1 4\r\n1 3\r\n2 2\r\n3\r\n4 7\r\n6 3\r\n7 6\r\nOutput:\r\n3</code></pre>\r\n<p><strong>Explanation:</strong> The land coordinates are from (0,0) to (5,5). There are 3 trees at positions (1,4), (1,3) and (2,2). The number of building corners, K = 3 i.e. building is in the shape of a triangle. There are 3 possibilities to fit the shape in the land, as shown in the image below. Hence 3 is printed as the output.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Flipkart_3aug",
        "company_id": 385
    },
    {
        "id": 1146,
        "title": "Spiral Alphabetical Titans",
        "problem_statement": "<h1>Spiral Alphabetical Titans</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A set of students want to play this game called 'Spiral Alphabetical Titans' in a game fair.\r\nThe instructions on how to play this game are given below:</p>\r\n<p>I) You are given two integers M and N, where M x M is the size of the larger square matrix, MAT, and N can be completely divided into multiple smaller square matrices of order N each.\r\nII) Create a larger matrix, MAT of order M x M and it is first divided into smaller square matrices of size N x N each.\r\nIII) Each smaller matrices are filled with alphabets (A to Z) starting from the middle in an anticlockwise direction, i.e. in a spiral form. The smaller matrices are also filled starting from the middle matrix in an anticlockwise direction.</p>\r\n<p><strong>Notes:</strong>\r\nI) If 'Z' is reached, the filling is started from A again.\r\nII) If there is no middle, bottom-left is considered.</p>\r\n<p>Write a program to print the resultant matrix obtained by playing the game of \"Spiral Alphabetical Titans\" for the given values of M and N.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line of the input contains M.\r\nThe second line of the input contains N.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>The output contains a matrix of size M x M filled with alphabets A-Z as explained in the problem statement. Each alphabet is separated by the other by single white space. (Do not add a space at the end of each line.)</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n9\r\n3\r\nOutput:\r\nC B A T S R K J I \r\nV U Z M L Q D C H \r\nW X Y N O P E F G \r\nR Q P I N G B A Z \r\nK J O B A F C D Y \r\nL M N C D E V W X \r\nA Z Y J I H S R Q \r\nT S X C B G L K P \r\nU V W D E F M N O</code></pre>\r\n<p><strong>Explanation:</strong> M=9, N=3. There are 9 smaller matrices of size 3 x 3. They are shaded with different shades in the matrix given below and the middle matrix is shaded with green colour. The order in which the alphabets are entered into the cells in a matrix is mentioned below.\r\nStarting from the middle cell in the middle matrix, all the cells of the middle matrix is filled in with alphabets A-Z in the anti-clockwise direction. A similar pattern is followed until all the cells in the larger matrix are filled. The resultant matrix is given below and arrows have been given to mark the order in which alphabets are filled in the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n3\r\nOutput:\r\nJ I H A Z Y \r\nG B T S X \r\nD I F U W \r\nJ H G R O P \r\nB A F K J O \r\nC D E L M N</code></pre>\r\n<p><strong>Explanation:</strong> M=6 and N=3.\r\nAs there is no middle matrix, the bottom-left matrix is filled first.\r\nThen the matrix right to the bottom-left matrix and so on in an anticlockwise direction, i.e. in a spiral form.\r\nA is filled in the middle of the bottom-left matrix, B is at the left of A and so on. The resultant matrix is given below and different shades are used to represent different squares.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li>1 &lt;= M &lt;= 50</li>\r\n<li>M%N = 0</li>\r\n<li>M is always greater than N.</li>\r\n</ul>\r\n\r\n<h2>Code Snippet</h2>\r\n<pre><code class='language-cpp'>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\n\r\nvector&lt;vector&lt;char&gt;&gt; spiralAlphabeticalTitans(int M, int N) { // Here, M and N is\r\n    // the size of larger square matrix and the smaller square matrices, respectively\r\n    vector&lt;vector&lt;char&gt;&gt; result(M, vector&lt;char&gt;(M));\r\n\r\n    // WRITE YOUR CODE HERE.\r\n\r\n    return result;\r\n}\r\n\r\nint main() {\r\n    int m;\r\n    scanf(\"%d\", &m);\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    vector&lt;vector&lt;char&gt;&gt; result = spiralAlphabeticalTitans(m, n);\r\n    for (int i = 0; i &lt; m; ++i) {\r\n        for (int j = 0; j &lt; m; ++j) {\r\n            cout &lt;&lt; result[i][j] &lt;&lt; \" \";\r\n        }\r\n        cout &lt;&lt; \"\\n\";\r\n    }\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Flipkart_3aug",
        "company_id": 385
    }
]