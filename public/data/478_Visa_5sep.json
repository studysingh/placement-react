[
    {
        "id": 1373,
        "title": "Simulate CD Command",
        "problem_statement": "<h1>Simulate CD Command</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Your task is to implement a simulation of a <code>change directory</code> command. This command changes the current working directory to the specified one.</p>\r\n<p>The initial working directory is root i.e. <code>/</code>. You are given a list of <code>cd</code> commands.</p>\r\n<p>There are multiple options for command arguments.</p>\r\n<ul>\r\n    <li><code>cd /</code> - changes the working directory to the root directory.</li>\r\n    <li><code>cd .</code> - stays in the current directory.</li>\r\n    <li><code>cd ..</code> - moves the working directory one level up. In the root directory, <code>cd ..</code> does nothing.</li>\r\n    <li><code>cd &lt;subdirectory&gt;</code> - moves to the specified subdirectory within the current working directory. <code>&lt;subdirectory&gt;</code> is a string consisting of only lowercase English letters.</li>\r\n</ul>\r\n<p>All specified directories exist. Return the absolute path from the root to the working directory after executing all <code>cd</code> commands in the given order. <code>/</code> should be used as separators.</p>\r\n<p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(commands.length * max(commands[i].length))</code> will fit within the execution time limit.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: commands = [\"cd users\", \"cd codesignal\", \"cd ..\", \"cd admin\"]\r\nOutput: \"/users/admin\"</code></pre>\r\n<p><strong>Explanation:</strong> The absolute path is changing in the following way:</p>\r\n<p><code>/</code> -> <code>/users</code> -> <code>/users/codesignal</code> -> <code>/users</code> -> <code>/users/admin</code></p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: commands = [\"cd users\", \"cd ..\", \"cd admin\", \"cd volumes\"]\r\nOutput: \"/volumes\"</code></pre>\r\n<p><strong>Explanation:</strong> The absolute path is changing in the following way:</p>\r\n<p><code>/</code> -> <code>/users</code> -> <code>/</code> -> <code>/admin</code> -> <code>/volumes</code></p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><strong>[execution time limit]</strong> 4 seconds (py3)</li>\r\n    <li><strong>[memory limit]</strong> 1 GB</li>\r\n    <li><strong>[input] array.string commands</strong>\r\n        <ul>\r\n            <li>An array of strings representing the list of <code>cd</code> commands in <code>cd &lt;option&gt;</code> format.</li>\r\n            <li>All specified directories exist, and their names only consist of latin lowercase letters.</li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>[output] string</strong>\r\n        <ul>\r\n            <li>The current working directory after executing all <code>cd</code> commands.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n<p><strong>Guaranteed constraints:</strong></p>\r\n<ul>\r\n    <li><code>1 &lt;= commands.length &lt;= 1000</code>.</li>\r\n</ul>\r\n\r\n<h2>Python 3 Syntax Tips</h2>\r\n<pre><code class='language-python'># Prints help message to the console\r\n# Returns a string\r\ndef helloWorld(name):\r\n    print(\"This prints to the console when\")\r\n    return \"Hello, \" + name</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Visa_5sep",
        "company_id": 478
    },
    {
        "id": 1374,
        "title": "Smooth Moisture Grid",
        "problem_statement": "<h1>Smooth Moisture Grid</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are an agricultural scientist working on precision farming technology. You are given a two-dimensional matrix of integers <code>moistureGrid</code> representing soil moisture levels across a field, with <code>moistureGrid[i][j]</code> containing an integer from <code>0</code> to <code>255</code> to represent the moisture level of a soil cell at coordinate <code>(i, j)</code>. You are also given a non-negative integer parameter <code>smoothingRadius</code>. Your task is to apply a moisture smoothing effect to the field.</p>\r\n\r\n<p>To apply a moisture smoothing effect to the field, replace the moisture level of each soil cell <code>(i, j)</code> with the average value of its original moisture level <code>moistureGrid[i][j]</code> and the mean moisture level of its neighboring cells (defined as <code>neighbors(i, j)</code>). Soil cell <code>(k, l)</code> is included in <code>neighbors(i, j)</code> if it satisfies the conditions <code>abs(i - k) <= smoothingRadius</code> and <code>abs(j - l) <= smoothingRadius</code>.</p>\r\n\r\n<p>Expand to see the example field layouts.</p>\r\n<p>The neighbors of soil cell at coordinate <code>(2, 2)</code> for <code>smoothingRadius = 1</code>:</p>\r\n<p>The neighbors of soil cell at coordinate <code>(2, 2)</code> for <code>smoothingRadius = 2</code>:</p>\r\n\r\n<p>The mean moisture level is defined as <code>mean(values) = sum(values) // values.length</code> where <code>//</code> is an integer division operator.</p>\r\n<p>The integer division operator <code>//</code> is equivalent to taking an integer part of a real division: <code>a // b = int(a / b)</code>.</p>\r\n<p>So, the formula for replacing the moisture level of each soil cell is:</p>\r\n<pre><code class='language-text'>updated_moisture[i][j] = (moisture[i][j] + mean(neighbors)) // 2</code></pre>\r\n\r\n<p><strong>Note:</strong> Please note that some of the possible neighbors might be missing, and the <code>mean</code> function should only take existing neighbors into account. If a soil cell doesn't have any neighbors, its moisture level should not change after smoothing.</p>\r\n\r\n<p><strong>Note:</strong> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(moistureGrid[0].length * moistureGrid.length^2)</code> will fit within the execution time limit.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nmoistureGrid = [\r\n    [9, 6],\r\n    [3, 0]\r\n]\r\nsmoothingRadius = 1\r\nOutput:\r\n[\r\n    [6, 5],\r\n    [4, 3]\r\n]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>All soil cells in the original field have 3 neighbors.</li>\r\n    <li><code>moistureGrid[0][0] = 9</code>, and its neighbors are <code>[6, 3, 0]</code> with a mean of <code>(6 + 3 + 0) // 3 = 3</code>. So, it should be updated to <code>(9 + 3) // 2 = 6</code>.</li>\r\n    <li><code>moistureGrid[0][1] = 6</code>, and its neighbors are <code>[9, 3, 0]</code> with a mean of <code>(9 + 3 + 0) // 3 = 4</code>. So, it should be updated to <code>(6 + 4) // 2 = 5</code>.</li>\r\n    <li><code>moistureGrid[1][0] = 3</code>, and its neighbors are <code>[9, 6, 0]</code> with a mean of <code>(9 + 6 + 0) // 3 = 5</code>. So, it should be updated to <code>(3 + 5) // 2 = 4</code>.</li>\r\n    <li><code>moistureGrid[1][1] = 0</code>, and its neighbors are <code>[9, 6, 3]</code> with a mean of <code>(9 + 6 + 3) // 3 = 6</code>. So, it should be updated to <code>(0 + 6) // 2 = 3</code>.</li>\r\n</ul>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nmoistureGrid = [\r\n    [0, 0, 0, 0, 0],\r\n    [0, 255, 0, 0, 0],\r\n    [0, 0, 0, 0, 0]\r\n]\r\nsmoothingRadius = 2\r\nOutput:\r\n[\r\n    [15, 15, 15, 15, 15],\r\n    [15, 127, 15, 15, 15],\r\n    [15, 15, 15, 15, 15]\r\n]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li><code>smoothingRadius</code> is equal to 2, so, all the soil cells in this example are the neighbors of each other.</li>\r\n    <li>For the central soil cell <code>moistureGrid[1][1] = 255</code>, there are 8 neighbors (<code>0, 0, 0, 0, 0, 0, 0, 0</code>) with a mean of <code>0 // 8 = 0</code>. So, it should be updated to <code>(255 + 0) // 2 = 127</code>.</li>\r\n    <li>For all 8 border soil cells, there are 8 neighbors with a mean of <code>255 // 8 = 31</code>. So, they should be updated to <code>(0 + 31) // 2 = 15</code>. (<code>int(15.5) = 15</code>).</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><strong>Execution time limit:</strong> 4 seconds (py3)</li>\r\n    <li><strong>Memory limit:</strong> 1 GB</li>\r\n    <li><strong>Input:</strong> <code>array.array.integer moistureGrid</code>\r\n        <ul>\r\n            <li>A matrix of integers representing the moisture levels of soil cells in a field to be smoothed.</li>\r\n            <li><code>1 <= moistureGrid.length <= 50</code></li>\r\n            <li><code>1 <= moistureGrid[i].length <= 50</code></li>\r\n            <li><code>0 <= moistureGrid[i][j] <= 255</code></li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Input:</strong> <code>integer smoothingRadius</code>\r\n        <ul>\r\n            <li>A number representing the distance from a soil cell coordinate, which defines the coordinates that are considered neighbors.</li>\r\n            <li><code>1 <= smoothingRadius <= 5</code></li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>Output:</strong> <code>array.array.integer</code>\r\n        <ul>\r\n            <li>A matrix of integers representing the moisture levels of soil cells in a smoothed field.</li>\r\n        </ul>\r\n    </li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Visa_5sep",
        "company_id": 478
    }
]