[
    {
        "id": 1274,
        "title": "Palindrome Transformation",
        "problem_statement": "<h1>Palindrome Transformation</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Palindrome sequences are used in test cases to assess the performance of a machine learning algorithm for classifying and manipulating genomic data. Given an array of integers of size n, the objective is to convert the array into a palindrome sequence for testing the ML algorithm.</p>\r\n<p>The operation for manipulating the array is:</p>\r\n<ul>\r\n    <li>Choose two integers x and y.</li>\r\n    <li>Change every occurrence of x in the array with y.</li>\r\n</ul>\r\n<p>The task is to determine the minimum number of operations required to transform the array data into a palindrome.</p>\r\n<p>Complete the function <code>getMinOperations</code> in the editor with the following parameter:</p>\r\n<ul>\r\n    <li><code>int data[]</code>: the data to be preprocessed to test a machine learning algorithm</li>\r\n    <li><code>int data_count</code>: the number of elements in <code>data</code></li>\r\n</ul>\r\n<p><strong>Return:</strong> <code>int</code> the minimum number of operations required to make the array a palindrome</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: data = [1, 2, 3, 3, 1, 4]</code></pre>\r\n<p><strong>Operations:</strong></p>\r\n<ul>\r\n    <li>Replace all occurrences of 1 with 4. Array becomes: <code>[4, 2, 3, 3, 4, 4]</code> (1 operation)</li>\r\n    <li>Replace all occurrences of 2 with 4. Array becomes: <code>[4, 4, 3, 3, 4, 4]</code> (1 operation)</li>\r\n</ul>\r\n<pre><code class='language-text'>Output: 2</code></pre>\r\n<p><strong>Explanation:</strong> The array <code>[4, 4, 3, 3, 4, 4]</code> is a palindrome. A total of 2 operations were performed.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 3, data = [1, 3, 5]\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> In a single operation, all occurrences of 3 can be replaced with 5, resulting in the array <code>[1, 5, 5]</code>, which is a palindrome array.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 2 * 10^5</code></li>\r\n    <li><code>1 <= data[i] <= 10^9</code></li>\r\n</ul>\r\n\r\n<pre><code class='language-javascript'>/*\r\n * Complete the 'getMinOperations' function below.\r\n *\r\n * The function is expected to return an INTEGER.\r\n * The function accepts INTEGER_ARRAY data as parameter.\r\n */\r\n\r\nint getMinOperations(int data_count, int* data) {\r\n    // Function implementation\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_28aug",
        "company_id": 434
    },
    {
        "id": 1275,
        "title": "Bullish Trend Detection",
        "problem_statement": "```html\r\n<h1>Bullish Trend Detection</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are building a backend service for a stock analytics platform. You have an array named <code>stockPrices</code> where <code>stockPrices[i]</code> denotes the price of the stock in the <code>i<sup>th</sup></code> month. A bullish trend of size <code>k</code> is an interval of <code>k</code> months such that the stock prices increase strictly throughout those months.</p>\r\n<p>Implement a function that calculates the number of bullish trends of size <code>k</code>.</p>\r\n<p>The function <code>calculateBullishTrends</code> takes the following inputs:</p>\r\n<ul>\r\n    <li><code>int stockPrices[]</code>: the stock prices for <code>n</code> months</li>\r\n    <li><code>int k</code>: the analysis parameter</li>\r\n</ul>\r\n<p>The function should return an integer, the number of bullish trends of size <code>k</code>.</p>\r\n<p><strong>Note:</strong> If the interval length is 1, each subarray of length 1 is highly profitable.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: stockPrices = [1, 2, 3, 3, 4, 5], k = 3\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> These are the intervals of <code>k</code> months in which the stock prices are strictly increasing:</p>\r\n<ul>\r\n    <li>Months 1 to 3: [1, 2, 3] (1 &lt; 2 &lt; 3)</li>\r\n    <li>Months 4 to 6: [3, 4, 5] (3 &lt; 4 &lt; 5)</li>\r\n</ul>\r\n<p>Hence, the answer is 2.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= k &lt;= n &lt;= 2 * 10<sup>5</sup></code></li>\r\n    <li><code>1 &lt;= stockPrices[i] &lt;= 10<sup>9</sup></code></li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_28aug",
        "company_id": 434
    },
    {
        "id": 1276,
        "title": "Load Spike Detector",
        "problem_statement": "<h1>Load Spike Detector</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The function <code>getHighestLoadTimestamps</code> will take one parameter:</p>\r\n<ul>\r\n    <li><code>int load[D]</code>: server loads at timestamps.</li>\r\n</ul>\r\n<p>The function should return an array of integers denoting the indices (0-based) of the timestamps, in increasing order, where <code>load[i] &gt; 2 * average server load</code>. If none, return an empty array.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 3, load = [1, 2, 9]\r\nOutput: [2]</code></pre>\r\n<p><strong>Explanation:</strong> The average load is (1 + 2 + 9) / 3 = 4. Only the value at timestamp 2 (0-based indexing) is greater than 2 * 4 = 8. Hence, the answer is [2].</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 5, load = [1, 3, 7, 7, 1]\r\nOutput: [2, 3]</code></pre>\r\n<p><strong>Explanation:</strong> The average load is (1+3+7+7+1)/5 = 3.4. The values at timestamps 2 and 3 (0-based indexing) are greater than 2 * 3.4 = 6.8. Hence, the answer is [2, 3].</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= n &lt;= 10^5</code></li>\r\n    <li><code>1 &lt;= load[i] &lt;= 10^4</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_28aug",
        "company_id": 434
    },
    {
        "id": 1299,
        "title": "Infection Sequences",
        "problem_statement": "<h1>Infection Sequences</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In a town with houses aligned in a straight line, numbered from 1 to n from left to right, a virus is spreading from m initially infected houses. Each day, an infected house spreads the virus to its immediate uninfected neighbors.</p>\r\n<p>Specifically, if house number X is infected on day i, then houses X+1 and X-1 will become infected on day i+1 if they are not already infected. Eventually, all houses will become infected. The sequence in which the houses get infected is called the infection sequence.</p>\r\n<p>Given an integer n and an integer array <code>infectedHouses</code> representing the initially infected houses, determine the total number of distinct infection sequences possible, modulo (10<sup>9</sup> + 7).</p>\r\n<p>Complete the function <code>getInfectionSequencesCount</code> in the editor with the following parameters:</p>\r\n<ul>\r\n    <li><code>int n</code>: the number of houses</li>\r\n    <li><code>int infectedHouses[m]</code>: the currently infected houses (where `m` is the number of initially infected houses)</li>\r\n</ul>\r\n<p><strong>Returns:</strong></p>\r\n<ul>\r\n    <li><code>int</code>: the number of infection sequences modulo (10<sup>9</sup> + 7)</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 5, infectedHouses = [1, 5]\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong>\r\nInitially, houses 1 and 5 are infected.\r\nOn Day 1, both houses numbers 2 and 4 become infected.\r\nOn Day 2, house number 3 is infected. Now all the houses are infected.\r\nThere is no way that house number 3 can be infected before houses 2 and 4. The 2 possible infection sequences are [2,4,3] and [4,2,3].</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 6, infectedHouses = [3, 5]\r\nOutput: 6</code></pre>\r\n<p><strong>Explanation:</strong>\r\nInitially, houses 3 and 5 are infected. The houses look like this: [1,2,3,4,5,6].\r\nOn Day 1, houses numbers 2,4,6 get infected. The houses look like this: [1,2,3,4,5,6].\r\nOn Day 2, house number 1 gets infected. All the houses are infected now.\r\nThe 6 possible infection sequences are : [2,4,6,1], [2,6,4,1], [4,2,6,1], [4,6,2,1], [6,2,4,1], [6,4,2,1].</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: n = 4, infectedHouses = [1]\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong>\r\nInitially, house 1 is infected. The houses look like this: [1,2,3,4].\r\nOn Day 1, house number 2 gets infected. The houses look like this: [1,2,3,4].\r\nOn Day 2, house number 3 gets infected. The houses look like this: [1,2,3,4].\r\nOn Day 3, house number 4 gets infected. All houses are infected now.\r\nThe only possible infection sequence is [2,3,4].</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\r\n    <li><code>1 &lt;= m &lt;= n</code></li>\r\n    <li><code>1 &lt;= infectedHouses[i] &lt;= n</code></li>\r\n    <li>All elements of the array are distinct.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "oracle_28aug",
        "company_id": 434
    }
]