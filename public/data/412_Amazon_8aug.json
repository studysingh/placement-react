[
    {
        "id": 1217,
        "title": "Medians",
        "problem_statement": "<h1>Medians</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A new Amazon intern encountered a challenging task. Currently, the intern has n integers, where the value of the i-th element is represented by the array element <code>values[i]</code>. The intern is curious to play with arrays, and subsequences are what he asks you to join him. Given n integer array <code>values</code> and an integer <code>k</code>, the intern needs to find the maximum and minimum median overall subsequences of length <code>k</code>.</p>\r\n\r\n<p><strong>Function Description</strong><br>\r\nComplete the function <code>medians</code> in the editor below.<br>\r\n<code>medians</code> has the following parameter(s):<br>\r\n<code>int values[n]</code>: the value of integers<br>\r\n<code>int k</code>: the given integer</p>\r\n\r\n<p><strong>Returns</strong><br>\r\n<code>int[]</code>: the maximum and minimum overall subsequences of length k in the form [maximum median, minimum median].</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: n = 3, values = [1, 2, 3], k = 2\r\nOutput: [2, 1]</code></pre>\r\n<p><strong>Explanation:</strong> The subsequences of length <code>k=2</code> and their medians are:</p>\r\n<ul>\r\n    <li><code>[1, 2]</code> has a median of <code>1</code>.</li>\r\n    <li><code>[1, 3]</code> has a median of <code>2</code>.</li>\r\n    <li><code>[2, 3]</code> has a median of <code>2</code>.</li>\r\n</ul>\r\n<p>Here, the maximum median present is 2 and the minimum median in the subsequence present is 1.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: n = 2, values = [56, 21], k = 1\r\nOutput: [56, 21]</code></pre>\r\n<p><strong>Explanation:</strong> The subsequences of length <code>k=1</code> and their medians are:</p>\r\n<ul>\r\n    <li><code>[56]</code> has a median of <code>56</code>.</li>\r\n    <li><code>[21]</code> has a median of <code>21</code>.</li>\r\n</ul>\r\n<p>The maximum median present is 56 and the minimum subsequence present is 21.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10^5</code></li>\r\n    <li><code>0 <= values[i] <= 10^9</code></li>\r\n    <li><code>1 <= k <= n</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_8aug",
        "company_id": 412
    },
    {
        "id": 1218,
        "title": "Retrieve Data",
        "problem_statement": "<h1>Retrieve Data</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The Data Science Team at Amazon is facing a unique challenge. A portion of their data has gone missing from their database. However, they believe they can recover the lost data based on the following information:</p>\r\n<ol>\r\n    <li>The missing data is a permutation of the characters found in the string <code>firstInfo</code>.</li>\r\n    <li>The missing data is lexicographically greater than the string <code>secondInfo</code>.</li>\r\n    <li>The missing data is the lexicographically smallest string that satisfies the above two conditions.</li>\r\n</ol>\r\n<p>In other words, they are searching for the smallest string that meets these criteria.</p>\r\n<p>A string x is lexicographically smaller than a string y if:</p>\r\n<ul>\r\n    <li><code>x[i] &lt; y[i]</code> at the first position where x and y differ, or</li>\r\n    <li><code>|x| &lt; |y|</code> and x is a prefix of y (where <code>|x|</code> denotes the length of string x).</li>\r\n</ul>\r\n<p>Given two strings, <code>firstInfo</code> and <code>secondInfo</code>, find the missing data that matches the above criteria. If no such string exists, return \"-1\".</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>retrieveData</code> in the editor below.</p>\r\n<p><code>retrieveData</code> has the following parameters:</p>\r\n<ul>\r\n    <li><code>firstInfo</code>: the string that contains the first information.</li>\r\n    <li><code>secondInfo</code>: the string that contains the second information.</li>\r\n</ul>\r\n<p><strong>Returns:</strong> string: the missing data that matches the above criteria. If possible, otherwise return \"-1\".</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: firstInfo = \"aac\", secondInfo = \"aa\"\r\nOutput: \"aca\"</code></pre>\r\n<p><strong>Explanation:</strong> The possible pieces of missing data that satisfy the conditions are \"aac\", \"aca\", and \"caa\". Since \"aac\" is the lexicographically smallest, it is the most suitable piece of data to retrieve.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: firstInfo = \"abc\", secondInfo = \"defg\"\r\nOutput: -1</code></pre>\r\n<p><strong>Explanation:</strong> It can be observed that no permutation of the missing data from <code>firstInfo = \"abc\"</code> would be lexicographically greater than <code>secondInfo = \"defg\"</code>. Therefore, no valid data can be retrieved.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= |firstInfo|, |secondInfo| &lt;= 5000</code></li>\r\n    <li><code>firstInfo</code> and <code>secondInfo</code> consist of lowercase English letters.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_8aug",
        "company_id": 412
    }
]