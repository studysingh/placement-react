[
    {
        "id": 1597,
        "title": "Hiring drive",
        "problem_statement": "```html\r\n<h1>Hiring drive</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are looking to hire front-end and back-end developers for a project that requires exactly N front-end developers and exactly M back-end developers. You receive applications from (N+M) candidates.</p>\r\n<p><strong>Conditions:</strong></p>\r\n<ul>\r\n    <li>Every developer can work on either the front end or back end, but not on both.</li>\r\n    <li>The cost of each developer can be different. The cost of the i<sup>th</sup> developer is as follows:\r\n        <ul>\r\n            <li>Front-end: F<sub>i</sub> dollars</li>\r\n            <li>Back-end: B<sub>i</sub> dollars</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n<p>Print the minimum amount that it will cost the company to run this project.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the <code>solve</code> function. The function takes the following 4 parameters and returns the minimum amount that it will cost the company to run this project as described:</p>\r\n<ul>\r\n    <li><code>N</code>: Represents the number of front-end developers required.</li>\r\n    <li><code>M</code>: Represents the number of back-end developers required.</li>\r\n    <li><code>F</code>: Represents an array listing the charges of the developers for working on the front end.</li>\r\n    <li><code>B</code>: Represents an array listing the charges of the developers for working on the back end.</li>\r\n</ul>\r\n\r\n<h2>Input Format for Custom Testing</h2>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line contains <code>T</code>, which represents the number of test cases.</li>\r\n    <li>For each test case:\r\n        <ul>\r\n            <li>The first line contains an integer <code>N</code> denoting the number of front-end developers required.</li>\r\n            <li>The second line contains an integer <code>M</code> denoting the number of back-end developers required.</li>\r\n            <li>The third line contains an array <code>F</code> consisting of (N+M) space-separated positive integers denoting the costs associated with working on the front end.</li>\r\n            <li>The fourth line contains an array <code>B</code> consisting of (N+M) space-separated positive integers denoting the costs associated with working on the backend.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>For every test case, print in a new line an integer representing the minimum cost to run the project.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'><strong>Input:</strong>\r\n2\r\n1\r\n1\r\n1 2\r\n2 1\r\n1\r\n2\r\n1 1 1\r\n1 1 1\r\n\r\n<strong>Output:</strong>\r\n2\r\n3</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The first line indicates there are 2 test cases.</p>\r\n<p><strong>For the first test case:</strong></p>\r\n<ul>\r\n    <li>Given: N=1, M=1, F=[1, 2], B=[2, 1].</li>\r\n    <li>We need to hire 1 front-end and 1 back-end developer from 2 candidates.</li>\r\n    <li>To minimize cost, we hire the first candidate as a front-end developer (cost F[0] = 1) and the second candidate as a back-end developer (cost B[1] = 1).</li>\r\n    <li>Total cost = 1 + 1 = 2.</li>\r\n</ul>\r\n<p><strong>For the second test case:</strong></p>\r\n<ul>\r\n    <li>Given: N=1, M=2, F=[1, 1, 1], B=[1, 1, 1].</li>\r\n    <li>We need to hire 1 front-end and 2 back-end developers from 3 candidates.</li>\r\n    <li>Since all costs are 1, any combination of 1 front-end and 2 back-end developers will result in a total cost of 1 + 1 + 1 = 3.</li>\r\n</ul>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "DealShare",
        "company_id": 557
    },
    {
        "id": 1598,
        "title": "Alphabetical strings",
        "problem_statement": "<h1>Alphabetical strings</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>While creating an account on a new website, you choose a certain string of letters as your password. However, you are alerted that the website requires your password to be an alphabetical string. It explains, 'A string of lowercase letters is called alphabetical if deleting zero or more of its letters can't result in the alphabet string <code>abcdefghijklmnopqrstuvwxyz</code>'.</p>\r\n<p>Because of this requirement, you need to ensure that your password is alphabetical. Find the minimum number of letters that must be inserted in order to make your password alphabetical.</p>\r\n\r\n<p><strong>Function description:</strong></p>\r\n<p>Complete the solve function. This function takes the following parameter and returns the minimum number of letters that must be inserted in order to make your password alphabetical.</p>\r\n<ul>\r\n    <li><code>s</code>: Represents a string that denotes s</li>\r\n</ul>\r\n\r\n<p><strong>Input format for custom testing:</strong></p>\r\n<p><strong>Note:</strong> Use this input format if you are testing against custom input or writing code in a language where we don't provide boilerplate code.</p>\r\n<ul>\r\n    <li>The first line contains <code>T</code>, which represents the number of test cases.</li>\r\n    <li>For each test case:\r\n        <ul>\r\n            <li>The first line contains a string <code>s</code> denoting the string that you are required to make alphabetical.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Output format</h2>\r\n<p>For each test case, print the minimum number of letters that must be inserted in order to make your password alphabetical, in a new line.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\nfgwabcdefghijkmnopqrsrtuvwxyzye\r\nOutput:\r\n5</code></pre>\r\n<p><strong>Explanation:</strong> In this sample, one optimal way to do the task is to insert 'r', 'x', 'w' and 'y' to obtain the alphabetical string '<strong>fgwabcdefghijklmnopqrstuvwxyz</strong>', which contains all the English letters in alphabetical order (as seen in bold). Since there is no way to do this with fewer than 5 insertions, the answer is 5.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= T <= 30</code></li>\r\n    <li><code>1 <= length of string s <= 10^5</code></li>\r\n    <li><code>s</code> contains only lowercase English letters</li>\r\n</ul>\r\n\r\n<p><strong>Note:</strong> Your code must be able to print the sample output from the provided sample input. However, your code is run against multiple hidden test cases. Therefore, your code must pass these hidden test cases to solve the problem statement.</p>\r\n\r\n<p><strong>Limits:</strong></p>\r\n<ul>\r\n    <li>Time Limit: 2.0 sec(s) for each input file</li>\r\n    <li>Memory Limit: 256 MB</li>\r\n    <li>Source Limit: 1024 KB</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "DealShare",
        "company_id": 557
    }
]