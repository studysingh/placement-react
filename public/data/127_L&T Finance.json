[
    {
        "id": 436,
        "title": "Prime Factors Operations",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Prime Factors Operations</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are given an integer <code>n</code>. In one operation, you can do the following:</p>\n        <ul>\n            <li>Pick a number <code>P</code> such that <code>P</code> is prime and <code>n</code> is divisible by <code>P</code>. Assign <code>n = n / P</code>.</li>\n        </ul>\n        <p>Find the <strong>maximum number of operations</strong> you can perform.</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains an integer, <code>n</code>, denoting the initial value of <code>n</code> described in the problem.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>The function must return an <strong>INTEGER</strong> denoting the maximum number of operations you can perform.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ n ≤ 10<sup>9</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n5</pre>\n            <pre class=\\\"output\\\">Output:\n1</pre>\n            <div class=\\\"explanation\\\">\n                <p>In the first operation, we can pick <code>P = 5</code>. Then <code>n</code> becomes <code>5 / 5 = 1</code>. We can do no more operations.</p>\n            </div>\n        </div>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n1</pre>\n            <pre class=\\\"output\\\">Output:\n0</pre>\n            <div class=\\\"explanation\\\">\n                <p>We cannot do any operations.</p>\n            </div>\n        </div>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n4</pre>\n            <pre class=\\\"output\\\">Output:\n2</pre>\n            <div class=\\\"explanation\\\">\n                <p>In the first operation, pick <code>P = 2</code>. <code>N</code> becomes <code>4 / 2 = 2</code>. In the second operation, pick <code>P = 2</code>. <code>N</code> becomes <code>2 / 2 = 1</code>.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/16wskS_EaIGA5HwSwtCf_1XU0qHmstHddHTvP05-BukM/edit?usp=sharing",
        "solution_code": "import sys\\n\\ndef primeGame(n):\\n    c=0\\n    i=2\\n    while i*i<=n:\\n        while n%i==0:\\n            n//=i\\n            c+=1\\n        i+=1 if i==2 else 2\\n    if n>1:\\n        c+=1\\n    return c\\n\\ndef main():\\n    n=int(sys.stdin.readline().strip())\\n    result=primeGame(n)\\n    print(result)\\n\\nif __name__==\\\"__main__\\\":\\n    main()",
        "company_name": "L&T Finance ",
        "company_id": 127
    },
    {
        "id": 437,
        "title": "Find the Most Frequently Added Item in a Shopping Cart",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h2>Find the Most Frequently Added Item in a Shopping Cart</h2>\n    \n    <div class=\\\"problem-description\\\">\n        <p>You are given a string <code>items</code> that consists of lowercase letters, digits, and a delimiter <code>;</code> which represents a list of items in an online shopping cart separated by a delimiter (e.g., <code>\\\",\\\"</code>).</p>\n        <p>Calculate the most frequently occurring item. If there are more than one item with a maximum frequency, print the one that appears first in the string (the first item in the input that has a maximum frequency).</p>\n    </div>\n    \n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The first line contains a string, <code>items</code>, the string of items.</p>\n    </div>\n    \n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>The function must return a <strong>STRING</strong> denoting the most frequent item. If there are multiple items with the same maximum frequency, then print the item which appears first in the string.</p>\n    </div>\n    \n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ len(items) ≤ 10<sup>5</sup></code></li>\n        </ul>\n    </div>\n    \n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\norange;apple;apple</pre>\n            <pre class=\\\"output\\\">Output:\napple</pre>\n            <div class=\\\"explanation\\\">\n                <p>The most frequent item is <code>apple</code>.</p>\n            </div>\n        </div>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nlaptop</pre>\n            <pre class=\\\"output\\\">Output:\nlaptop</pre>\n            <div class=\\\"explanation\\\">\n                <p>There is only one item <code>laptop</code>.</p>\n            </div>\n        </div>\n        \n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nmobile;laptop;apple;apple;laptop</pre>\n            <pre class=\\\"output\\\">Output:\nlaptop</pre>\n            <div class=\\\"explanation\\\">\n                <p>There are two items with the maximum frequency (which is 2), these items are <code>laptop</code> and <code>apple</code>, but <code>laptop</code> appears before <code>apple</code> in the string, so we print <code>laptop</code>.</p>\n            </div>\n        </div>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1sLqtmLRp8quWuXvKVVx6rW97f_4Ekz88SxSWsJvTgcQ/edit?usp=sharing",
        "solution_code": "import sys\\n\\ndef solve(items):\\n    arr = items.split(\\';\\')\\n    d = {}\\n    for x in arr:\\n        d[x] = d.get(x,0)+1\\n    m = max(d.values())\\n    for x in arr:\\n        if d[x] == m:\\n            return x\\n\\ndef main():\\n    items = sys.stdin.readline().strip(\\'\\\\n\\')\\n    print(solve(items))\\n\\nif name == \\'__main__\\':\\n    main()",
        "company_name": "L&T Finance ",
        "company_id": 127
    }
]