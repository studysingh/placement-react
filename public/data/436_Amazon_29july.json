[
    {
        "id": 1278,
        "title": "Process Performance Queries",
        "problem_statement": "<h1>Process Performance Queries</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are a developer at Amazon evaluating the performance of processing units. There are <code>n</code> processes, where each process <code>i</code> runs from <code>starts[i]</code> to <code>ends[i]</code> (both inclusive).</p>\r\n<p>You are given <code>q</code> queries, each defined by three arrays:</p>\r\n<ul>\r\n    <li><code>query_process[j]</code> -> the exact number of processes to check,</li>\r\n    <li><code>query_start[j]</code> -> the start time of the query interval,</li>\r\n    <li><code>query_end[j]</code> -> the end time of the query interval.</li>\r\n</ul>\r\n<p>For each query <code>j</code>, determine how many seconds within <code>[query_start[j], query_end[j]]</code> (inclusive) have exactly <code>query_process[j]</code> processes running.</p>\r\n<p>Return an array of size <code>q</code> with the result for each query.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<p>Suppose <code>n = 3</code>, <code>starts = [0, 1, 2]</code>, <code>ends = [2, 5, 10]</code>, <code>q = 2</code>, <code>query_process = [1, 2]</code>, <code>query_start = [1, 4]</code>, <code>query_end = [10, 8]</code>.</p>\r\n<pre><code class='language-text'>Time | Process Status | In Execution\r\n-----|----------------|--------------\r\n0    | process 0 starts | [0]\r\n1    | process 1 starts | [0, 1]\r\n2    | process 2 starts | [0, 1, 2]\r\n3    | process 0 ends   | [1, 2]\r\n4    | -              | [1, 2]\r\n5    | process 1 ends   | [2]\r\n6    | -              | [2]\r\n7    | -              | [2]\r\n8    | -              | [2]\r\n9    | -              | [2]\r\n10   | process 2 ends   | []\r\n11   | -              | []</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>For the first query (<code>query_process=1</code>, <code>query_start=1</code>, <code>query_end=10</code>), the answer is the number of seconds between the 1st and 10th second (both inclusive), where exactly 1 process is executing, i.e., {6, 7, 8, 9, 10}. The answer to this query is 5.</li>\r\n    <li>For the second query (<code>query_process=2</code>, <code>query_start=4</code>, <code>query_end=8</code>), the answer is the number of seconds between the 4th and 8th second (both inclusive), where exactly 2 processes are executing, i.e., {4, 5}. The answer to this query is 2.</li>\r\n</ul>\r\n<p>Hence, the answer to be reported is <code>[5, 2]</code>.</p>\r\n\r\n<h2>Function Description</h2>\r\n<p>Complete the function <code>getQueryAnswers</code> in the editor below. The function must return an array where <code>ith</code> integer denotes the answer to the <code>ith</code> query.</p>\r\n<p><code>getQueryAnswers</code> has the following parameters:</p>\r\n<ul>\r\n    <li><code>int starts[n]</code>: the starting times of the processes</li>\r\n    <li><code>int ends[n]</code>: the ending times of the processes</li>\r\n    <li><code>int query_process[q]</code>: the num_process component of each query</li>\r\n    <li><code>int query_start[q]</code>: the start time component of each query</li>\r\n    <li><code>int query_end[q]</code>: the end time component of each query</li>\r\n</ul>\r\n<p><strong>Returns</strong></p>\r\n<ul>\r\n    <li><code>int[q]</code>: the answer to each query</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10<sup>5</sup></code></li>\r\n    <li><code>0 <= starts[i] <= ends[i] <= 10<sup>6</sup></code></li>\r\n    <li><code>1 <= q <= 10<sup>5</sup></code></li>\r\n    <li><code>0 <= query_start[j] <= query_end[j] <= 10<sup>6</sup></code></li>\r\n    <li><code>0 <= query_process[j] <= 10<sup>6</sup></code></li>\r\n</ul>\r\n\r\n<h3>Sample Case 0:</h3>\r\n<h4>Sample Input For Custom Testing</h4>\r\n<pre><code class='language-text'>Input:\r\n3\r\n0 4 10\r\n3 6 12\r\n3\r\n0 1 2\r\n0 4 3\r\n20 10 20</code></pre>\r\n<h4>Sample Output</h4>\r\n<pre><code class='language-text'>Output:\r\n8\r\n3\r\n2</code></pre>\r\n<h4>Explanation</h4>\r\n<p>Given, <code>n = 3</code>, <code>starts = [0, 4, 10]</code>, <code>ends = [3, 6, 12]</code>, <code>q = 3</code>, <code>query_process = [0, 1, 2]</code>, <code>query_start = [0, 4, 3]</code>, <code>query_end = [20, 10, 20]</code>.</p>\r\n<ul>\r\n    <li>For the first query (<code>query_process=0</code>, <code>query_start=0</code>, <code>query_end=20</code>), find the number of seconds between the 0th and 20th second (both inclusive), where 0 processes were being executed. The answer is 8.</li>\r\n    <li>For the second query (<code>query_process=1</code>, <code>query_start=4</code>, <code>query_end=10</code>), find the number of seconds between the 4th and 10th second (both inclusive), where exactly 1 process was being executed. The answer is 3.</li>\r\n    <li>For the third query (<code>query_process=2</code>, <code>query_start=3</code>, <code>query_end=20</code>), find the number of seconds between the 3rd and 20th second (both inclusive), where exactly 2 processes were being executed. The answer is 2.</li>\r\n</ul>\r\n\r\n<h3>Sample Case 1:</h3>\r\n<h4>Sample Input For Custom Testing</h4>\r\n<pre><code class='language-text'>Input:\r\n1\r\n0\r\n0\r\n1\r\n1\r\n0\r\n0</code></pre>\r\n<h4>Sample Output</h4>\r\n<pre><code class='language-text'>Output:\r\n1</code></pre>\r\n<h4>Explanation</h4>\r\n<p>Given, <code>n = 1</code>, <code>starts = [0]</code>, <code>ends = [0]</code>, <code>q = 1</code>, <code>query_process = [1]</code>, <code>query_start = [0]</code>, <code>query_end = [0]</code>.</p>\r\n<ul>\r\n    <li>Find the number of seconds between the 0th second where exactly 1 process was being executed, i.e., {0}. The answer is 1.</li>\r\n</ul>\r\n\r\n<pre><code class='language-javascript'>\r\n/*\r\n * Complete the 'getQueryAnswers' function below.\r\n *\r\n * The function is expected to return an INTEGER_ARRAY.\r\n * The function accepts following parameters:\r\n *  1. INTEGER_ARRAY starts\r\n *  2. INTEGER_ARRAY ends\r\n *  3. INTEGER_ARRAY query_process\r\n *  4. INTEGER_ARRAY query_start\r\n *  5. INTEGER_ARRAY query_end\r\n */\r\n\r\npublic static List<Integer> getQueryAnswers(List<Integer> starts, List<Integer> ends, List<Integer> query_process, List<Integer> query_start, List<Integer> query_end) {\r\n    // Write your code here\r\n}\r\n</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_29july",
        "company_id": 436
    }
]