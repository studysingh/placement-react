[
    {
        "id": 116,
        "title": "Binary Autocomplete",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <h1>Binary Autocomplete</h1>\n\n<div class=\\\"problem-description\\\">\n        <p>The programming interface for a legacy motor controller accepts commands as binary strings of variable length. The console has a very primitive autocomplete/autocorrect feature: as a new command is entered one character at a time, it will display the previously entered command that shares the <em>longest common prefix</em>. If multiple commands are tied, it displays the most recent one. If there is no previous command that shares a common prefix, it will display the most recent command.</p>\n\n<p>Given a sequence of commands entered into the console, for each command, determine the index of the command last displayed by the autocomplete as it was entered. Return 0 if there is none.</p>\n    </div>\n\n<div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <p>The function <code>autocomplete</code> has the following parameter(s):</p>\n        <ul>\n            <li><code>string command[n]</code>: an array of strings where command[i] denotes the (i+1)th entered command, 0 ≤ i < n</li>\n        </ul>\n    </div>\n\n<div class=\\\"output-format\\\">\n        <h3>Returns</h3>\n        <p><code>int</code>: an array of integers</p>\n    </div>\n\n<div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>2 ≤ n ≤ 10<sup>5</sup></li>\n            <li>1 ≤ |command[i]| ≤ 30 where (0 ≤ i < n)</li>\n        </ul>\n    </div>\n\n<div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <h4>Sample Case 1:</h4>\n            <pre class=\\\"input\\\">n = 6\ncommand = [\\'000\\', \\'1110\\', \\'01\\', \\'001\\', \\'110\\', \\'11\\']</pre>\n\n<pre class=\\\"output\\\">[0, 1, 1, 1, 2, 5]</pre>\n\n<div class=\\\"explanation\\\">\n                <p>Explanation:</p>\n                <ol>\n                    <li>\\'000\\' - 0 (No command has previously been entered)</li>\n                    <li>\\'1110\\'- 1 (There is no previous command that shares a common prefix, so the last command is shown)</li>\n                    <li>\\'01\\' - 1 (\\'000\\' shares the prefix \\'0\\' with the first command)</li>\n                    <li>\\'001\\' - 1 (\\'000\\' shares the prefix \\'00\\' with the first command)</li>\n                    <li>\\'110\\' - 2 (\\'110\\' shares the prefix \\'11\\' with the second command)</li>\n                    <li>\\'11\\' - 5 (\\'11\\' shares the prefix \\'11\\' with the fifth command most recently)</li>\n                </ol>\n            </div>\n        </div>\n\n<div class=\\\"example\\\">\n            <h4>Sample Case 2:</h4>\n            <pre class=\\\"input\\\">n = 3\ncommand = [\\'1\\', \\'10\\', \\'11010\\']</pre>\n\n<pre class=\\\"output\\\">[0, 1, 2]</pre>\n\n<div class=\\\"explanation\\\">\n                <ol>\n                    <li>\\'1\\' - 0 (No command has previously been entered)</li>\n                    <li>\\'10\\' - 1 (The most recent command shares the prefix \\'1\\')</li>\n                    <li>\\'11010\\' - 2 (The most recent command shares the prefix \\'1\\')</li>\n                </ol>\n            </div>\n        </div>\n    </div>\n\n<div class=\\\"function-signature\\\">\n        <h3>Function Signature</h3>\n        <pre class=\\\"code\\\">vector&lt;int&gt; autocomplete(vector&lt;string&gt; command)</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/16ZK8wykab0mXYiSLPWMsAG9YuEIxwSQtsuPt3jijcNw/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Oracle",
        "company_id": 20
    },
    {
        "id": 180,
        "title": " Find the Substring",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-header\\\">\n        <h1> Find the Substring</h1>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>Given s and x, determine the zero-based index of the first occurrence of x in s.</p>\n        \n        <ul>\n            <li>String s consists of lowercase letters in the range ascii[a-z].</li>\n            <li>String x consists of lowercase letters and may also contain a single wildcard character, *, that represents <em>any one character</em>.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"function-description\\\">\n        <h3>Function Description</h3>\n        <p>Complete the function <code>firstOccurrence</code> in the editor below. The function must return an integer denoting the zero-based index of the first occurrence of string x in s. If x is not in s, return -1 instead.</p>\n        \n        <h4>Parameters:</h4>\n        <ul>\n            <li><code>string s</code>: a string of lowercase letters</li>\n            <li><code>string x</code>: a string of lowercase letters which may contain 1 instance of the wildcard character *</li>\n        </ul>\n\n        <h4>Returns:</h4>\n        <p><code>int</code>: the index of the first occurrence, or -1 if x does not occur in s</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ length of s ≤ 10<sup>5</sup></li>\n            <li>1 ≤ length of x ≤ 1000</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        \n        <div class=\\\"example\\\">\n            <h4>Example 1:</h4>\n            <pre class=\\\"input\\\">s = \\\"xabcdey\\\"\nx = \\\"ab*de\\\"</pre>\n            <div class=\\\"explanation\\\">\n                <p>The first match is at index 1.</p>\n                <table class=\\\"example-table\\\">\n                    <tr>\n                        <th>s</th>\n                        <td>x</td>\n                        <td>a</td>\n                        <td>b</td>\n                        <td>c</td>\n                        <td>d</td>\n                        <td>e</td>\n                        <td>y</td>\n                    </tr>\n                    <tr>\n                        <th>x</th>\n                        <td></td>\n                        <td>a</td>\n                        <td>b</td>\n                        <td>*</td>\n                        <td>d</td>\n                        <td>e</td>\n                        <td></td>\n                    </tr>\n                    <tr>\n                        <th>Index</th>\n                        <td>0</td>\n                        <td>1</td>\n                        <td>2</td>\n                        <td>3</td>\n                        <td>4</td>\n                        <td>5</td>\n                        <td>6</td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n\n        <div class=\\\"example\\\">\n            <h4>Sample Case 0:</h4>\n            <pre class=\\\"input\\\">s = \\\"juliasamanthantjulia\\\"\nx = \\\"ant\\\"</pre>\n            <pre class=\\\"output\\\">8</pre>\n            <div class=\\\"explanation\\\">\n                <p>The string \\\"ant\\\" appears at index 8 in the string \\\"juliasamanthantjulia\\\".</p>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"code-template\\\">\n        <h3>Function Template</h3>\n        <pre class=\\\"code-block\\\"><code class=\\\"language-c\\\">int firstOccurrence(char* s, char* x) {\n    // Write your code here\n}</code></pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1SzZRBAS-uoYfaRNcTR3O7nYJFrlMcGqYFBR2tpvKYNY/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Oracle",
        "company_id": 20
    }
]