[
    {
        "id": 1211,
        "title": "Python: Library Management System",
        "problem_statement": "<h1>Python: Library Management System</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are the librarian of your university. You have decided to design a library management system. The description of the classes needed to implement the Library Management System is given below.</p>\r\n\r\n<h3>Class Definitions</h3>\r\n<pre><code class='language-text'>class Book:\r\n    data members:\r\n        book_id : int\r\n        book_name : string\r\n        book_subject : string\r\n\r\n    __init__(self, book_id, book_name, book_subject): Constructor\r\n\r\nclass Shelf:\r\n    data members:\r\n        shelf_books : list of Book\r\n    objects\r\n\r\n    __init__(self, shelf_books):\r\n    Constructor\r\n\r\n    method definition:\r\n        getBookCountByName(book_name):\r\n        return : integer\r\n        visibility : public\r\n\r\n        getBookNameOfMaximumCount():\r\n        return : string\r\n        visibility : public</code></pre>\r\n\r\n<h3>Class Book</h3>\r\n<ul>\r\n    <li>define all the variables according to the above specifications.</li>\r\n    <li>define a constructor with public visibility.</li>\r\n</ul>\r\n\r\n<h3>Class Shelf</h3>\r\n<ul>\r\n    <li>define all the variables according to the above specifications.</li>\r\n    <li>define a constructor with public visibility.</li>\r\n</ul>\r\n\r\n<h3>Implement below methods for Class Shelf:</h3>\r\n<ul>\r\n    <li><strong>-int getBookCountByName(self, book_name):</strong>\r\n        <ul>\r\n            <li>Write the code that returns the count of the number of books in the shelf_books list with book_name same as the method parameter book_name.</li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>-string getBookNameOfMaximumCount(self):</strong>\r\n        <ul>\r\n            <li>Write the code that returns the string as per the given conditions -</li>\r\n            <ol>\r\n                <li>Find the book with the maximum count in a shelf_books.</li>\r\n                <li>If there exists a single book with that maximum count then return book_name of that particular Book.</li>\r\n                <li>If there is more than one book with that maximum count then return \"overflow\".</li>\r\n                <li>If there is no book available on the shelf then return \"Empty\"</li>\r\n            </ol>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Sample Input 1</h3>\r\n<pre><code class='language-text'>book1 = Book(1, \"Book1\", \"subject1\")\r\nbook2 = Book(2, \"Book2\", \"subject2\")\r\nbook3 = Book(3, \"Book3\", \"subject1\")\r\nbook4 = Book(4, \"Book2\", \"subject2\")\r\nbook5 = Book(5, \"Book1\", \"subject1\")\r\nshelf = Shelf([book1, book2, book3, book4, book5])\r\nprint(shelf.getBookNameOfMaximumCount())</code></pre>\r\n<h3>Sample Output 1</h3>\r\n<pre><code class='language-text'>Book1</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<h3>NOTE:</h3>\r\n<ul>\r\n    <li>You can make suitable function calls and use the <strong>RUN CODE</strong> button to check your <strong>main()</strong> method output.</li>\r\n</ul>\r\n\r\n<p><strong>Execution time limit</strong></p>\r\n<p>10 seconds</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    },
    {
        "id": 1212,
        "title": "Telephone Book Contacts",
        "problem_statement": "<h1>Telephone Book Contacts</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Your task in this challenge is to complete the mentioned class implementation using the specifications provided. Consider default visibility of classes, data fields, and methods unless mentioned.</p>\r\n\r\n<h3>Specifications</h3>\r\n<h4>Class Definitions</h4>\r\n<pre><code class='language-javascript'>class TelephoneBook:\r\n    Data Members:\r\n        contacts: [] # List\r\n\r\n    Constructor\r\n    def __init__(self, contacts: list):\r\n        visibility: public\r\n\r\n    # method definitions\r\n    addContacts(self):\r\n        return: void\r\n        visibility: public\r\n    getContacts(self, startsWith: str):\r\n        return: int\r\n        visibility: public</code></pre>\r\n\r\n<h3>Complete the following tasks</h3>\r\n<p>Complete the following tasks for Class <strong>TelephoneBook</strong>:</p>\r\n<ul>\r\n    <li>define the data members as per the given specifications.\r\n        <ul>\r\n            <li>The contacts list is a list of student's contact details, where each contact detail is a list containing two elements: [name (str), mobileNumber (str)]</li>\r\n        </ul>\r\n    </li>\r\n    <li>define the constructor with public visibility.</li>\r\n</ul>\r\n\r\n<h3>Implement the below methods for Class TelephoneBook:</h3>\r\n<ul>\r\n    <li><strong>void addContacts(self):</strong>\r\n        <ul>\r\n            <li>Write Python code that creates a file named \"contacts.txt\" with the following data in it:\r\n                <ol>\r\n                    <li>The file should contain the data of all contact details where every new contact detail is on a new line.</li>\r\n                    <li>Individual contact detail of a student present on every line should be in this format - <code>name:mobileNumber</code></li>\r\n                </ol>\r\n            </li>\r\n        </ul>\r\n    </li>\r\n    <li><strong>list getContacts(self, startsWith: str):</strong>\r\n        <ul>\r\n            <li>Write Python code that reads the data in text file \"contacts.txt\" and returns the list of all student's contact data whose name's first character is equal to the function's parameter <code>startsWith</code>.</li>\r\n            <li>The contact data is the list of <code>name</code> and <code>mobileNumber</code> (Refer to the sample output 2 for the format).</li>\r\n            <li>Return an empty list if there is no contact detail starting with <code>startsWith</code>.</li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Sample Input 1</h3>\r\n<pre><code class='language-text'>contacts = [['John','7655'],\r\n            ['Jeffry','22937923'], ['Jack','2323']]\r\ntelephone = TelephoneBook(contacts)\r\ntelephone.addContacts()</code></pre>\r\n<h3>Result 1</h3>\r\n<p>This will create a file with the name \"contacts.txt\" given below -</p>\r\n<pre><code class='language-text'>John:7655\r\nJeffry:22937923\r\nJack:2323</code></pre>\r\n\r\n<h3>Sample Input 2</h3>\r\n<pre><code class='language-text'>contacts = [['John','7655'],\r\n            ['Jeffry','22937923'], ['Tack','2323']]\r\nr = TelephoneBook(contacts)\r\nr.addContacts()\r\nres = r.getContacts(\"T\")\r\nprint(res)</code></pre>\r\n<h3>Result 2</h3>\r\n<p>File with the name \"contacts.txt\" given below -</p>\r\n<pre><code class='language-text'>John:7655\r\nJeffry:22937923\r\nTack:2323</code></pre>\r\n<h3>Output 2</h3>\r\n<pre><code class='language-text'>[[\"Tack\", \"2323\"]]</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<p><strong>NOTE:</strong></p>\r\n<ul>\r\n    <li>You can make suitable function calls and use the RUN CODE button to check your main() method output.</li>\r\n</ul>\r\n<p>Execution time limit 10 seconds</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    },
    {
        "id": 1213,
        "title": "BIG Neighbors Circle",
        "problem_statement": "<h1>BIG Neighbors Circle</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a matrix of size n*m. Each matrix element is either 0 or 1. 1 denotes that there is a House and 0 denotes there is a Park. You have to determine the largest house group or one that has a maximum number of neighbors. The neighbour of the house at position (i,j) will be the house at positions (i, j+1), (i, j-1), (i-1, j), (i+1, j). For better understanding see Sample Testcase.</p>\r\n\r\n<h2>Input Format</h2>\r\n<ul>\r\n    <li>First-line contains an integer n denoting the number of rows.</li>\r\n    <li>The next line contains an integer m denoting the number of columns.</li>\r\n    <li>Next, n lines contain m space-separated matrix values i.e. either 0 and 1.</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &lt;= n,m &lt;= 2000</li>\r\n    <li>matrix[i][j] can be 0 or 1.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<ul>\r\n    <li>Print the biggest neighbour size.</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n5\r\n0 1 0 0 1\r\n1 0 1 0 0\r\n1 1 1 1 0\r\n0 0 0 1 1\r\nOutput:\r\n8</code></pre>\r\n<p><strong>Explanation:</strong> There are 3 groups:</p>\r\n<ul>\r\n    <li><code>[[0,1]]</code></li>\r\n    <li><code>[[1,0], [2,0], [2,1], [2,2], [1,2], [2,3], [3,3], [3,4]]</code></li>\r\n    <li><code>[[0,4]]</code></li>\r\n</ul>\r\n<p>The biggest group among these 3 are <code>[[1,0], [2,0], [2,1], [2,2], [1,2], [2,3], [3,3], [3,4]]</code>. Whose size is 8.</p>\r\n\r\n<h2>Starter Code (C++)</h2>\r\n<pre><code class='language-cpp'>int biggestNeighbourSize(vector&lt;vector&lt;int&gt;&gt; matrix) {\r\n    // Write your code here\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    },
    {
        "id": 1214,
        "title": "Maximum Material Protection",
        "problem_statement": "<h1>Maximum Material Protection</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Cynthia, a skilled architect, has been working on designing a new set of buildings for her city. She has distributed construction materials between several construction sites, each represented by a row of storage containers. The containers are arranged in a straight line, each containing a certain amount of building materials in kilograms.</p>\r\n<p>However, an unexpected storm has hit the city, and Cynthia must protect as many materials as possible from getting soaked in the rain.</p>\r\n<p>Some containers are initially covered with lids, and a lid can be moved to any container on its left, but cannot skip over containers. Each container can be covered by at most one lid, and each lid can be used exactly once.</p>\r\n<p>Your task is to calculate the maximum total kilograms of building materials Cynthia can save by strategically shifting the lids to the left (if beneficial) to cover the containers with the most materials.</p>\r\n\r\n<h2>Input Format</h2>\r\n<ul>\r\n    <li>The first line contains a single integer <code>n</code>, the number of containers.</li>\r\n    <li>The next <code>n</code> lines each contain an integer <code>a[i]</code>, where <code>a[i]</code> represents the kilograms of material in the i-th container.</li>\r\n    <li>The last line contains a binary string <code>s</code> of length <code>n</code>. If the i-th character is '1', it means the i-th container initially has a lid; if '0', it does not.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print a single integer, the maximum kilograms of building materials Cynthia can save from the storm.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= n <= 10^5</code></li>\r\n    <li><code>1 <= a[i] <= 10^4</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n10\r\n5\r\n8\r\n9\r\n6\r\n01110\r\nOutput:\r\n27</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Initially: lids on containers 2, 3, 4.</li>\r\n    <li>Use the priority queue to shift:</li>\r\n    <li>Move the lid from container 2 -> container 1 (since 10 > 5).</li>\r\n    <li>Final lid positions: containers 1, 3, 4.</li>\r\n    <li>Total saved = 10 + 8 + 9 = 27.</li>\r\n</ul>\r\n\r\n<pre><code class='language-javascript'>int save(vector<int> material, string ss) {\r\n    // Write your code here\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    },
    {
        "id": 1215,
        "title": "Maximum Material Protection",
        "problem_statement": "<h1>Maximum Material Protection</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Cynthia, a skilled architect, has been working on designing a new set of buildings for her city. She has distributed construction materials between several construction sites, each represented by a row of storage containers. The containers are arranged in a straight line, each containing a certain amount of building materials in kilograms.</p>\r\n<p>However, an unexpected storm has hit the city, and Cynthia must protect as many materials as possible from getting soaked in the rain.</p>\r\n<p>Some containers are initially covered with lids, and a lid can be moved to <strong>any container on its left</strong>, but cannot skip over containers. Each container can be covered by <strong>at most one</strong> lid, and <strong>each lid can be used exactly once</strong>.</p>\r\n<p>Your task is to calculate the <strong>maximum total kilograms of building materials</strong> Cynthia can save by strategically shifting the lids to the left (if beneficial) to cover the containers with the most materials.</p>\r\n\r\n<h2>Input Format</h2>\r\n<ul>\r\n    <li>The first line contains a single integer `n`, the number of containers.</li>\r\n    <li>The next `n` lines each contain an integer `a_i`, where `a_i` represents the kilograms of material in the `i`-th container.</li>\r\n    <li>The last line contains a binary string `s` of length `n`. If the `i`-th character is '1', it means the `i`-th container initially has a lid; if it is '0', it does not.</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print a single integer, the maximum kilograms of building materials Cynthia can save from the storm.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n10\r\n5\r\n8\r\n9\r\n6\r\n01110\r\nOutput:\r\n27</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<ul>\r\n    <li>Initially: lids on containers 2, 3, 4. (Materials: 5, 8, 9)</li>\r\n    <li>Use a priority queue to shift:</li>\r\n    <li>Move the lid from container 2 &rarr; container 1 (since 10 > 5).</li>\r\n    <li>Final lid positions: containers 1, 3, 4.</li>\r\n    <li>Total saved = 10 + 8 + 9 = 27.</li>\r\n</ul>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`1 <= n <= 10^5`</li>\r\n    <li>`1 <= a_i <= 10^4`</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    },
    {
        "id": 1216,
        "title": "Restaurant Management System",
        "problem_statement": "<h1>Restaurant Management System</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are required to implement two classes, <code>Ingredient</code> and <code>Dish</code>, as per the specifications below.</p>\r\n\r\n<h3>Class Definitions</h3>\r\n\r\n<h4>Class Ingredient</h4>\r\n<p><strong>Data Members:</strong></p>\r\n<ul>\r\n    <li><code>name</code> (type: string): The name of the ingredient.</li>\r\n    <li><code>quantity</code> (type: int): The quantity of the ingredient.</li>\r\n</ul>\r\n<p><strong>Constructor:</strong></p>\r\n<pre><code class='language-python'>__init__(self, name: str, quantity: int)</code></pre>\r\n<p>Constructor that initializes the name and quantity data members. This constructor should be publicly accessible.</p>\r\n\r\n<h4>Class Dish</h4>\r\n<p><strong>Data Members:</strong></p>\r\n<ul>\r\n    <li><code>ingredients</code> (type: List[Ingredient]): A list of <code>Ingredient</code> objects representing the ingredients used in the dish.</li>\r\n</ul>\r\n<p><strong>Constructor:</strong></p>\r\n<pre><code class='language-python'>__init__(self, ingredients: List[Ingredient])</code></pre>\r\n<p>Constructor that initializes the ingredients data member. This constructor should be publicly accessible.</p>\r\n\r\n<h3>Methods of Class Dish:</h3>\r\n\r\n<h4>Method <code>chef</code></h4>\r\n<pre><code class='language-python'>chef(self, ingredientList: List[Ingredient]) -> int</code></pre>\r\n<p>This method takes a list of <code>Ingredient</code> objects, <code>ingredientList</code>, and returns an integer based on the following conditions:</p>\r\n<ol>\r\n    <li>If all elements in the <code>ingredientList</code> have a quantity value less than or equal to the quantity value of the corresponding ingredient with the same name in the ingredients list of the Dish, return 1.</li>\r\n    <li>If any element in the <code>ingredientList</code> has a quantity value greater than the quantity value of the corresponding ingredient with the same name in the Dish's ingredients list, return -1.</li>\r\n    <li>If any element in the <code>ingredientList</code> is not present in the Dish's ingredients list, return -2.</li>\r\n</ol>\r\n<p><strong>Note:</strong> Ingredients are matched based on their name (Case Sensitive).</p>\r\n\r\n<h4>Method <code>getWeight</code></h4>\r\n<pre><code class='language-python'>getWeight(self) -> int</code></pre>\r\n<p>This method calculates and returns the sum of the quantity of all ingredients present in the ingredients list of the Dish.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-python'>ingredient1 = Ingredient(\"Tomato1\", 30)\r\ningredient2 = Ingredient(\"Tomato2\", 40)\r\ningredient3 = Ingredient(\"Tomato3\", 50)\r\ningredient4 = Ingredient(\"Tomato4\", 60)\r\n\r\ndish = Dish([ingredient1, ingredient2, ingredient3, ingredient4])\r\n\r\ningredient5 = Ingredient(\"Tomato1\", 30)\r\ningredient6 = Ingredient(\"Tomato2\", 40)\r\ningredient7 = Ingredient(\"Tomato3\", 50)\r\ningredient8 = Ingredient(\"Tomato4\", 60)\r\n\r\nx = dish.chef([ingredient5, ingredient6, ingredient7, ingredient8])\r\nprint(x)</code></pre>\r\n<p><strong>Output:</strong></p>\r\n<pre><code class='language-text'>1</code></pre>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-python'>ingredient1 = Ingredient(\"Tomato1\", 30)\r\ningredient2 = Ingredient(\"Tomato2\", 40)\r\ningredient3 = Ingredient(\"Tomato3\", 50)\r\ningredient4 = Ingredient(\"Tomato4\", 60)\r\n\r\ndish = Dish([ingredient1, ingredient2, ingredient3, ingredient4])\r\n\r\nx = dish.getWeight()\r\nprint(x)</code></pre>\r\n<p><strong>Output:</strong></p>\r\n<pre><code class='language-text'>180</code></pre>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>The names of the ingredients will be unique in the given <code>ingredientList</code>.</li>\r\n    <li>Execution time limit: 10 seconds.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "LeadSquared_8aug",
        "company_id": 411
    }
]