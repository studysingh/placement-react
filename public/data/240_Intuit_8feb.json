[
    {
        "id": 755,
        "title": "Buy Concert Tickets - II",
        "problem_statement": "<h1>Buy Concert Tickets - II</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Louie wants to buy <code>m</code> tickets for the upcoming concert of a favorite rock band. Each day ticket prices change. The cost of buying <code>T</code> tickets on an <code>n</code>th day is calculated by the following equation: <code>Cost = k * n * T^2</code> - where <code>k</code> is some constant, <code>n</code> (initially <code>n = 0</code>) - number of days that have passed, and <code>T</code> is the number of tickets Louie will buy on an <code>n</code>th day. Day numbering starts from 0.</p>\r\n<p>You are given two integers <code>m</code> - the total amount of tickets Louie wants to buy and <code>k</code> - constant for the equation. Help Louie determine the minimum cost of purchasing <code>m</code> tickets.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of input contains an integer <code>m</code>, representing the total amount of tickets Louie wants to buy.</p>\r\n<p>The second line of input contains an integer <code>k</code>, representing the constant for the equation.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print the minimum cost of purchasing <code>m</code> tickets.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>0 &le; m &le; 10<sup>6</sup></code></li>\r\n    <li><code>1 &le; k &le; 10<sup>4</sup></code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n2\r\nOutput:\r\n21</code></pre>\r\n<p><strong>Explanation:</strong> The optimal solution is to buy three tickets on the starting day, two tickets after one day has passed, and one ticket after two days have passed.</p>\r\n<ul>\r\n    <li><code>2^0 * 3^2 = 1 * 9 = 9</code> dollars for the first 3 tickets</li>\r\n    <li><code>2^1 * 2^2 = 2 * 4 = 8</code> dollars for the 4th and 5th tickets</li>\r\n    <li><code>2^2 * 1^2 = 2 * 2 = 4</code> dollars for the last ticket.</li>\r\n</ul>\r\n<p>The six tickets will cost Louie 21 dollars.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n400\r\n1000\r\nOutput:\r\n160000</code></pre>\r\n<p><strong>Explanation:</strong> Louie should buy all tickets on the starting day as K is too large to be worthwhile.</p>\r\n\r\n<h2>Code Snippet</h2>\r\n<pre><code class='language-javascript'>/*\r\n * Complete the 'solve' function below.\r\n *\r\n * The function is expected to return a value of type long.\r\n * The function accepts following parameters:\r\n *  1. m is of type int.\r\n *  2. k is of type int.\r\n */\r\n\r\nlong solve(int m, int k) {\r\n    // Write your code here\r\n    return;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_8feb",
        "company_id": 240
    },
    {
        "id": 757,
        "title": "Rearrange String",
        "problem_statement": "<h1>Rearrange String</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You have a string S. Your task is to rearrange some characters of the string (if needed) so that <code>S[i]</code> is not equal to <code>S[L - i - 1]</code> for each <code>0 <= i < (L - 1) / 2</code>, where <code>L</code> is the length of <code>S</code>. If multiple rearrangements exist, return the one that comes earliest alphabetically. If there is no answer, print 'impossible.'</p>\r\n\r\n<p><strong>Input:</strong></p>\r\n<p>The input contains the string S.</p>\r\n\r\n<p><strong>Output:</strong></p>\r\n<p>Print 'impossible' if there is no answer. Otherwise, print a lexicographical first string that satisfies the given requirements.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: abca\r\nOutput: aabc</code></pre>\r\n<p><strong>Explanation:</strong> We need to move the second 'a' at the beginning of the string so that <code>S[0] != S[3]</code>, <code>S[1] != S[2]</code>, and 'aabc' are the alphabetically smallest string among all valid answers.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: abaa\r\nOutput: impossible</code></pre>\r\n<p><strong>Explanation:</strong> There is no way to rearrange the characters of the given string in the required manner.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 <= L <= 10^4</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_8feb",
        "company_id": 240
    },
    {
        "id": 758,
        "title": "Bit Sorting",
        "problem_statement": "<h1>Bit Sorting</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an array of integers. Sort the array in descending order according to the number of set bits in their respective binary representations of the array elements. In binary representation of a number, a set bit is 1, and a clear bit is 0.</p>\r\n<p><strong>Note:</strong> For integers having the same number of set bits in their binary representation, sort according to their position in the original array i.e. a stable sort.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of input contains an integer n, representing the size of the array.</p>\r\n<p>The second line of input contains n space-separated array elements.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print the sorted array on a single line. Numbers should be separated by space.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>0 &le; n &le; 1000</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n5 2 3\r\nOutput:\r\n5 3 2</code></pre>\r\n<p><strong>Explanation:</strong> 2 has only one bit and is last, while the other two have two each. Among them, 5 occurred earlier than 3 and will be earlier in the result.</p>\r\n<p>Binary representations:</p>\r\n<pre><code class='language-text'>5: 101\r\n3: 11\r\n2: 10</code></pre>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n3 1 5\r\nOutput:\r\n3 5 1</code></pre>\r\n<p><strong>Explanation:</strong> 1 has only one bit and is last, while the other two have two each. Among them, 3 occurred earlier than 5 and will be earlier in the result.</p>\r\n<p>Binary representations:</p>\r\n<pre><code class='language-text'>3: 11\r\n5: 101\r\n1: 1</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_8feb",
        "company_id": 240
    },
    {
        "id": 759,
        "title": "Louie and Pairs",
        "problem_statement": "<h1>Louie and Pairs</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Louie wants to determine the number of ordered pairs (x, y) such that 1 &le; x &le; bound_x and 1 &le; y &le; bound_y, and the following equation has an integer value: (&radic;x + &radic;y)<sup>2</sup>.</p>\r\n<p><strong>Note:</strong> pairs (1, 2) and (2, 1) are different, so they should be considered twice in the final answer.</p>\r\n\r\n<h3>Input</h3>\r\n<p>The first line of input contains an integer <strong>bound_x</strong>.</p>\r\n<p>The second line of input contains an integer <strong>bound_y</strong>.</p>\r\n\r\n<h3>Output</h3>\r\n<p>The number of ordered pairs (x, y) such that the following equation - (&radic;x + &radic;y)<sup>2</sup> - has an integer value.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>1 &le; bound_x, bound_y &le; 7 * 10<sup>5</sup></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n5\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong> Two pairs give an integer value when inserted in the equation:</p>\r\n<ul>\r\n    <li>(&radic;1 + &radic;1)<sup>2</sup> = &radic;1<sup>2</sup> + 2*&radic;1*&radic;1 + &radic;1<sup>2</sup> = 1 + 2 + 1 = 4</li>\r\n    <li>(&radic;1 + &radic;4)<sup>2</sup> = &radic;1<sup>2</sup> + 2*&radic;1*&radic;4 + &radic;4<sup>2</sup> = 1 + 4 + 4 = 9</li>\r\n</ul>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n2\r\nOutput:\r\n2</code></pre>\r\n<p><strong>Explanation:</strong> There are two pairs out of four possible combinations that give an integer value when inserted into the equation:</p>\r\n<ul>\r\n    <li>(&radic;1 + &radic;1)<sup>2</sup> = &radic;1<sup>2</sup> + 2*&radic;1*&radic;1 + &radic;1<sup>2</sup> = 1 + 2 + 1 = 4</li>\r\n    <li>(&radic;2 + &radic;2)<sup>2</sup> = &radic;2<sup>2</sup> + 2*&radic;2*&radic;2 + &radic;2<sup>2</sup> = 2 + 4 + 2 = 8</li>\r\n</ul>\r\n<p>While pairs (1, 2) and (2, 1) do not:</p>\r\n<ul>\r\n    <li>(&radic;1 + &radic;2)<sup>2</sup> = &radic;1<sup>2</sup> + 2*&radic;1*&radic;2 + &radic;2<sup>2</sup> = 1 + 2*&radic;2 + 2 = 3 + 2*&radic;2 -> is not an integer.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_8feb",
        "company_id": 240
    }
]