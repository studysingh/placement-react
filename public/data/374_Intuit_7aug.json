[
    {
        "id": 1126,
        "title": "AND Product of Subsequences",
        "problem_statement": "<h1>AND Product of Subsequences</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given an array of <code>N</code> integers and your task is to calculate the sum of AND-Products of all possible two-element subsequences of the array.</p>\r\n<p>A subsequence is defined as a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.</p>\r\n<p>For each subsequence, you need to compute the AND-Product, which is the result of performing a bitwise AND operation on both elements within that subsequence. Once the AND-Products of all possible subsequences are calculated, you should sum them up to get the final result.</p>\r\n<p>Please refer to the examples for understanding of the problem.</p>\r\n<p>Your solution should implement the following function signature:</p>\r\n<pre><code class='language-cpp'>long solve(vector&lt;int&gt; arr) {\r\n    // Write your code here\r\n    return 0; // Placeholder\r\n}</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: arr = [1,2,3]\r\nOutput: 9</code></pre>\r\n<p><strong>Explanation:</strong> The answer is calculated as a summation of six subsequences as follows:</p>\r\n<p><code>AND-Product(1,1) + AND-Product(1,2) + AND-Product(1,3) + AND-Product(2,2) + AND-Product(2,3) + AND-Product(3,3)</code></p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: arr = [1,4]\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong> The answer is calculated as a summation of three subsequences as follows:</p>\r\n<p><code>AND-Product(1,1) + AND-Product(1,4) + AND-Product(4,4)</code></p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; N &le; 10<sup>5</sup></code></li>\r\n    <li><code>1 &le; arr<sub>i</sub> &le; 10<sup>6</sup></code></li>\r\n</ul>\r\n\r\n<h2>Follow-up</h2>\r\n<p>There are some large test cases and so you will need an optimal solution.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_7aug",
        "company_id": 374
    },
    {
        "id": 1127,
        "title": "Integers greater than a threshold",
        "problem_statement": "<h1>Integers greater than a threshold</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a collection of words. You need to find the words that represent valid and unique integers that are greater than the specified 'greaterThan' threshold and return their count.</p>\r\n\r\n<p>The following words in the collection should be considered while calculating the output:</p>\r\n<ul>\r\n    <li>Word representation of integers from 0 to 9. For example, three, seven, etc.</li>\r\n    <li>Any integers from 0 to 1000, represented as figures. For example, 1, 100, etc.</li>\r\n</ul>\r\n\r\n<p>The following words in the collection should not be considered while calculating the output:</p>\r\n<ul>\r\n    <li>Words that do not represent an integer. For example, test, word, etc.</li>\r\n    <li>Empty or null strings.</li>\r\n</ul>\r\n\r\n<p><strong>Input:</strong></p>\r\n<p>The first line of input contains an integer that represents the number of words in the collection.</p>\r\n<p>The second line of input contains a comma-separated array of strings that represent the words.</p>\r\n<p>The third line of input contains an integer that represents the threshold.</p>\r\n\r\n<p><strong>Output:</strong></p>\r\n<p>Print the number of unique integers that are greater than the given threshold.</p>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: 5\r\n1,2,3,three,test\r\n2\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> Because \"1,2,3,three,test\" represents the collection of words. When converted to integers, it becomes \"1,2,3,3\". 3 is the only integer greater than the given threshold 2. Hence the output is 1.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: 5\r\n1,2,tree,3\r\n2\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> Because \"1,2,3,three,test\" represents the collection of words. When converted to integers, it becomes \"1,2,3,3\". 3 is the only integer greater than the threshold 2. Hence the output is 1.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_7aug",
        "company_id": 374
    },
    {
        "id": 1128,
        "title": "Crack Password",
        "problem_statement": "<h1>Crack Password</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You work for a security company and are testing a password-cracking algorithm. You are given a string S of digits. Each password must be a maximum length palindrome, such that it is a substring of the given string and the digits in the palindromic password are in non-decreasing order (a palindrome is a word, phrase, or sequence that reads the same backward as forward, e.g., madam or nun).</p>\r\n<p>You need to determine how many passwords meet these requirements and find all of them.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of input contains <code>n</code>, representing the length of the input string.</p>\r\n<p>The second line of input contains the string <code>S</code>.</p>\r\n\r\n<h2>Output</h2>\r\n<p>The output should be a single line containing space-separated elements:</p>\r\n<ul>\r\n    <li>the first element represents the number of possible passwords, <code>k</code></li>\r\n    <li>the next element(s) are the possible passwords in ascending order</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n8\r\n12234566\r\nOutput:\r\n2 22 66</code></pre>\r\n<p><strong>Explanation:</strong> There are two possible passwords - 22 and 66, which both satisfy the given conditions.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n1\r\n0\r\nOutput:\r\n1 0</code></pre>\r\n<p><strong>Explanation:</strong> There is only one possible password, 0, which satisfies the given conditions.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; n &le; 10<sup>5</sup></code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_7aug",
        "company_id": 374
    },
    {
        "id": 1130,
        "title": "One-hot Encoding",
        "problem_statement": "<h1>One-hot Encoding</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A data set consists of a table with one column containing string values. Your goal is to perform a so-called 'one-hot encoding' of this column, where the categorical string values are decoded into the following numerical form: for every unique value in the original column, the newly created column has values of 1 and 0 otherwise (see examples below).</p>\r\n<p><strong>Input:</strong></p>\r\n<p>The first line of input contains an integer N, representing the number of rows.</p>\r\n<p>The second line of input contains an integer M, representing the number of columns.</p>\r\n<p>The next N lines of input contain M comma-separated strings.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n2\r\n0,Bolivia\r\n1,Bolivia\r\n2,Bolivia\r\n3,Germany\r\nOutput:\r\n0,1,0\r\n1,1,0\r\n2,1,0\r\n3,0,1</code></pre>\r\n<p><strong>Explanation:</strong> We have two unique values - Bolivia and Germany so there will be two new columns: 'is_it_Bolivia' and 'is_it_Germany'. They are sorted in this order because B is before G. The first three rows have Bolivia value, so there is 1 in the first column and 0 in the second one. The last row has a different value Germany, so there is 0 in the first column and 1 in the last.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n4\r\n2\r\n0,34B334\r\n1,FF8000\r\n2,C59899\r\n3,C59899\r\nOutput:\r\n0,1,0,0\r\n1,0,1,0\r\n2,0,0,1\r\n3,0,0,1</code></pre>\r\n<p><strong>Explanation:</strong> This time we have three unique values starting with an S number and three unique values in total. If we alphabetically, we get</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Intuit_7aug",
        "company_id": 374
    }
]