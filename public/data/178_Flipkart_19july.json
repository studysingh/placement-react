[
    {
        "id": 541,
        "title": "Total Area Covered by Rectangles",
        "problem_statement": "<h1>Total Area Covered by Rectangles</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Consider a graph paper which has N rectangles drawn on it. Co-ordinates of each rectangle's bottom left corner (x1, y1) and top right corner (x2, y2) are given. Write a program to find the total area A covered on the graph paper by all the rectangles together.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the standard output and test cases will fail.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>First line of input contains <strong>N</strong>.</p>\r\n<p>Next <strong>N</strong> lines of input contain x1, y1, x2, y2 respectively, each separated by a single white space.</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>The output contains total area A covered by all the rectangles.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n2\r\n0 0 20 10\r\n10 4 14 8\r\nOutput:\r\n200</code></pre>\r\n<p><strong>Explanation:</strong> There are 2 rectangles drawn on the graph paper. First rectangle is drawn with red color and second rectangle is drawn with black colour. Area covered by first rectangle is 20 * 10 = 200. Since the second rectangle is inside of the first rectangle, its area can be neglected as the same is already covered by first rectangle. So total area covered by the rectangles together is 200.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\n3\r\n0 6 20 16\r\n14 0 24 10\r\n1 1 6 6\r\nOutput:\r\n301</code></pre>\r\n<p><strong>Explanation:</strong> Area of rectangle drawn with black colour = 20 * 10 = 200.</p>\r\n<p>Area of rectangle drawn with red colour = 10 * 10 = 100.</p>\r\n<p>Area of rectangle drawn with blue colour = 5 * 5 = 25.</p>\r\n<p>Area overlapped by rectangles drawn with black and red = 6 * 4 = 24.</p>\r\n<p>Total area covered by all rectangles = 200 + 100 + 25 - 24 = 301. Hence output is 301.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li>1 &lt;= N &lt;= 1000</li>\r\n<li>0 &lt;= x1, y1, x2, y2 &lt;= 1000000</li>\r\n<li>x1 &lt; x2 and y1 &lt; y2</li>\r\n</ul>\r\n\r\n<h2>Starter Code</h2>\r\n<pre><code class='language-cpp'>#include &lt;bits/stdc++.h&gt;\r\nusing namespace std;\r\n\r\nclass rectangle\r\n{\r\npublic:\r\n    int x1, y1, x2, y2;\r\n    rectangle() {}\r\n    rectangle(int x1, int y1, int x2, int y2)\r\n    {\r\n        this->x1 = x1;\r\n        this->x2 = x2;\r\n        this->y1 = y1;\r\n        this->y2 = y2;\r\n    }\r\n};\r\n\r\nlong long int totalArea(int n, rectangle r[])\r\n{\r\n    long long int A = 0;\r\n    // WRITE YOUR CODE HERE\r\n    return A;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    cin >> n;\r\n    rectangle r[n];\r\n    for (int i = 0; i &lt; n; i++)\r\n    {\r\n        cin >> r[i].x1 >> r[i].y1 >> r[i].x2 >> r[i].y2;\r\n    }\r\n    cout &lt;&lt; totalArea(n, r) &lt;&lt; endl;\r\n    return 0;\r\n}</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Flipkart_19july",
        "company_id": 178
    },
    {
        "id": 561,
        "title": "Connected Flower Field",
        "problem_statement": "<h1>Connected Flower Field</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Bob is a florist who owns a field in the form of a grid of m x n cells. He has planted different types of flowers in the field, with one cell in the grid having a flower of one type only. One day he gets an order for a large flower bouquet, with the requirement that the bouquet can contain at most two types of flowers. Bob wants to finish the job as quickly as possible since he has a doctor's appointment, so he goes to the field and decides to pick flowers only from the largest connected area where he can move easily between adjacent cells i.e. cells sharing a side. However he is not sure how to choose such an area.</p>\r\n<p>Write a program to help Bob find the largest connected area which has only one or two types of flowers, and print the number of cells he can cover as the output.</p>\r\n<p>Read the input from STDIN and print the output to STDOUT. Do not print arbitrary strings anywhere in the program, as these contribute to the standard output and test cases will fail.</p>\r\n<p><strong>Input Format:</strong></p>\r\n<p>First line has two integers <code>m</code> and <code>n</code>, which are the dimensions of the field.</p>\r\n<p>Next <code>m</code> lines have <code>n</code> integers each, separated by a single white space. Each unique integer represents a unique type of flower.</p>\r\n<p><strong>Output Format:</strong></p>\r\n<p>Single line of output should have the number of cells Bob can pick the flowers from.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n<li>1 <= m <= 300</li>\r\n<li>1 <= n <= 300</li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: 3 3\r\n1 1 3\r\n1 1 1\r\n2 2 1\r\nOutput: 8</code></pre>\r\n<p><strong>Explanation:</strong> The grid is 3x3 and there are 3 types of flowers (1,2,3) as shown below.</p>\r\n<pre><code class='language-text'>1 1 3\r\n1 1 1\r\n2 2 1</code></pre>\r\n<p>Flowers of type 1 and 2 are the majority, and are planted at connected locations. Maximum number of cells that can be covered with two flower types is 8, as shown by the colored cells.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: 3 4\r\n18 18 3 18\r\n44 18 18 53\r\n18 2 4 81\r\nOutput: 6</code></pre>\r\n<p><strong>Explanation:</strong> The grid is 3x4 and there are 7 types of flowers (2, 3, 4, 18, 44, 53, 81).</p>\r\n<p>As highlighted below there are multiple ways to select the largest field with at most two flowers. While there is another cell with flower 18, it cannot be selected since it is not connected to the larger area by a side.</p>\r\n<pre><code class='language-text'>18 18 3 18\r\n44 18 18 53\r\n18 2 4 81</code></pre>\r\n<p>Maximum number of cells that are covered therefore is 6.</p>\r\n\r\n<pre><code class='language-javascript'>#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint numberOFflowers(int M, int N, vector<vector<int>> A) {\r\n    // WRITE YOUR CODE HERE\r\n    return res;\r\n}\r\n\r\nint main() {\r\n    int M, N;\r\n    cin >> M >> N;\r\n    vector<vector<int>> A(M, vector<int>(N));\r\n    for (int i = 0; i < M; i++) {\r\n        for (int j = 0; j < N; j++) {\r\n            cin >> A[i][j];\r\n        }\r\n    }\r\n    cout << numberOFflowers(M, N, A) << endl;\r\n    return 0;\r\n}\r\n</code></pre>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Flipkart_19july",
        "company_id": 178
    }
]