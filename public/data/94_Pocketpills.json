[
    {
        "id": 405,
        "title": "Newspaper Text Alignment",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"problem-description\\\">\n        <h1>Newspaper Text Alignment</h1>\n        <p>\n            You are moderating a newspaper page, and you have to align the text on the page properly. The text is provided to you in the following format:\n        </p>\n        <ul>\n            <li>\n                <code>paragraphs</code> is an array of paragraphs, where each paragraph is represented as an array of words.\n            </li>\n            <li>\n                <code>aligns</code> is an array representing the alignment of each paragraph from <code>paragraphs</code> - each element is either <code>\\\"LEFT\\\"</code> or <code>\\\"RIGHT\\\"</code>.\n            </li>\n            <li>\n                <code>width</code> represents the maximum number of characters each line of the output can include.\n            </li>\n        </ul>\n        <p>\n            Your task is to produce a newspaper page according to the following specifications:\n        </p>\n        <ul>\n            <li>\n                For each paragraph <code>paragraphs[i]</code>, include all the words <code>paragraphs[i][j]</code> in order, separated by spaces.\n            </li>\n            <li>\n                Include as many words as possible per each page line (the length of the line must be less than or equal to <code>width</code>), and put the next word on a new line if it would exceed the limit.\n            </li>\n            <li>\n                In the case of excess whitespace, words from <code>paragraphs[i]</code> should be aligned according to <code>aligns[i]</code> - \n                if <code>aligns[i] = \\\"LEFT\\\"</code>, the line should have trailing spaces; if <code>aligns[i] = \\\"RIGHT\\\"</code>, it should have leading spaces.\n            </li>\n            <li>\n                Include a border of <code>*</code> characters around all the edges of the result - these characters don\\'t count toward the width, they are just added to make output more pretty.\n            </li>\n        </ul>\n        <p>\n            It is guaranteed that it is possible to justify the given paragraphs to the newspaper. Return the resulting newspaper page as an array of strings.\n        </p>\n        <p>\n            <em>Note:</em> You are not expected to provide the most optimal solution, but a solution with time complexity not worse than <code>O(paragraph.length * paragraph[0].length * width)</code> will fit within the execution time limit.\n        </p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li><code>paragraphs</code>: An array of arrays of strings representing text for the newspaper page.</li>\n            <li><code>aligns</code>: An array of strings representing the alignment of each paragraph (<code>\\\"LEFT\\\"</code> or <code>\\\"RIGHT\\\"</code>).</li>\n            <li><code>width</code>: An integer representing the width of the newspaper page.</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>\n            Return the resulting newspaper page as an array of strings, in which the <code>i<sup>th</sup></code> string represents the <code>i<sup>th</sup></code> line of the newspaper page.\n        </p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li><code>1 ≤ paragraphs.length ≤ 50</code></li>\n            <li><code>1 ≤ paragraphs[i].length ≤ 10</code></li>\n            <li><code>1 ≤ paragraphs[i][j].length ≤ width</code></li>\n            <li><code>aligns.length = lines.length</code></li>\n            <li><code>5 ≤ width ≤ 100</code></li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Examples</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\nparagraphs = [[\\\"hello\\\", \\\"world\\\"], [\\\"How\\\", \\\"areYou\\\", \\\"doing\\\"], [\\\"Please look\\\", \\\"and align\\\", \\\"to right\\\"]],\naligns = [\\\"LEFT\\\", \\\"RIGHT\\\", \\\"RIGHT\\\"],\nwidth = 16</pre>\n            <pre class=\\\"output\\\">Output:\n****************\n*hello world   *\n*How areYou doing*\n*   Please look  *\n*   and align    *\n*   to right     *\n****************</pre>\n            <div class=\\\"explanation\\\">\n                <p>\n                    <strong>Explanation:</strong> Each paragraph is aligned according to the specified alignment:\n                </p>\n                <ul>\n                    <li>Paragraph 1 (<code>aligns[0] = \\\"LEFT\\\"</code>) adds trailing spaces to fit the width.</li>\n                    <li>Paragraph 2 (<code>aligns[1] = \\\"RIGHT\\\"</code>) has no excess spaces.</li>\n                    <li>Paragraph 3 (<code>aligns[2] = \\\"RIGHT\\\"</code>) breaks words into new lines and aligns them to the right.</li>\n                </ul>\n                <p>\n                    The border of <code>*</code> is added to the edges of the result.\n                </p>\n            </div>\n        </div>\n    </div>\n</div>\n",
        "google_doc_link": "https://docs.google.com/document/d/1oSDb3LGW953_8qBEvsOeDkXHrTWEe7D49ylthflsBmk/edit?usp=sharing",
        "solution_code": "",
        "company_name": "Pocketpills",
        "company_id": 94
    }
]