[
    {
        "id": 1016,
        "title": "Remove Groups for Strictly Ascending Data",
        "problem_statement": "<h1>Remove Groups for Strictly Ascending Data</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>A software company receives a request to update an application as per the latest requirements. The application contains data for N years identified as 0 to N-1. As per the latest requirements, the analyst working on the update must analyse the data which is in strictly ascending order. This means that no two numbers can be the same in the data. The application must remove the data of groups of consecutive years such that the data of remaining years will be in strictly ascending order. Only one group can be removed. The analyst must find the number of groups that could be removed to fulfil the received requirement.</p>\r\n<p>Write an algorithm to find the number of groups that could be removed to fulfil the received requirement.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of the input consists of an integer - <code>yearData_Size</code>, representing the number of years for which data displayed in the application (N).</p>\r\n<p>The second line consists of N space-separated integers representing the displayed data of years.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the number of groups that could be removed to fulfil the received requirement.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n9 7 5 4 12\r\nOutput:\r\n4</code></pre>\r\n<p><strong>Explanation:</strong> The data given for years is: 9,7,5,4,12</p>\r\n<p>If the data of 3 consecutive years [9,7,5] will be removed then the data of the remaining years [4,12] is in strictly ascending order.</p>\r\n<p>So, removal of the data in either of the following groups will fulfill the user's requirement: [9,7,5], [7,5,4], [9,7,5,4], [7,5,4,12]</p>\r\n<p>The number of groups is 4.</p>\r\n<p>So, the output is 4.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_12may",
        "company_id": 328
    },
    {
        "id": 1017,
        "title": "User Genre Grouping",
        "problem_statement": "<h1>User Genre Grouping</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>An online streaming company has picked the N users who most frequently watched a specific genre in a pre-defined sequence. Each user is given a unique ID from 0 to N-1. The sales team has stored the most frequently watched genre for each user in the system and must analyse the interest of users in groups so that each group has users with consecutive IDs. Each group must contain users from exactly K different genres. The system must store the count of all the possible groups.</p>\r\n<p>Write an algorithm to find the count of all possible groups for analysis.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of the input consists of an integer - <code>genreList_size</code>, representing the number of users selected (N).</p>\r\n<p>The next line consists of N space-separated integers - <code>genreList[0], genreList[1], ..., genreList[N-1]</code>, representing the most frequently watched genres for the users.</p>\r\n<p>The last line consists of an integer - <code>uniqueGenre</code>, representing the unique genres in a group for analysis (K).</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the count of all possible groups for analysis.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>0 < uniqueGenre <= genreList_size <= 10^4</code></li>\r\n    <li><code>0 <= genreList[0], genreList[1], ..., genreList[N-1] < 1000</code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n5\r\n2 5 2 4 7\r\n3\r\nOutput:\r\n3</code></pre>\r\n<p><strong>Explanation:</strong>\r\nThe unique genres in a group must be exactly 3.\r\nThe possible groups with exactly K=3 unique genres are:\r\n<br><code>[5,2,4]</code> (from indices 1 to 3, unique genres {5,2,4})\r\n<br><code>[2,4,7]</code> (from indices 2 to 4, unique genres {2,4,7})\r\n<br><code>[2,5,2,4]</code> (from indices 0 to 3, unique genres {2,5,4})\r\n<br>So, the output is 3.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_12may",
        "company_id": 328
    },
    {
        "id": 1018,
        "title": "Security Key for Data Packets",
        "problem_statement": "<h1>Security Key for Data Packets</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>While transmitting data, N packets are given a unique ID from 0 to N-1. A security key is calculated based on the size of the data packets using a protocol. In each step, the protocol chooses K consecutive data packets with the same data size and finds the square of K. Then the protocol removes those packets from the calculation for the next step. This process continues until there is no packet left for calculation. The security key is the sum of the squares for all steps which should be the maximum possible value.</p>\r\n<p>Write an algorithm to find the security key for the given N data packets.</p>\r\n\r\n<h2>Input</h2>\r\n<p>The first line of the input consists of an integer - <code>num</code>, representing the number of data packets (N).</p>\r\n<p>The second line consists of N space-separated integers - <code>dataSize<sub>0</sub>, dataSize<sub>1</sub>, ..., dataSize<sub>N-1</sub></code>, representing the size of the data packets.</p>\r\n\r\n<h2>Output</h2>\r\n<p>Print an integer representing the security key for the given N data packets.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &le; num &le; 10<sup>4</sup></code></li>\r\n    <li><code>1 &le; dataSize<sub>i</sub> &le; 10<sup>9</sup></code></li>\r\n</ul>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n9\r\n11 31 20 20 31 42 31 11\r\nOutput:\r\n23</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>The sizes of the data packets are: 11, 31, 20, 20, 31, 42, 31, 11</p>\r\n<p>To get the optimal output, data packets will be picked as follows:</p>\r\n<p>For the first step, the 3 consecutive packets with data size 20 will be chosen and the square of 3 is 9. The updated sequence of data is: 11, 31, 42, 31, 11.</p>\r\n<p>For the second step, the 1 packet with data size 42 will be chosen and the square of 1 is 1. The updated sequence of data is: 11, 31, 31, 11.</p>\r\n<p>For the third step, the 3 consecutive packets with data size 31 will be chosen and the square of 3 is 9. The updated sequence of data is: 11, 11.</p>\r\n<p>In the last step, the 2 consecutive packets with data size 11 will be chosen and the square of 2 is 4. No packets are left in the sequence.</p>\r\n<p>The security key is the sum of squares in every step as: 9+1+9+4=23</p>\r\n<p>So, the output is 23.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Morgan stanley_12may",
        "company_id": 328
    }
]