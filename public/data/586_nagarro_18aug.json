[
    {
        "id": 1680,
        "title": "Need for Speed",
        "problem_statement": "<h1>Need for Speed</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are in a racing competition with no rules. A trophy is awarded to the first person to reach the final position. There are numerous routes that run through various cities. Nitro boosters, sand pits, crash sites and cops may be found on some routes.</p>\r\n<p>It takes one hour to travel from one city to another. Nitro boosters will double your speed for the next two routes. Sand will reduce your speed by half for the next two routes. Crash sites are routes where crashes occur frequently, and it takes one hour to safely drive out of a crash site. If you come across a cop on any route, you are automatically arrested and will not be able to proceed further.</p>\r\n<p>You are given a number of cities N, an array representing the special powers associated with each city, the total number of routes R and a 2D array of R * 2 representing the possible routes that could be taken to travel between the cities.</p>\r\n<p>Your task is to find and return an integer array representing the path that can be taken to reach the (N-1)th city in the minimum time. If there are no possible paths, return -1.</p>\r\n<p><strong>Note:</strong></p>\r\n<ul>\r\n    <li>The calculations on speed for each city will be done on the current speed</li>\r\n    <li>Cities are named from 0 to N-1.</li>\r\n    <li>City 0 is always the starting city and City N-1 is always the destination.</li>\r\n</ul>\r\n\r\n<h3>Input Specification:</h3>\r\n<ul>\r\n    <li><strong>input1</strong>: An integer value N, representing the number of cities.</li>\r\n    <li><strong>input2</strong>: A string array representing the special powers associated with each city starting from 0 to N-1.</li>\r\n    <li><strong>input3</strong>: An integer value R, representing the number of routes.</li>\r\n    <li><strong>input4</strong>: A 2D integer array of size R * 2, representing the possible routes that could be taken to travel between the cities.</li>\r\n</ul>\r\n\r\n<h3>Output Specification:</h3>\r\n<p>Return an integer array representing the path that can be taken to reach the (N-1)th city in minimum time. If there are no possible paths, return -1.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>input1 : 5\r\ninput2 : [\"None\", \"Cop\", \"None\", \"None\", \"None\"]\r\ninput3 : 5\r\ninput4 : [[0,1],[0,2],[1,2],[2,3],[3,4]]\r\nOutput : [0,2,3,4]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>By using the path mentioned below, you can reach the (N-1)th city in the least possible time :</p>\r\n<ul>\r\n    <li>Initially you are in city 0 from where the possible routes to travel to other cities are (0,1) and (0,2). Since city 1 has a \"Cop\" you take the other route i.e., (0,2).\r\n        Current Path : 0 => 2</li>\r\n    <li>From city 2 you have 1 route (2,3) and since city 3 has no hurdles you move to city 3.\r\n        Current path : 0 => 2 => 3</li>\r\n    <li>From city 3 you have 1 route (3,4) and since city 4 has no hurdles you move to city 4.\r\n        Current path : 0 => 2 => 3 => 4.</li>\r\n</ul>\r\n<p>We can reach the (N-1)th city by using the above path. As the time required to travel from one city to another is 1 hour, the minimum time taken by following the above path is (1+1+1) = 3 hours. Hence <strong>[0,2,3,4]</strong> is returned as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>input1 : 7\r\ninput2 : [\"None\", \"Cop\", \"Sand\", \"None\", \"Nitro\", \"None\", \"None\"]\r\ninput3 : 8\r\ninput4 : [[0,1],[0,2],[1,2],[2,3],[2,4],[3,6],[4,5],[5,6]]\r\nOutput : [0,2,4,5,6]</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>By using the path mentioned below, you can reach the (N-1)th city in the minimum time</p>\r\n<ul>\r\n    <li>Initially you are in city 0 from where the possible routes to travel to other cities are (0,1) and (0,2). Since city 1 has a \"Cop\" we take the other route i.e., (0,2).\r\n        Current path : 0 => 2. Here, the total time taken will be 1 hour.</li>\r\n    <li>From city 2 you have 2 possible routes (2,3) and (2,4). If you move to city 3 the possible route is (3,6). As city 2 has sand, your speed will be halved, and the time required will be doubled for the next 2 routes. Hence, the total time taken will be (1 + 1*2 + 1*2) = 5 hours.</li>\r\n    <li>But if you move to city 4 from city 2 because there is nitro in city 4, the speed will be doubled, and the time required will be halved for the next 2 routes. Hence, the total time taken will be (1*2) = 2 hours. Since it will take less time to travel via city 4, the Current path is : 0 => 2 => 4</li>\r\n    <li>Now, from city 4 you have 1 possible route (4,5) and from city 5 you have 1 possible route (5,6). Since both routes have no hurdles, you can move from city 4 to city 5 and then to city 6.\r\n        Here, the total time taken will be (1*2*0.5 + 1*0.5) = 1.5 hours.\r\n        Current path : 0 => 2 => 4 => 5 => 6</li>\r\n</ul>\r\n<p>Hence, the total time taken will be (1 + 1*2*0.5 + 1*0.5) = 4.5 hours. Therefore, <strong>[0,2,4,5,6]</strong> is returned as the output.</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "nagarro_18aug",
        "company_id": 586
    },
    {
        "id": 1681,
        "title": "Surprise Debate",
        "problem_statement": "<h1>Surprise Debate</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Angela has N students in her class and has announced a surprise debate. An integer array A has the roll numbers of all N students. For the debate, the students will be grouped into pairs where the student that has smallest roll number will be paired with the student that has the largest roll number, the student that has the second smallest roll number will be paired with the student that has the second largest roll number and so on.</p>\r\n<p>A pair can debate if the sum of their roll numbers is divisible by an integer K. In case there is only one student left and twice his/her roll number is divisible by K, that student will debate with Angela.</p>\r\n<p>Your task is to find and return an integer value, representing the lowest roll number amongst all the possible divisible pairs. If only one student is left, then return that student's roll number. In case no student is chosen, return -1.</p>\r\n\r\n<h2>Input Specification</h2>\r\n<p><strong>input1:</strong> An integer value N, representing the number of students in the class.</p>\r\n<p><strong>input2:</strong> An integer array A, representing the roll numbers of the students.</p>\r\n<p><strong>input3:</strong> An integer value K, representing the value K to be used in the divisibility test.</p>\r\n\r\n<h2>Output Specification</h2>\r\n<p>Return an integer value, representing the lowest roll number amongst all possible divisible pairs. If only one student is left, then return that student's roll number. In case no student is chosen, return -1.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nInput1 : 5\r\nInput2 : {2,1,3,5,4}\r\nInput3 : 6\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> Here, we have 5 students in the class and their roll numbers are {2,1,3,5,4} and the value of K is 6. The pairs that can be formed are: (1, 5), (2, 4) and (3, Angela). The sum of each pair is divisible by 6 and the lowest roll number amongst all these pairs is 1. Hence 1 is returned as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input:\r\nInput1 : 3\r\nInput2 : {23,10,21}\r\nInput3 : 7\r\nOutput: 21</code></pre>\r\n<p><strong>Explanation:</strong> Here, we have 3 students in the class and their roll numbers are {23,10,21} and the value of K is 7. The sum of the smallest roll number 10 and the largest roll number 23 is 33, which is not divisible by 7. Twice the roll number 21, the number of the last remaining student, is 42, which is divisible by 7. Only one student, with the roll number 21, is chosen for the debate. Hence 21 is returned as the output.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>Assume 1-based index everywhere.</li>\r\n    <li>The roll numbers can be any positive integer.</li>\r\n    <li>The integer K is always a positive integer.</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "nagarro_18aug",
        "company_id": 586
    },
    {
        "id": 1682,
        "title": "Finding Commas",
        "problem_statement": "```html\r\n<h1>Finding Commas</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Liam works as a data analyst for a company that stores massive amounts of numerical data. He has been tasked with determining how many commas are used when writing numbers in the range of 1 to N (inclusive) in a specific format.</p>\r\n<p>In this format, if numbers are more than four digits long, commas are used to separate the numbers into groups of three, starting from the right for the representation of the number. Your task is to help Liam find and return an integer value representing the total number of commas used when writing all the integers in the range of 1 to N.</p>\r\n\r\n<p><strong>Input Specification:</strong></p>\r\n<p>An integer value N, representing the number range.</p>\r\n\r\n<p><strong>Output Specification:</strong></p>\r\n<p>Return an integer value representing total number of commas used when writing all the integers in the range of 1 to N.</p>\r\n\r\n<p>Here is the function signature you need to implement:</p>\r\n<pre><code class='language-javascript'>#include&lt;stdio.h&gt;\r\n#include&lt;string.h&gt;\r\n#include&lt;iostream&gt;\r\n\r\nusing namespace std;\r\n\r\n// Read only region start\r\nint findCommas(int input1)\r\n{\r\n  // write code here\r\n  throw \"Function findCommas(int input1) not implemented.\";\r\n}\r\n// Read only region end</code></pre>\r\n\r\n<h2>Examples</h2>\r\n\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: input1 = 1010\r\nOutput: 11</code></pre>\r\n<p><strong>Explanation:</strong> Here in this example, the integer value given is 1010. We can calculate the total number of commas in the following way:</p>\r\n<ul>\r\n    <li>While writing the numbers from 1 to 1010, the numbers from 1 to 999 will not contain any commas.</li>\r\n    <li>Each number from 1000 to 1010 contains a comma i.e., 1,000 1,001 1,002 1,003 1,004 1,005 1,006 1,007 1,008 1,009 1,010.</li>\r\n</ul>\r\n<p>Since 11 commas are used in all, 11 is returned as the output.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: input1 = 95\r\nOutput: 0</code></pre>\r\n<p><strong>Explanation:</strong> Here in this example, the integer value given is 95. We can calculate the total number of commas in the following way:</p>\r\n<ul>\r\n    <li>Since the integer given has less than 4 digits, we do not use any commas for writing the numbers from 1 to 95.</li>\r\n</ul>\r\n<p>Hence, 0 is returned as the output.</p>\r\n```",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "nagarro_18aug",
        "company_id": 586
    }
]