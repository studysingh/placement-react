[
    {
        "id": 1102,
        "title": "Count 'hello' Copies",
        "problem_statement": "<h1>Count 'hello' Copies</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>Anaya runs a small print shop that creates custom banners using letter tiles. One afternoon, a customer arrives with a bag full of random lowercase letter (a-z) and asks her to print the word \"hello\" multiple times. To fulfill the request, Anaya needs to figure out how many complete copies of \"hello\" she can form using the available tiles. With several pending orders, she could use your help to quickly find the answer.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>A single line containing a string S, consisting only of lowercase English letters (a-z).</p>\r\n\r\n<h2>Output Format</h2>\r\n<p>An integer representing the maximum number of times the word \"hello\" can be formed using the characters from the given string.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: helworld\r\nOutput: 1</code></pre>\r\n<p><strong>Explanation:</strong> From the string \"helworld\", one complete \"hello\" can be formed using 'h', 'e', 'l', 'l', 'o'.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: hbebhgtlellooffgf\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> From the string \"hbebhgtlellooffgf\", two complete \"hello\"s can be formed.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= |S| &lt;= 10^5</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Ibm_1aug",
        "company_id": 362
    },
    {
        "id": 1103,
        "title": "Garden Watering System",
        "problem_statement": "<h1>Garden Watering System</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In a large resort's botanical garden, there are N × N square plots, arranged neatly in rows and columns. Each plot starts with 0 liters of water.</p>\r\n<p>The gardener, Sourabh, uses two types of watering systems:</p>\r\n<ul>\r\n    <li>A horizontal sprinkler that waters an entire row of plots at once.</li>\r\n    <li>A vertical sprinkler that waters an entire column of plots at once.</li>\r\n</ul>\r\n<p>Each time he runs a sprinkler, it adds a certain amount of water to all plots in that row or column. After a series of watering actions, Sourabh wants to know the most watered plot in the garden — that is, the one with the highest amount of water.</p>\r\n<p>Your task is to help him figure out how much water that plot has.</p>\r\n\r\n<h2>Input Format</h2>\r\n<p>The first line contains two integers:</p>\r\n<ul>\r\n    <li>N — the number of rows and columns in the garden</li>\r\n    <li>Q — the number of watering actions</li>\r\n</ul>\r\n<p>The next Q lines each describe a watering action in one of the following formats:</p>\r\n<ul>\r\n    <li><code>WaterRow R X</code> — add X liters to every plot in row R</li>\r\n    <li><code>WaterColumn C X</code> — add X liters to every plot in column C</li>\r\n</ul>\r\n\r\n<h2>Output Format</h2>\r\n<p>Print a single integer — the maximum amount of water in any plot after all watering actions.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n3 4\r\nWaterRow 2 5\r\nWaterColumn 3 10\r\nWaterRow 2 1\r\nWaterColumn 1 7\r\nOutput:\r\n16</code></pre>\r\n<p><strong>Explanation:</strong>\r\nLet's trace the water amounts for each plot (row, column) after each action.\r\nInitial state: All plots have 0 water.\r\nN=3, so a 3x3 grid.\r\nQ=4 actions.\r\n\r\n1.  <code>WaterRow 2 5</code>: Adds 5 to all plots in row 2.\r\n    Plot (2,1): 5, Plot (2,2): 5, Plot (2,3): 5\r\n2.  <code>WaterColumn 3 10</code>: Adds 10 to all plots in column 3.\r\n    Plot (1,3): 10, Plot (2,3): 5+10=15, Plot (3,3): 10\r\n3.  <code>WaterRow 2 1</code>: Adds 1 to all plots in row 2.\r\n    Plot (2,1): 5+1=6, Plot (2,2): 5+1=6, Plot (2,3): 15+1=16\r\n4.  <code>WaterColumn 1 7</code>: Adds 7 to all plots in column 1.\r\n    Plot (1,1): 7, Plot (2,1): 6+7=13, Plot (3,1): 7\r\n\r\nAfter all actions, the water amounts are:\r\n(1,1): 7, (1,2): 0, (1,3): 10\r\n(2,1): 13, (2,2): 6, (2,3): 16\r\n(3,1): 7, (3,2): 0, (3,3): 10\r\n\r\nThe maximum amount of water in any plot is 16 (at plot (2,3)).</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li><code>1 &lt;= N &lt;= 314159</code></li>\r\n    <li><code>1 &lt;= Q &lt;= 314159</code></li>\r\n    <li><code>1 &lt;= X &lt;= 1000000</code></li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Ibm_1aug",
        "company_id": 362
    },
    {
        "id": 1104,
        "title": "Question 10",
        "problem_statement": "<h1>Question 10</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>You are given a row of <strong>buildings</strong>, all standing next to each other in a straight line. Each building has a <strong>width of 1 unit</strong> and a <strong>given height</strong>. You want to install a <strong>rectangular advertisement billboard</strong> that spans <strong>one or more consecutive buildings</strong>.</p>\r\n<p>However, the height of the billboard cannot exceed the <strong>shortest building</strong> in the range it covers. Your goal is to find the <strong>largest possible billboard (areawise)</strong> can be installed.</p>\r\n\r\n<p><strong>Input Format:</strong><br>\r\nThe first line contains an integer, represents number of buildings.<br>\r\nEach of the next n lines contains an integer building height.</p>\r\n\r\n<p><strong>Output Format:</strong><br>\r\nAn integer representing maximum area of the rectangle (billboard) that can fit between the buildings.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\n6\r\n2\r\n1\r\n5\r\n6\r\n2\r\n3\r\nOutput:\r\n10</code></pre>\r\n<p><strong>Explanation:</strong> The largest rectangle can be formed by the buildings of height 5 and 6 (width 2, height 5): 5 x 2 = 10</p>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Ibm_1aug",
        "company_id": 362
    }
]