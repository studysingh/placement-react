[
    {
        "id": 278,
        "title": "Product Delivery Tracking",
        "problem_statement": "<div class=\\\\\\\"problem-container\\\\\\\">\\n    <div class=\\\\\\\"problem-header\\\\\\\">\\n        <h2>Product Delivery Tracking</h2>\\n    </div>\\n\\n    <div class=\\\\\\\"problem-description\\\\\\\">\\n        <p>A company maintains records of products delivered to clients. Whenever the company fulfils the complete order of a client the orderID generated is the sum of the number of products delivered for every committed product type. The head of the sales team wants to find the client-specific data for the total number of products of any type delivered to each client.</p>\\n        \\n        <p>Write an algorithm for the head of the sales team to calculate the total number of products of any type delivered to the respective clients.</p>\\n    </div>\\n\\n    <div class=\\\\\\\"input-format\\\\\\\">\\n        <h3>Input Format</h3>\\n        <p>The first line of the input consists of an integer - <var>numOfClients</var>, representing the number of clients (N).</p>\\n        <p>The second line consists of N space-separated integers - <var>orderID<sub>0</sub></var>, <var>orderID<sub>1</sub></var>, ...., <var>orderID<sub>N-1</sub></var>, representing the orderIDs of the orders delivered to the clients.</p>\\n    </div>\\n\\n    <div class=\\\\\\\"output-format\\\\\\\">\\n        <h3>Output Format</h3>\\n        <p>Print N space-separated integers representing the client-specific data for the total number of products of any type delivered to each of the respective clients.</p>\\n    </div>\\n\\n    <div class=\\\\\\\"constraints\\\\\\\">\\n        <h3>Constraints</h3>\\n        <ul>\\n            <li>0 ≤ <var>numOfClients</var> ≤ 10<sup>6</sup></li>\\n            <li>0 ≤ <var>orderID<sub>i</sub></var> ≤ 10<sup>6</sup></li>\\n            <li>0 ≤ i < <var>numOfClients</var></li>\\n        </ul>\\n    </div>\\n\\n    <div class=\\\\\\\"examples\\\\\\\">\\n        <h3>Example</h3>\\n        <div class=\\\\\\\"example\\\\\\\">\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\n4\\n43 345 20 987</pre>\\n            <pre class=\\\\\\\"output\\\\\\\">Output:\\n7 12 2 24</pre>\\n            <div class=\\\\\\\"explanation\\\\\\\">\\n                <h4>Explanation:</h4>\\n                <ul>\\n                    <li>Client 0 ordered 2 types of products; thus, the total products delivered to it is 7.</li>\\n                    <li>Client 1 ordered 3 types of products; thus, the total products delivered to it is 12.</li>\\n                    <li>Client 2 ordered 2 types of products; thus, the total products delivered to it is 2.</li>\\n                    <li>Client 3 ordered 3 types of products; thus, the total products delivered to it is 24.</li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\\\\\"code-template\\\\\\\">\\n        <h3>Function Template</h3>\\n        <pre class=\\\\\\\"code-block cpp\\\\\\\">vector<int> prodDelivery(vector<int> orderIDs) {\\n    // Write your code here\\n}</pre>\\n    </div>\\n\\n    <div class=\\\\\\\"test-cases\\\\\\\">\\n        <h3>Test Case</h3>\\n        <div class=\\\\\\\"test-case\\\\\\\">\\n            <h4>Case 1:</h4>\\n            <pre class=\\\\\\\"input\\\\\\\">Input:\\n5\\n11 22 45 63 78</pre>\\n            <pre class=\\\\\\\"expected-output\\\\\\\">Expected Output:\\n2 4 9 9 15</pre>\\n        </div>\\n    </div>\\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1_c-y_Ee5BkDRAh5H4au_kLpwYJe22EpqTlK_8Sqctu4/edit?usp=sharing",
        "solution_code": "vector<int> prodDelivery(vector<int> orderIDs) {\\n    vector<int> sums;\\n    sums.reserve(orderIDs.size());\\n\\n    for(auto id : orderIDs){\\n        if(id == 0){\\n            sums.push_back(0);\\n            continue;\\n        }\\n        int s = 0;\\n        while(id > 0){\\n            s += id % 10;\\n            id /= 10;\\n        }\\n        sums.push_back(s);\\n    }\\n\\n    return sums;\\n}",
        "company_name": "Udaan ",
        "company_id": 77
    },
    {
        "id": 279,
        "title": "Band Performance Position Tracking",
        "problem_statement": "<div class=\\\"problem-container\\\">\n    <div class=\\\"environment-info\\\">\n        <p>The current selected programming language is <strong>C++14</strong>. We emphasize the submission of a fully working code over partially correct but efficient code. Once <strong>submitted</strong>, you cannot review this problem again. You can use <code>cout</code> to debug your code. The <code>cout</code> may not work in case of syntax/runtime error. The version of <strong>GCC</strong> being used is <strong>5.5.0</strong>.</p>\n    </div>\n\n    <div class=\\\"problem-header\\\">\n        <h2>Band Performance Position Tracking</h2>\n    </div>\n\n    <div class=\\\"problem-description\\\">\n        <p>There are N members in a marching band. Each member of the band has been assigned a value from 1 to N and they are arranged in ascending order of their assigned value. The band is participating in a competition in which they have to complete Q performances. After one particular performance, the two band members who were called out by the instructor had to swap positions with each other until all Q performances have been performed. Now the instructor wants to know the ID of the band member who is at the K<sup>th</sup> position after Q performances.</p>\n        \n        <p>Write an algorithm for the band instructor to find the ID of the band member who is at the K<sup>th</sup> position after Q performances.</p>\n    </div>\n\n    <div class=\\\"input-format\\\">\n        <h3>Input Format</h3>\n        <ul>\n            <li>The first line of the input consists of an integer - <var>totalMembers</var>, representing the total members of the band (N).</li>\n            <li>The second line consists of two space-separated integers - <var>SwapMembers_row</var> and <var>SwapMembers_col</var>, representing the number of performances (Q) and number of members called by the instructor after each performance (S), respectively.</li>\n            <li>The next Q lines consist of S space-separated integers - <var>SwapMembers</var>, where each line represents the positions of the members who were called by the instructor to swap their positions.</li>\n            <li>The last line consists of an integer - <var>posMember</var>, representing the position (K).</li>\n        </ul>\n    </div>\n\n    <div class=\\\"output-format\\\">\n        <h3>Output Format</h3>\n        <p>Print an integer representing the ID of the band member who is at the K<sup>th</sup> position after Q performances.</p>\n    </div>\n\n    <div class=\\\"constraints\\\">\n        <h3>Constraints</h3>\n        <ul>\n            <li>1 ≤ <var>posMember</var> ≤ <var>totalMembers</var> ≤ 10<sup>9</sup></li>\n            <li>1 ≤ <var>SwapMembers_row</var> ≤ 10<sup>5</sup></li>\n            <li>1 ≤ <var>SwapMembers</var> ≤ <var>totalMembers</var></li>\n            <li><var>SwapMembers_col</var> = 2</li>\n        </ul>\n    </div>\n\n    <div class=\\\"examples\\\">\n        <h3>Example</h3>\n        <div class=\\\"example\\\">\n            <pre class=\\\"input\\\">Input:\n10\n2 2\n1 5\n6 10\n1</pre>\n            <pre class=\\\"output\\\">Output:\n5</pre>\n            <div class=\\\"explanation\\\">\n                <h4>Explanation:</h4>\n                <ol>\n                    <li>Step1: After the 1st performance, the position of the band members is in the order: 5 4 3 2 1 6 7 8 9 10.</li>\n                    <li>Step2: After the 2nd performance, the position of the band members is in the order: 5 4 3 2 1 10 9 8 7 6.</li>\n                    <li>Step3: The ID of the band member at position 1 is 5.</li>\n                    <li>So the output is 5.</li>\n                </ol>\n            </div>\n        </div>\n    </div>\n\n    <div class=\\\"function-signature\\\">\n        <h3>Function Signature</h3>\n        <pre class=\\\"code-block cpp\\\">int bandMemberAtK(int totalMembers, vector<vector<int>> SwapMembers, int posMember) {\n    // Write your code here\n    int answer;\n    return answer;\n}</pre>\n    </div>\n</div>",
        "google_doc_link": "https://docs.google.com/document/d/1vGId3INSwulHBmnjwDjVCYQ9XCeCGcr-8CA8Ti5zpmY/edit?usp=sharing",
        "solution_code": "int bandMemberAtK(int totalMembers, const vector<vector<int>>& SwapMembers, int posMember) {\\n    unordered_map<int, int> posToID;\\n    \\n    for(const auto& swapPair : SwapMembers){\\n        int pos1 = swapPair[0];\\n        int pos2 = swapPair[1];\\n        \\n        int id1 = (posToID.find(pos1) != posToID.end()) ? posToID[pos1] : pos1;\\n        int id2 = (posToID.find(pos2) != posToID.end()) ? posToID[pos2] : pos2;\\n        \\n        posToID[pos1] = id2;\\n        posToID[pos2] = id1;\\n    }\\n    \\n    if(posToID.find(posMember) != posToID.end()){\\n        return posToID[posMember];\\n    }\\n    else{\\n        return posMember;\\n    }\\n}",
        "company_name": "Udaan ",
        "company_id": 77
    }
]