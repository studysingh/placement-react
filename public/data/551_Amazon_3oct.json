[
    {
        "id": 1565,
        "title": "Total Packing Efficiency",
        "problem_statement": "<h1>Total Packing Efficiency</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>In the Amazon distribution center, there is a collection of <code>n</code> products, each with a distinct volume. The challenge is to evaluate the \"packing efficiency\" of the collection, aiming for proper utilization of space.</p>\r\n<p>More specifically, there is an array <code>volumes</code>, where <code>volumes[i]</code> represents the volume of the <code>i</code><sup><code>th</code></sup> product.</p>\r\n<p>The \"packing efficiency\" of a subarray <code>B = [volumes[l], volumes[l+1], ..., volumes[r]]</code> is defined by the number of indices <code>i</code> that satisfy these conditions:</p>\r\n<ul>\r\n    <li><code>l &lt;= i &lt;= r</code> (meaning <code>i</code> is an index within the subarray <code>B</code>, from its start <code>l</code> to its end <code>r</code>)</li>\r\n    <li>For every index <code>j</code> such that <code>i &lt; j &lt;= r</code>, <code>volumes[i] &gt; volumes[j]</code></li>\r\n</ul>\r\n<p>The total packing efficiency of the entire collection is calculated by summing the packing efficiency across all subarrays of a given size <code>k</code>.</p>\r\n<p>Given an array <code>volumes</code> of size <code>n</code> and an integer <code>k</code>, compute the total packing efficiency of the collection.</p>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 6\r\nvolumes = [3, 6, 2, 9, 4, 1]\r\nk = 3\r\nOutput: 8</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>For <code>volumes = [3, 6, 2, 9, 4, 1]</code> and <code>k = 3</code>, we consider all subarrays of length 3:</p>\r\n<p>For <code>B = [3, 6, 2]</code> (global indices 0 to 2):</p>\r\n<ul>\r\n    <li>For <code>i = 0</code> (value <code>volumes[0]=3</code>): <code>3 &gt; volumes[1]=6</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 1</code> (value <code>volumes[1]=6</code>): <code>6 &gt; volumes[2]=2</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 2</code> (value <code>volumes[2]=2</code>): No <code>j</code> such that <code>2 &lt; j &lt;= 2</code>. Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[3, 6, 2]</code> is 2.</p>\r\n\r\n<p>For <code>B = [6, 2, 9]</code> (global indices 1 to 3):</p>\r\n<ul>\r\n    <li>For <code>i = 1</code> (value <code>volumes[1]=6</code>): <code>6 &gt; volumes[2]=2</code> is true, but <code>6 &gt; volumes[3]=9</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 2</code> (value <code>volumes[2]=2</code>): <code>2 &gt; volumes[3]=9</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 3</code> (value <code>volumes[3]=9</code>): No <code>j</code> such that <code>3 &lt; j &lt;= 3</code>. Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[6, 2, 9]</code> is 1.</p>\r\n\r\n<p>For <code>B = [2, 9, 4]</code> (global indices 2 to 4):</p>\r\n<ul>\r\n    <li>For <code>i = 2</code> (value <code>volumes[2]=2</code>): <code>2 &gt; volumes[3]=9</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 3</code> (value <code>volumes[3]=9</code>): <code>9 &gt; volumes[4]=4</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 4</code> (value <code>volumes[4]=4</code>): No <code>j</code> such that <code>4 &lt; j &lt;= 4</code>. Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[2, 9, 4]</code> is 2.</p>\r\n\r\n<p>For <code>B = [9, 4, 1]</code> (global indices 3 to 5):</p>\r\n<ul>\r\n    <li>For <code>i = 3</code> (value <code>volumes[3]=9</code>): <code>9 &gt; volumes[4]=4</code> is true, and <code>9 &gt; volumes[5]=1</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 4</code> (value <code>volumes[4]=4</code>): <code>4 &gt; volumes[5]=1</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 5</code> (value <code>volumes[5]=1</code>): No <code>j</code> such that <code>5 &lt; j &lt;= 5</code>. Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[9, 4, 1]</code> is 3.</p>\r\n<p>The total packing efficiency of the collection is 2 + 1 + 2 + 3 = 8.</p>\r\n\r\n<h3>Sample Case 0:</h3>\r\n<pre><code class='language-text'>Input:\r\nn = 4\r\nvolumes = [5, 2, 4, 3]\r\nk = 3\r\nOutput: 4</code></pre>\r\n<p><strong>Explanation:</strong></p>\r\n<p>For <code>volumes = [5, 2, 4, 3]</code> and <code>k = 3</code>, we consider all subarrays of length 3:</p>\r\n<p>For <code>B = [5, 2, 4]</code> (global indices 0 to 2):</p>\r\n<ul>\r\n    <li>For <code>i = 0</code> (value <code>volumes[0]=5</code>): <code>5 &gt; volumes[1]=2</code> is true, and <code>5 &gt; volumes[2]=4</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 1</code> (value <code>volumes[1]=2</code>): <code>2 &gt; volumes[2]=4</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 2</code> (value <code>volumes[2]=4</code>): Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[5, 2, 4]</code> is 2.</p>\r\n\r\n<p>For <code>B = [2, 4, 3]</code> (global indices 1 to 3):</p>\r\n<ul>\r\n    <li>For <code>i = 1</code> (value <code>volumes[1]=2</code>): <code>2 &gt; volumes[2]=4</code> is false. Does not satisfy.</li>\r\n    <li>For <code>i = 2</code> (value <code>volumes[2]=4</code>): <code>4 &gt; volumes[3]=3</code> is true. Satisfies.</li>\r\n    <li>For <code>i = 3</code> (value <code>volumes[3]=3</code>): Satisfies.</li>\r\n</ul>\r\n<p>So, the efficiency of the subarray <code>[2",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_3oct",
        "company_id": 551
    },
    {
        "id": 1566,
        "title": "Minimum Operations to Dispatch Items",
        "problem_statement": "<h1>Minimum Operations to Dispatch Items</h1>\r\n\r\n<h2>Problem Description</h2>\r\n<p>The logistics coordinator at an Amazon fulfillment center needs to dispatch `n` items from different warehouses, the warehouse of the `i`th item is represented by an array `warehouses[i]`. The coordinator is allowed to perform one operation at a time. Each operation is described below:</p>\r\n<ol>\r\n    <li>If the inventory has two or more items, the coordinator can select two items `x` and `y` from the inventory if they are stored in different warehouses. i.e. `warehouses[x] != warehouses[y]` and dispatch both of them.</li>\r\n    <li>If the inventory has one or more items, the coordinator can select one item `x` from the inventory and dispatch it.</li>\r\n</ol>\r\n<p><strong>Note:</strong> After dispatching an item it gets removed from the inventory, and the rest of the items which are currently not dispatched come together keeping the order the same as before.</p>\r\n<p>Given `n` items and an array `warehouses`, find the minimum number of operations that the coordinator has to perform to dispatch all of the items.</p>\r\n\r\n<p>Complete the function `calculateMinShipments` in the editor below.</p>\r\n<p>The function is expected to return an INTEGER.</p>\r\n<p>The function accepts `List<Integer> warehouses` as parameter.</p>\r\n<pre><code class='language-java'>public static int calculateMinShipments(List&lt;Integer&gt; warehouses) {\r\n    // Write your code here\r\n}</code></pre>\r\n\r\n<h2>Examples</h2>\r\n<h3>Example 1:</h3>\r\n<pre><code class='language-text'>Input: warehouses = [2, 9, 7, 8, 8]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The problem statement illustrates the operations to dispatch all items in 3 steps.</p>\r\n\r\n<h3>Example 2:</h3>\r\n<pre><code class='language-text'>Input: warehouses = [1, 3, 1, 2]\r\nOutput: 2</code></pre>\r\n<p><strong>Explanation:</strong> The problem statement illustrates the operations to dispatch all items in 2 steps.</p>\r\n\r\n<h3>Example 3:</h3>\r\n<pre><code class='language-text'>Input: warehouses = [9, 5, 9, 9]\r\nOutput: 3</code></pre>\r\n<p><strong>Explanation:</strong> The problem statement illustrates the operations to dispatch all items in 3 steps.</p>\r\n\r\n<h2>Constraints</h2>\r\n<ul>\r\n    <li>`1 <= n <= 10^5`</li>\r\n    <li>`1 <= warehouses[i] <= 10^9`</li>\r\n</ul>",
        "google_doc_link": null,
        "solution_code": null,
        "company_name": "Amazon_3oct",
        "company_id": 551
    }
]